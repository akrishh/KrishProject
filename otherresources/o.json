{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "TruCare API",
    "version" : "${trucareApiVersion}"
  },
  "servers" : [ {
    "url" : "/casenet-server/api",
    "variables" : { }
  } ],
  "tags" : [ {
    "name" : "aags",
    "description" : "Operations on Member AAGs"
  }, {
    "name" : "admin",
    "description" : "Admin Operations on Trucare admin"
  }, {
    "name" : "allergies",
    "description" : "Operations on Member Allergies"
  }, {
    "name" : "appeals",
    "description" : "Operations on Appeals"
  }, {
    "name" : "assessments",
    "description" : "Operations on Member Assessments"
  }, {
    "name" : "authorizations",
    "description" : "Operations on Member Authorizations"
  }, {
    "name" : "bhp-nodes",
    "description" : "Operations on BhpNodes"
  }, {
    "name" : "birth-events",
    "description" : "Operations on Birth Events"
  }, {
    "name" : "care-opportunities",
    "description" : "Operations on Care Opportunities"
  }, {
    "name" : "care-plans",
    "description" : "Operations on Care Plans"
  }, {
    "name" : "cases",
    "description" : "Operations on Member Cases"
  }, {
    "name" : "claims",
    "description" : "Operations on Authorization Claims"
  }, {
    "name" : "coach-internal",
    "description" : "Operations on Coaches"
  }, {
    "name" : "contacts",
    "description" : "Operations on contacts, addresses and countries"
  }, {
    "name" : "correspondences",
    "description" : "Operations on Internal and External Letters"
  }, {
    "name" : "cost-savings",
    "description" : "Operations on Cost Savings"
  }, {
    "name" : "dashboard-internal",
    "description" : "Operations on Dashboard"
  }, {
    "name" : "determinations",
    "description" : "Operations on Determinations"
  }, {
    "name" : "diagnoses",
    "description" : "Operations on Member Diagnoses"
  }, {
    "name" : "diagnosis-codes",
    "description" : "Operations on Diagnosis Codes"
  }, {
    "name" : "discovery-internal",
    "description" : "API Discovery Service"
  }, {
    "name" : "documents",
    "description" : "Operations with Documents"
  }, {
    "name" : "drugs",
    "description" : "Operations on Drugs"
  }, {
    "name" : "dynamic-api-internal",
    "description" : "Operations on Dynamic API"
  }, {
    "name" : "eligibilities",
    "description" : "Operations on Eligibilities"
  }, {
    "name" : "enrollments",
    "description" : "Operations on HCS Enrollments"
  }, {
    "name" : "environment",
    "description" : "Operations on Environment Configuration"
  }, {
    "name" : "fax-internal",
    "description" : "Operations on Faxes"
  }, {
    "name" : "follow-ups-internal",
    "description" : "Operations on Authorization Follow Ups"
  }, {
    "name" : "hcs-individual-service-plan-internal",
    "description" : "Operations on HCS Individual Service Plans"
  }, {
    "name" : "inpatient-authorizations",
    "description" : "Operations on Member Inpatient Authorizations"
  }, {
    "name" : "iqconnect-internal",
    "description" : "Operations on IQ Connect"
  }, {
    "name" : "key-metrics",
    "description" : "Operations on Key Metrics"
  }, {
    "name" : "logs",
    "description" : "Operations on Logs"
  }, {
    "name" : "medications",
    "description" : "Operations on Member Medications"
  }, {
    "name" : "member-dashboard-configuration-internal",
    "description" : "Operations on Member Dashboard"
  }, {
    "name" : "members",
    "description" : "Operations on Members"
  }, {
    "name" : "member-reconciliation-internal",
    "description" : "Operations on Member Reconciliation"
  }, {
    "name" : "menus-internal",
    "description" : "Operations on Menus"
  }, {
    "name" : "messages",
    "description" : "Operations on Messages"
  }, {
    "name" : "metrics-internal",
    "description" : "Operations on Metrics"
  }, {
    "name" : "modifier-codes",
    "description" : "Operations on Modifier Codes"
  }, {
    "name" : "notes",
    "description" : "Operations on Notes"
  }, {
    "name" : "offline-internal",
    "description" : "Operations on Offline Members"
  }, {
    "name" : "procedure-codes",
    "description" : "Operations on Procedure Codes"
  }, {
    "name" : "product-features",
    "description" : "Operations on Product features"
  }, {
    "name" : "portal-authorizations-internal",
    "description" : "Operations on Provider Portal Authorizations"
  }, {
    "name" : "portal-service-requests-internal",
    "description" : "Operations on Portal Service Requests"
  }, {
    "name" : "providers",
    "description" : "Operations on Providers"
  }, {
    "name" : "quality-incidents-summary-internal",
    "description" : "Operations on Quality Incidents Summary"
  }, {
    "name" : "queues",
    "description" : "Operations on Queues"
  }, {
    "name" : "referrals",
    "description" : "Operations on referrals"
  }, {
    "name" : "requests-for-information",
    "description" : "Operations on Requests for information"
  }, {
    "name" : "rx-authorizations",
    "description" : "Operations on Member Rx Authorizations"
  }, {
    "name" : "screens",
    "description" : "Operations on Screens"
  }, {
    "name" : "service-offers",
    "description" : "Operations on Service Offers"
  }, {
    "name" : "service-requests",
    "description" : "Operations on Service Requests"
  }, {
    "name" : "session",
    "description" : "Operations on the User Session"
  }, {
    "name" : "service-procedure-authorizations",
    "description" : "Operations on Member Service Procedure Authorizations"
  }, {
    "name" : "tasks",
    "description" : "Operations on Tasks"
  }, {
    "name" : "teams",
    "description" : "Operations on Teams"
  }, {
    "name" : "telephony-internal",
    "description" : "Operations on Telephony"
  }, {
    "name" : "time-tracking-internal",
    "description" : "Operations on Time Tracking"
  }, {
    "name" : "tools-resource-links-internal",
    "description" : "Operations on Resource Links"
  }, {
    "name" : "transition-plan-internal",
    "description" : "Operations on Transition Plan"
  }, {
    "name" : "user-dashboard-internal",
    "description" : "Operations on User Dashboard"
  }, {
    "name" : "users",
    "description" : "Operations on Users"
  }, {
    "name" : "xml-review-parser-internal",
    "description" : "Parsers for Clinical and Advisor Review documents"
  } ],
  "paths" : {
    "/dynamic-api" : {
      "post" : {
        "tags" : [ "dynamic-api-internal" ],
        "summary" : "Post generic resource from service",
        "description" : "${description/dynamic-api/postResource.html}",
        "operationId" : "postResource-internal",
        "requestBody" : {
          "description" : "The service information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/metrics" : {
      "get" : {
        "tags" : [ "metrics-internal" ],
        "summary" : "Get Prometheus metrics in text format, works only in continuous integration environment, otherwise produces 404",
        "description" : "${description/metrics/metrics.html}",
        "operationId" : "getMetrics-internal",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          }
        }
      }
    },
    "/aag-configurations/aag-types/{aagTypeValue}" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the AAG configuration",
        "description" : "${description/aag/getAagDefinition.html}",
        "operationId" : "getAagDefinitionForAagTypeAndBhpPath",
        "parameters" : [ {
          "name" : "aagTypeValue",
          "in" : "path",
          "description" : "The AAG Type Value, obtainable from get AAG Types",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AagDefinition"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/aag-configurations/aag-types" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the AAG types",
        "description" : "${description/aag/getAagTypes.html}",
        "operationId" : "getAagTypesForBhpPath",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Posts the AAG request",
        "description" : "${description/aag/postAag.html}",
        "operationId" : "postAag",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The AAG information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AagSubmissionResponse"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/reviews/{reviewId}" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the member's submitted AAG review",
        "description" : "${description/aag/getAagReview.html}",
        "operationId" : "getAagReview",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The member AAG review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AagReview"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "404 - 11002" : {
            "description" : "${AagReviewNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/notes" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the list of note details for AAG",
        "description" : "${description/aag/getAagNotes.html}",
        "operationId" : "getAagNoteInstanceList-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "AAG ID is defaulted to 'DEFAULT' if no value is passed.",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Creates a new note for an AAG",
        "description" : "${description/aag/postAagNote.html}",
        "operationId" : "postAagNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/attachments" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the attachments of an AAG",
        "description" : "${description/aag/getAagAttachments.html}",
        "operationId" : "getsAagAttachments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Creates a new attachment for an AAG",
        "description" : "${description/aag/postAagAttachment.html}",
        "operationId" : "postAagAttachment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/tasks" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Submits a task on an AAG",
        "description" : "${description/aag/postAagTask.html}",
        "operationId" : "postAagTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The task request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AagActionPathRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/review" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Submits a review on an AAG",
        "description" : "${description/aag/postSubmitReview.html}",
        "operationId" : "postSubmitReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAAGReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/void" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Voids a particular Aag",
        "description" : "${description/aag/postVoidAag.html}",
        "operationId" : "postVoidAag-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "void request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/draft-review" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Saves AAG Review for a member",
        "description" : "${description/aag/saveAagReview.html}",
        "operationId" : "savesAAGReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The AAG Review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAAGReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/reviews/{reviewId}/void" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Voids AAG Review for a member",
        "description" : "${description/aag/voidAagReview.html}",
        "operationId" : "voidsAAGReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The member AAG review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The AAG void request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "404 - 11002" : {
            "description" : "${AagReviewNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/outcome" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Posts an outcome on an AAG",
        "description" : "${description/aag/postOutcomeAAG.html}",
        "operationId" : "postOutcome-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The task request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAagOutcomeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/complete" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Complete an AAG",
        "description" : "${description/aag/postCompleteAag.html}",
        "operationId" : "postCompleteAag-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "default" : "INTERNAL"
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Complete request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompleteAagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/reopen" : {
      "put" : {
        "tags" : [ "aags" ],
        "summary" : "Reopen an AAG",
        "description" : "${description/aag/putReopenAag.html}",
        "operationId" : "postReopenAag-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the member's AAG",
        "description" : "${description/aag/getAag.html}",
        "operationId" : "getAag",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Aag"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "aags" ],
        "summary" : "Edit and submit an existing AAG",
        "description" : "${description/aag/putEditSubmittedAag.html}",
        "operationId" : "editSubmittedAag-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "AAG ID is defaulted to 'DEFAULT' if no value is passed.",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The update Aag request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAAGRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10912" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/notes-v2" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Creates a new note for an AAG",
        "description" : "${description/aag/postAagNoteV2.html}",
        "operationId" : "postAagNoteV2-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "aagVersion",
          "in" : "query",
          "description" : "The AAG current version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The AAG current version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/reviews" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the list of AAG reviews",
        "description" : "${description/aag/getAagReviews.html}",
        "operationId" : "getAagReviewList-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AagReview"
                  }
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/numbers" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Retrieves the entire list of aagNumber and aagType available for the Member",
        "description" : "${description/aag/getRetrieveAags.html}",
        "operationId" : "getAagNumbersForMember-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AAGNumberResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/draft-reviews/{reviewId}" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the Member's AAG draft review",
        "description" : "${description/aag/getAagDraftReview.html}",
        "operationId" : "getAagDraftReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The member AAG review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AagReview"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "404 - 11002" : {
            "description" : "${AagReviewNotFoundException}"
          },
          "404 - 11005" : {
            "description" : "${AagReviewIsNotDraftException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          }
        }
      },
      "put" : {
        "tags" : [ "aags" ],
        "summary" : "Save the AAG Draft review",
        "description" : "${description/aag/editSaveAagReview.html}",
        "operationId" : "editSaveAagReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The member AAG review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAAGReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "404 - 11002" : {
            "description" : "${AagReviewNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "404 - 11005" : {
            "description" : "${AagReviewIsNotDraftException}"
          }
        }
      },
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Update and Submit existing AAG draft review",
        "description" : "${description/aag/postSubmitAagDraftReview.html}",
        "operationId" : "updateAndSubmitAagDraftReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The member AAG review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The submit aag review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAAGReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "404 - 11002" : {
            "description" : "${AagReviewNotFoundException}"
          },
          "400 - 11004" : {
            "description" : "${AagVoidedException}"
          },
          "400 - 11003" : {
            "description" : "${AagClosedException}"
          },
          "404 - 11005" : {
            "description" : "${AagReviewIsNotDraftException}"
          }
        }
      }
    },
    "/members/{memberId}/aags/{aagId}/attachments/{attachmentId}/void" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Voids AAG Attachment",
        "description" : "${description/aag/voidAagAttachment.html}",
        "operationId" : "voidAagAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "AAG ID is defaulted to 'DEFAULT' if no value is passed.",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The member AAG review ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Attachment ID is defaulted to 'DEFAULT' if no value is passed.",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/aags-search" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Performs a search for AAGs",
        "description" : "${description/aag/postAagSearch.html}",
        "operationId" : "searchAags",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for AAGs",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AagSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AagSearchResults"
                }
              }
            }
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-aags" : {
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Save the AAG request",
        "description" : "${description/aag/postSaveAag.html}",
        "operationId" : "postSaveAag-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The AAG information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10912" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-aags/{aagId}" : {
      "put" : {
        "tags" : [ "aags" ],
        "summary" : "Edit and save the AAG in draft state",
        "description" : "${description/aag/putEditSaveAagDraft.html}",
        "operationId" : "editSaveAagDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Edit Save AAG Draft information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDraftAagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11006" : {
            "description" : "${AagDraftNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "aags" ],
        "summary" : "Submit the AAG in draft state",
        "description" : "${description/aag/postSubmitAagDraft.html}",
        "operationId" : "submitAagDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "aagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Submit AAG Draft information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDraftAagRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11006" : {
            "description" : "${AagDraftNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-aags/{draftAagId}" : {
      "get" : {
        "tags" : [ "aags" ],
        "summary" : "Gets the member's Draft AAG",
        "description" : "${description/aag/getDraftAag.html}",
        "operationId" : "getDraftAag-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftAagId",
          "in" : "path",
          "description" : "The member AAG ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "AAG ID is defaulted to 'DEFAULT' if no value is passed.",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "aagIdType",
          "in" : "query",
          "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the AAG ID. The type will be defaulted to 'AAG_ID' if no value is passed.",
            "xml" : {
              "name" : "AagIdType",
              "namespace" : "http://www.casenet.com/AagIdType"
            },
            "default" : "AAG_ID",
            "enum" : [ "AAG_ID", "AAG_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Aag"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "404 - 11006" : {
            "description" : "${AagIsNotDraftException}"
          }
        }
      }
    },
    "/admin/bhp-nodes" : {
      "get" : {
        "tags" : [ "admin" ],
        "summary" : "Find a BhpNode by full feed Id path",
        "description" : "${description/admin/getBhpNode.html}",
        "operationId" : "getBhpNode",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BhpNode"
                }
              }
            }
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/admin/system-logo" : {
      "get" : {
        "tags" : [ "admin" ],
        "summary" : "Finds a system logo",
        "description" : "${description/admin/systemLogo.html}",
        "operationId" : "systemLogo-internal_1",
        "responses" : {
          "default" : {
            "content" : {
              "image/*" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assessment-configuration" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get information about that if MCG is enabled for Assessments",
        "description" : "${description/assessments/getAssessmentConfiguration.html}",
        "operationId" : "getAssessmentConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/assessment-metas/{assessmentMetaId}/programs" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Find available programs for program enrollment",
        "description" : "${description/assessment-metas/getAvailablePrograms.html}",
        "operationId" : "getAvailablePrograms",
        "parameters" : [ {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of the assessment type for which available programs are requested",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Program"
                  }
                }
              }
            }
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          }
        }
      }
    },
    "/assessment-metas/question-groups/{assessmentQuestionGroupId}/questions" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Returns a list of questions for a question group",
        "description" : "${description/assessment-metas/getQuestionsForAssessmentQuestionGroup.html}",
        "operationId" : "getAssessmentQuestionsForAssessmentQuestionGroup",
        "parameters" : [ {
          "name" : "assessmentQuestionGroupId",
          "in" : "path",
          "description" : "ID of the assessment question group for which questions are requested",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Starting offset for questions to be loaded. Offset numbering starts with zero.",
          "schema" : {
            "type" : "integer",
            "description" : "Starting offset for questions to be loaded. Offset numbering starts with zero.",
            "format" : "int64",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of questions to be loaded. Fewer than the specified limit will be loaded if the end of the question group is reached.",
          "schema" : {
            "type" : "integer",
            "description" : "Starting offset for questions to be loaded. Offset numbering starts with zero.",
            "format" : "int64",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssessmentQuestionDefinition"
                  }
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10021" : {
            "description" : "${AssessmentQuestionPageSizeExceededException}"
          },
          "404 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10170" : {
            "description" : "${ThirdPartyContentAccessDeniedException}"
          }
        }
      }
    },
    "/assessment-metas/question-groups/{assessmentQuestionGroupId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Find assessment question group by ID",
        "description" : "${description/assessment-metas/getAssessmentQuestionGroup.html}",
        "operationId" : "getAssessmentQuestionGroup",
        "parameters" : [ {
          "name" : "assessmentQuestionGroupId",
          "in" : "path",
          "description" : "ID of the assessment question group that needs to be fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentQuestionGroupDefinition"
                }
              }
            }
          },
          "404 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10170" : {
            "description" : "${ThirdPartyContentAccessDeniedException}"
          }
        }
      }
    },
    "/assessment-metas/specialty-assessments/available-metas" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Gets the available speciality assessments metas",
        "description" : "${description/assessments/getAvailableSpecialties.html}",
        "operationId" : "getAssessmentMetas-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "root"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssessmentMetaLite"
                  }
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/assessment-metas/{assessmentMetaId}/programs-v2" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Find available programs for program enrollment",
        "description" : "${description/assessment-metas/getAvailableProgramsV2.html}",
        "operationId" : "getAvailableProgramsV2-internal",
        "parameters" : [ {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of the assessment type for which available programs are requested",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string",
            "default" : "root"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProgramFull"
                  }
                }
              }
            }
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/assessment-metas/general-assessments/available-metas" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get the available general assessments available at the provided BHP node",
        "description" : "${description/assessments/getGeneralAssessmentMetas.html}",
        "operationId" : "getGeneralAssessmentMetas-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssessmentMetaLite"
                  }
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/assessment-metas/{assessmentMetaId}/bhp-configuration" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get the BHP configuration for an assessment",
        "description" : "${description/assessments/getAssessmentBhpConfiguration.html}",
        "operationId" : "getAssessmentBhpConfiguration-internal",
        "parameters" : [ {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of the assessment meta for which BHP configurations are requested",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentBhpSetupLite"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          }
        }
      }
    },
    "/assessment-metas/{assessmentMetaId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Search for AssessmentMeta",
        "description" : "${description/assessments/getFullAssessmentMeta.html}",
        "operationId" : "getFullAssessmentMeta-internal",
        "parameters" : [ {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of the assessment meta",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "getLatestMcgVersion",
          "in" : "query",
          "description" : "If true and assessment meta is an MCG one, we return the latest version of it, otherwise we return Assessment Meta by its id",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssessmentMetaFull"
                  }
                }
              }
            }
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10303" : {
            "description" : "${AssessmentMetaSourceException}"
          }
        }
      }
    },
    "/assessment-metas/question-groups/{assessmentQuestionGroupId}/all-questions" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Returns list of all questions for a question group",
        "description" : "${description/assessment-metas/getAllAssessmentQuestionsForAssessmentQuestionGroup.html}",
        "operationId" : "getAllAssessmentQuestionsForAssessmentQuestionGroup-internal",
        "parameters" : [ {
          "name" : "assessmentQuestionGroupId",
          "in" : "path",
          "description" : "ID of the assessment question group for which questions are requested",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AssessmentQuestionDefinition"
                  }
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/assessment-search" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Load the member's assessment summary",
        "description" : "${description/assessments/postAssessmentSearch.html}",
        "operationId" : "searchAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for assessment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssessmentSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentSearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 11222" : {
            "description" : "${DuplicateSortColumnException}"
          }
        }
      }
    },
    "/cancel-mcg-request" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Cancel an ongoing MCG connection stored in the user's HTTP session",
        "description" : "${description/assessments/postCancelMcgRequest.html}",
        "operationId" : "cancelMcgRequest-internal",
        "responses" : {
          "400 - 10309" : {
            "description" : "${NoHttpSessionForMcgRequestException}"
          },
          "400 - 10310" : {
            "description" : "${NoHttpConnectionToMcgServerException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/case" : {
      "put" : {
        "tags" : [ "assessments" ],
        "summary" : "Assign case to the assessment",
        "description" : "${description/assessments/assignCaseToAssessment.html}",
        "operationId" : "assignCaseToAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request data, including caseId and assessment version.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssignCaseToAssessmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "assessments" ],
        "summary" : "Remove case from assessment",
        "description" : "${description/assessments/removeCaseFromAssessment.html}",
        "operationId" : "removeCaseFromAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentVersion",
          "in" : "query",
          "description" : "The version of the assessment, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10317" : {
            "description" : "${NoCaseAssociatedWithAssessmentException}"
          }
        }
      }
    },
    "/members/{memberId}/assessment-metas/{assessmentMetaId}/prepopulated-answers" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get the prepopulated answers for a member's assessment.",
        "description" : "${description/assessments/getPrepopulatedAnswers.html}",
        "operationId" : "getPrepopulatedAnswers-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of Assessment Meta for prepopulated answers search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Answer"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10303" : {
            "description" : "${AssessmentMetaSourceException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessment-metas/{assessmentMetaId}/tasks" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get list of tasks for a given member, assessment meta and task status.",
        "description" : "${description/assessments/getAssessmentTask.html}",
        "operationId" : "getAssesmentTasks-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of Assessment Meta for the desired tasks",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of the desired tasks, null for all",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TaskStatus",
                "namespace" : "http://www.casenet.com/TaskStatus"
              },
              "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
            }
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskLite"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          }
        }
      },
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Assign an assessment task to a user, queue or team.",
        "description" : "${description/assessments/assignAssessmentTask.html}",
        "operationId" : "assignAssessmentTask-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "ID of Assessment Meta for Assign",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Assignee of Task",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskAssigneeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10934" : {
            "description" : "${QueueDisabledException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 11207" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10032" : {
            "description" : "${DuplicateSpecialityAssessmentTaskException}"
          },
          "400 - 10304" : {
            "description" : "${AssessmentMetaTypeException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/notes" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get header notes that belong to an assessment",
        "description" : "${description/assessments/getAssessmentHeaderNotes.html}",
        "operationId" : "getAssessmentHeaderNotes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Create a new header note for an assessment",
        "description" : "${description/assessments/createAssessmentHeaderNote.html}",
        "operationId" : "createAssessmentHeaderNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/notes/all" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get all notes that belong to an assessment",
        "description" : "${description/assessments/getAllAssessmentNotes.html}",
        "operationId" : "getAllAssessmentNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ArtifactNote"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/notes-v2" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Create a new header note for an assessment",
        "description" : "${description/assessments/createAssessmentHeaderNoteV2.html}",
        "operationId" : "createAssessmentHeaderNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentVersion",
          "in" : "query",
          "description" : "The current assessment version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The assessment current version",
            "format" : "int64"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/question-groups/{assessmentQuestionGroupId}/notes" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get header notes that belong to an assessment question group",
        "description" : "${description/assessments/getAssessmentQuestionGroupNotes.html}",
        "operationId" : "getAssessmentQuestionGroupNotes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentQuestionGroupId",
          "in" : "path",
          "description" : "The assessment-question-group ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Create a new note for an assessment question group",
        "description" : "${description/assessments/createAssessmentQuestionGroupNote.html}",
        "operationId" : "createAssessmentQuestionGroupNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentQuestionGroupId",
          "in" : "path",
          "description" : "The assessment-question-group ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/question-groups/{assessmentQuestionGroupId}/notes-v2" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Create a new note for an assessment question group",
        "description" : "${description/assessments/createAssessmentQuestionGroupNoteV2.html}",
        "operationId" : "createAssessmentQuestionGroupNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentQuestionGroupId",
          "in" : "path",
          "description" : "The assessment-question-group ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentVersion",
          "in" : "query",
          "description" : "The Assessment current version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The Assessment current version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/signature" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get an assessment signature",
        "description" : "${description/assessments/getSignature.html}",
        "operationId" : "getSignature",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "image/*, application/json" : { },
              "application/json" : { }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10019" : {
            "description" : "${AssessmentSignatureNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load the member's assessment summary",
        "description" : "${description/assessments/getMemberAssessments.html}",
        "operationId" : "getSummaryScreen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentSummaryScreen"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Create a new assessment instance",
        "description" : "${description/assessments/createAssessment.html}",
        "operationId" : "createAssessment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "submit",
          "in" : "query",
          "description" : "A boolean specifying if the assessment should be submitted or left in draft state.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the assessment should be submitted or left in draft state.",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The new assessment data, including answers, notes, outcomes, program enrollments, and signature.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAssessmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10009" : {
            "description" : "${AttemptedToWorkOnClosedTaskException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10010" : {
            "description" : "${AssessmentOfSameTypeAlreadyInProgressException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10016" : {
            "description" : "${InvalidAssessmentSignatureException}"
          },
          "400 - 10032" : {
            "description" : "${DuplicateSpecialityAssessmentTaskException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10141" : {
            "description" : "${AssessmentQuestionDefinitionNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10165" : {
            "description" : "${MemberAlreadyEnrolledInProgramException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          },
          "400 - 10170" : {
            "description" : "${ThirdPartyContentAccessDeniedException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          },
          "400 - 10306" : {
            "description" : "${AssessmentAdditionalAnswerValidationException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load an assessment by ID",
        "description" : "${description/assessments/getAssessmentScreen.html}",
        "operationId" : "getAssessmentScreen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include-initial-questions",
          "in" : "query",
          "description" : "A boolean specifying if the first 15 questions from the first question group should be included.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the first 15 questions from the first question group should be included.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentScreen"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "put" : {
        "tags" : [ "assessments" ],
        "summary" : "Update an existing assessment instance",
        "description" : "${description/assessments/updateAssessment.html}",
        "operationId" : "updateAssessment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "submit",
          "in" : "query",
          "description" : "A boolean specifying if the assessment should be submitted or left in draft state.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the assessment should be submitted or left in draft state.",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The new assessment data, including answers, notes, outcomes, program enrollments, and signature.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAssessmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10009" : {
            "description" : "${AttemptedToWorkOnClosedTaskException}"
          },
          "400 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10016" : {
            "description" : "${InvalidAssessmentSignatureException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10141" : {
            "description" : "${AssessmentQuestionDefinitionNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10018" : {
            "description" : "${BadTaskIdException}"
          },
          "400 - 10165" : {
            "description" : "${MemberAlreadyEnrolledInProgramException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          },
          "400 - 10170" : {
            "description" : "${ThirdPartyContentAccessDeniedException}"
          },
          "400 - 10306" : {
            "description" : "${AssessmentAdditionalAnswerValidationException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/void-info" : {
      "put" : {
        "tags" : [ "assessments" ],
        "summary" : "Void an assessment",
        "description" : "${description/assessments/voidAssessment.html}",
        "operationId" : "voidAssessment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/void" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Void an assessment",
        "description" : "${description/assessments/voidAssessment2.html}",
        "operationId" : "voidAssessmentV2-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, obtainable when the member is set offline",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequestBase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/care-plan-builder-recommendations" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Returns care plan elements from a triggered assessments",
        "description" : "${description/assessments/getElementsFromTriggeredAssessment.html}",
        "operationId" : "getElementsFromTriggeredAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanElementRecommendationArtifact"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/{assessmentId}/care-plan-builder-recommendations/delete" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Delete list of recommendation elements from care plan builder for given assessment",
        "description" : "${description/assessments/deleteCarePlanBuilderRecommendations.html}",
        "operationId" : "deleteCarePlanBuilderRecommendations-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "List of care plan builder recommendation element identifiers that should be deleted",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdentifiersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/care-plan-builder-recommendations" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Returns care plan elements from a triggered assessments",
        "description" : "${description/assessments/getElementRecommendationsByMember.html}",
        "operationId" : "getCarePlanElementRecommendationsByMember-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanElementRecommendationArtifact"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/status" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Get the status of all assessments available for a member",
        "description" : "${description/assessments/getAssessmentsStatus.html}",
        "operationId" : "getAssessmentsStatus-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentStatusResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/cases" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load the member's cases that assessments assigned to them",
        "description" : "${description/assessments/getAssessmentCases.html}",
        "operationId" : "getAssessmentCases-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseLiteResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load an assessment by task ID",
        "description" : "${description/assessments/getAssessmentScreenForTask.html}",
        "operationId" : "getAssessmentScreenForTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include-initial-questions",
          "in" : "query",
          "description" : "A boolean specifying if the first 15 questions from the first question group should be included.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the first 15 questions from the first question group should be included.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentScreen"
                }
              }
            }
          },
          "403 - 10000" : {
            "description" : "${TaskAlreadyAssignedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "403 - 10003" : {
            "description" : "${UserNotInTeamException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/assessment-metas/{assessmentMetaId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load a screen to create a new specialty assessment",
        "description" : "${description/assessments/getStartAssessmentScreen.html}",
        "operationId" : "getStartAssessmentScreen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "The assessment type ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include-initial-questions",
          "in" : "query",
          "description" : "A boolean specifying if the first 15 questions from the first question group should be included.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the first 15 questions from the first question group should be included.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentScreen"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10010" : {
            "description" : "${AssessmentOfSameTypeAlreadyInProgressException}"
          },
          "400 - 10170" : {
            "description" : "${ThirdPartyContentAccessDeniedException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/care-plan-builder-assessments" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Returns a list of assessments for a member with at least one suggested Care Plan element",
        "description" : "${description/assessments/getCarePlanBuilderAssessments.html}",
        "operationId" : "getCarePlanBuilderAssessments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanBuilderAssessment"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/triggers" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Validate an assessment and get the triggers",
        "description" : "${description/assessments/assessmentTrigger.html}",
        "operationId" : "assessmentValidateAndTrigger-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The  assessment data, including answers, notes, outcomes, program enrollments that needs to be validated",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssessmentValidateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssessmentAnswerTriggeredArtifacts"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10305" : {
            "description" : "${DuplicateQuestionAnswersException}"
          },
          "500 - 10311" : {
            "description" : "${McgConnectionException}"
          },
          "400 - 10307" : {
            "description" : "${McgConnectionAbortedException}"
          },
          "504 - 10308" : {
            "description" : "${McgConnectionTimeOutException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments/care-plan-builder-recommendations/delete" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Delete list of recommendation elements from care plan builder for all assessments",
        "description" : "${description/assessments/deleteCarePlanBuilderRecommendationsMultiAssessment.html}",
        "operationId" : "deleteCarePlanBuilderRecommendationsMultiAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "List of care plan builder recommendation element identifiers that should be deleted",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdentifiersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments-v2" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Create a new assessment instance",
        "description" : "${description/assessments/createAssessmentV2.html}",
        "operationId" : "createAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The new assessment data, including answers, notes, outcomes, program enrollments and triggers",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAssessmentTriggerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10009" : {
            "description" : "${AttemptedToWorkOnClosedTaskException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10010" : {
            "description" : "${AssessmentOfSameTypeAlreadyInProgressException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10032" : {
            "description" : "${DuplicateSpecialityAssessmentTaskException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10141" : {
            "description" : "${AssessmentQuestionDefinitionNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10165" : {
            "description" : "${MemberAlreadyEnrolledInProgramException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "400 - 11525" : {
            "description" : "${CannotAddInvalidMedicationStatusException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments-v2/{assessmentId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load an assessment by ID",
        "description" : "${description/assessments/getAssessment-v2.html}",
        "operationId" : "getAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseAssessment"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/assessments-v2/assessment-metas/{assessmentMetaId}" : {
      "get" : {
        "tags" : [ "assessments" ],
        "summary" : "Load a screen to create a new specialty assessment",
        "description" : "${description/assessments/getNewAssessmentV2.html}",
        "operationId" : "getStartAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "assessmentMetaId",
          "in" : "path",
          "description" : "The assessment instance ID, obtainable from the assessment summary",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "query",
          "description" : "If the taskId is sent, we will populate the task-related data (ID, user, referral source) from that specific task, otherwise we will not include any task-related data into the response.",
          "schema" : {
            "type" : "string",
            "description" : "If the taskId is sent, we will populate the task-related data (ID, user, referral source) from that specific task, otherwise we will not include any task-related data into the response."
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseAssessment"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10010" : {
            "description" : "${AssessmentOfSameTypeAlreadyInProgressException}"
          },
          "400 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-assessments" : {
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Creates draft assessment for a member",
        "description" : "${description/assessments/createDraftAssessment.html}",
        "operationId" : "createDraftAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The assessment data to create a draft",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAssessmentTriggerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10009" : {
            "description" : "${AttemptedToWorkOnClosedTaskException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10010" : {
            "description" : "${AssessmentOfSameTypeAlreadyInProgressException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10032" : {
            "description" : "${DuplicateSpecialityAssessmentTaskException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10141" : {
            "description" : "${AssessmentQuestionDefinitionNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          },
          "400 - 10302" : {
            "description" : "${AssessmentMetaStatusException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10305" : {
            "description" : "${DuplicateQuestionAnswersException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "400 - 11525" : {
            "description" : "${CannotAddInvalidMedicationStatusException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-assessments/{draftAssessmentId}" : {
      "put" : {
        "tags" : [ "assessments" ],
        "summary" : "Update a draft assessment",
        "description" : "${description/assessments/updateDraftAssessment.html}",
        "operationId" : "updateDraftAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftAssessmentId",
          "in" : "path",
          "description" : "The draft assessment instance Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new assessment data, including answers, notes, outcomes",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAssessmentTriggerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10009" : {
            "description" : "${AttemptedToWorkOnClosedTaskException}"
          },
          "400 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10141" : {
            "description" : "${AssessmentQuestionDefinitionNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10018" : {
            "description" : "${BadTaskIdException}"
          },
          "400 - 10165" : {
            "description" : "${MemberAlreadyEnrolledInProgramException}"
          },
          "400 - 10305" : {
            "description" : "${DuplicateQuestionAnswersException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "400 - 11525" : {
            "description" : "${CannotAddInvalidMedicationStatusException}"
          }
        }
      },
      "post" : {
        "tags" : [ "assessments" ],
        "summary" : "Submit a draft assessment",
        "description" : "${description/assessments/submitDraftAssessment.html}",
        "operationId" : "submitDraftAssessment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftAssessmentId",
          "in" : "path",
          "description" : "The draft assessment instance Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new assessment data, including answers, notes, outcomes, program enrollments and triggers",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAssessmentTriggerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10009" : {
            "description" : "${AttemptedToWorkOnClosedTaskException}"
          },
          "404 - 10004" : {
            "description" : "${AssessmentMetaNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10010" : {
            "description" : "${AssessmentOfSameTypeAlreadyInProgressException}"
          },
          "400 - 10014" : {
            "description" : "${AssessmentQuestionGroupDefinitionNotFoundException}"
          },
          "400 - 10032" : {
            "description" : "${DuplicateSpecialityAssessmentTaskException}"
          },
          "400 - 10031" : {
            "description" : "${AssessmentAlreadyCompletedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10141" : {
            "description" : "${AssessmentQuestionDefinitionNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10165" : {
            "description" : "${MemberAlreadyEnrolledInProgramException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10305" : {
            "description" : "${DuplicateQuestionAnswersException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "400 - 11525" : {
            "description" : "${CannotAddInvalidMedicationStatusException}"
          }
        }
      }
    },
    "/documents/configuration" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Gets the configuration to create a new attachment",
        "description" : "${description/documents/getConfiguration.html}",
        "operationId" : "getAttachmentConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/document-library-search" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Search for library documents",
        "description" : "${description/documents/postDocumentLibrarySearch.html}",
        "operationId" : "documentLibrarySearch-internal",
        "requestBody" : {
          "description" : "The document search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentLibrarySearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentLibrarySearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/documents/{documentId}/metadata" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Gets an existing attachment metadata",
        "description" : "${description/documents/getMetadata.html}",
        "operationId" : "getAttachmentMetadata",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "description" : "The document ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentInfo"
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/documents/{documentId}/file" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Gets an existing attachment file",
        "description" : "${description/documents/getFile.html}",
        "operationId" : "getAttachmentFile_1",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "description" : "The document ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : { },
              "application/json" : { }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/authorization-global-search-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the authorization search configuration",
        "description" : "${description/authorizations/getAuthorizationGlobalSearchConfiguration.html}",
        "operationId" : "getAuthorizationGlobalSearchConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationGlobalSearchConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/authorization-global-search" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Performs a search for authorizations",
        "description" : "${description/authorizations/postAuthorizationGlobalSearch.html}",
        "operationId" : "globalSearchAuthorizations-internal",
        "parameters" : [ {
          "name" : "includeDrafts",
          "in" : "query",
          "description" : "Indicates whether draft authorizations are included in the results. Draft authorizations are not returned by default",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether draft authorizations are included in the results. Draft authorizations are not returned by default",
            "default" : false
          }
        }, {
          "name" : "max",
          "in" : "query",
          "description" : "The maximum number of authorizations. If value is less or equal 0, it is defaulted to the value specified in the property DEFAULT_SEARCH_MAX_RESULTS.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for authorizations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationGlobalSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationGlobalSearchResults"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/{lineItemNumber}" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets a line item",
        "description" : "${description/authorizations/getLineItem.html}",
        "operationId" : "getLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItem"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/line-item-reviews" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the line item reviews for the given authorization",
        "description" : "${description/authorizations/getAuthorizationLineItemReviews.html}",
        "operationId" : "getLineItemReviews",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "includeDrafts",
          "in" : "query",
          "description" : "Indicates whether draft reviews are included in the results. Draft reviews are returned by default",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether draft reviews are included in the results. Draft reviews are returned by default",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationLineItemReview"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/line-item-reviews-v2" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the line items' reviews on an authorization.",
        "description" : "${description/authorizations/getPaginatedAuthorizationLineItemReviews.html}",
        "operationId" : "getLineItemReviews2-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "includeDrafts",
          "in" : "query",
          "description" : "Indicates whether draft reviews are included in the results. Draft reviews are returned by default",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether draft reviews are included in the results. Draft reviews are returned by default",
            "default" : true
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "REVIEW_DATE",
            "enum" : [ "REVIEW_TYPE", "REVIEW_DATE", "REVIEWED_BY", "CRITERIA" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LineItemReviewSearchResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/{lineItemNumber}/determination" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the line item determination",
        "description" : "${description/authorizations/getDetermination.html}",
        "operationId" : "getDetermination",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Determination"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10072" : {
            "description" : "${DeterminationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Determines a line item",
        "description" : "${description/authorizations/postDetermination.html}",
        "operationId" : "determineLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "claimDeterminationTask",
          "in" : "query",
          "description" : "Claims the determination task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the determination task if not assigned to the user",
            "default" : false
          }
        }, {
          "name" : "claimEvaluateAdvisorReviewTask",
          "in" : "query",
          "description" : "Claims the evaluate advisor review task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the evaluate advisor review task if not assigned to the user",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The line item determination request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeterminationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemDeterminationResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10085" : {
            "description" : "${AuthorizationAlreadyDischargedException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "400 - 10255" : {
            "description" : "${ConcurrentReviewNotEnabledException}"
          },
          "400 - 10256" : {
            "description" : "${InvalidConcurrentReviewDueDateException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets entire authorization",
        "description" : "${description/authorizations/getAuthorization.html}",
        "operationId" : "getAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Authorization"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      },
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates entire authorization",
        "description" : "${description/authorizations/putAuthorization.html}",
        "operationId" : "updateAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "claimDeterminationTask",
          "in" : "query",
          "description" : "Claims the determination task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the determination task if not assigned to the user",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        }, {
          "name" : "rejectLocationDatesIfWarning",
          "in" : "query",
          "description" : "Indicates whether to skip the validation on line item service date against provider location start and end dates",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to skip the validation on line item service date against provider location start and end dates",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update authorization request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAuthorizationResponse"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "400 - 10203" : {
            "description" : "${InvalidServicingFacilityLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10929" : {
            "description" : "${InvalidNotificationTaskException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10204" : {
            "description" : "${LineItemInvalidUpdateException}"
          },
          "400 - 10151" : {
            "description" : "${InvalidRequestedUnitsException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "400 - 10123" : {
            "description" : "${LineItemAlreadyVoidedException}"
          },
          "400 - 10093" : {
            "description" : "${InpatientLineItemGapDatesException}"
          },
          "400 - 10091" : {
            "description" : "${InpatientLineItemOverlappingDatesException}"
          },
          "400 - 10092" : {
            "description" : "${TaskContainsDeterminedLineItemException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10269" : {
            "description" : "${OonReasonNotAllowedWhenInNetworkException}"
          },
          "400 - 10128" : {
            "description" : "${ObsoleteProviderException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/diagnoses" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the diagnosis information for an authorization",
        "description" : "${description/authorizations/getAuthorizationDiagnosis.html}",
        "operationId" : "getAuthorizationDiagnosis",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationDiagnosis"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/header" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the header of an authorization",
        "description" : "${description/authorizations/getAuthorizationHeader.html}",
        "operationId" : "getAuthorizationHeader",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationHeader"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/requesting-provider" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the requesting provider information for an authorization",
        "description" : "${description/authorizations/getAuthorizationRequestingProvider.html}",
        "operationId" : "getAuthorizationRequestingProvider",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestingProvider"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/request-for-information" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the requests for information (RFIs) on an authorization",
        "description" : "${description/authorizations/getAuthorizationRequestForInformation.html}",
        "operationId" : "getAuthorizationRequestForInformation",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestForInformation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Create a request for information (RFI) on an authorization",
        "description" : "${description/rfi/postRfis.html}",
        "operationId" : "postRFIAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "allowForLockedAuth",
          "in" : "query",
          "description" : "Create the RFI even for locked authorizations",
          "schema" : {
            "type" : "boolean",
            "description" : "Create the RFI even for locked authorizations",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Request For Information Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRequestForInformationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateRequestForInformationResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 11301" : {
            "description" : "${RequestTypeAlreadyUsedException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 11302" : {
            "description" : "${InvalidReceivedDateException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/{lineItemNumber}/determination/additional-line-items" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Determines multiple line items",
        "description" : "${description/authorizations/getAdditionalLineItemsForDetermination.html}",
        "operationId" : "getAdditionalLineItemsForDetermination-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "decisionStatus",
          "in" : "query",
          "description" : "Decision status to apply in the line item determination",
          "schema" : {
            "type" : "string",
            "description" : "Decision status to apply in the line item determination",
            "xml" : {
              "name" : "DeterminationRequestStatus",
              "namespace" : "http://www.casenet.com/DeterminationRequestStatus"
            },
            "enum" : [ "APPROVE", "DENY", "VOID", "PEND" ]
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LineItem"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/request-for-information/count" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get Requet-for-informtion count for each authorization",
        "description" : "${description/authorizations/getCountAuthorizationRequestForInformation.html}",
        "operationId" : "getRFICount-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets a page of authorization line items.",
        "description" : "${description/authorizations/getAuthorizationLineItemsPage.html}",
        "operationId" : "getLineItems-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "LINE_ITEM_NUMBER",
            "enum" : [ "LINE_ITEM_NUMBER", "STAY_LEVEL", "FROM_DATE", "TO_DATE", "SERVICE_TYPE", "STATUS", "SERVICING_PROVIDER", "PROCEDURE_CODE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LineItemPaginatedResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/appeal-search" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Search for appeals on an authorization",
        "description" : "${description/authorizations/postAppealSearch.html}",
        "operationId" : "searchAppeals-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for appeals",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppealSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppealSearchResults"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/header-v2" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets authorization header with servicing facility information.",
        "description" : "${description/authorizations/getAuthorizationHeader2.html}",
        "operationId" : "getAuthorizationHeader2-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationHeader2"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/attachments" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the attachments of an authorization",
        "description" : "${description/authorizations/getAuthorizationAttachments.html}",
        "operationId" : "getAuthorizationAttachments",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Creates a new attachment for an authorization",
        "description" : "${description/authorizations/postAuthAttachment.html}",
        "operationId" : "postAuthorizationAttachment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/attachments/count" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get count of attachments for an authorization",
        "description" : "${description/authorizations/getAuthorizationAttachmentsCount.html}",
        "operationId" : "AuthorizationAttachmentsCount-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/attachments-v2" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Creates new attachments for an authorization",
        "description" : "${description/authorizations/postAuthorizationAttachments.html}",
        "operationId" : "addAttachments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "createAttachmentsRequest" : {
                    "$ref" : "#/components/schemas/CreateAttachmentsRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10514" : {
            "description" : "${UploadFileException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/cwqi-review-page" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets CWQI Page",
        "description" : "${description/authorizations/getCWQIReviewPage.html}",
        "operationId" : "getCareWebQIRedirectPage-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "diagnosisCodeId for searchParam",
          "in" : "query",
          "description" : "The internal diagnosis code id to be passed to the CareWebQI guideline search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "procedureCodeId for searchParam",
          "in" : "query",
          "description" : "The internal procedure code id to be passed to the CareWebQI guideline search",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemProcedureCodeId",
          "in" : "query",
          "description" : "The line item's internal procedure code id to be passed to the CareWebQI document request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "query",
          "description" : "The line item's number to determine lineItem specific data",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "returnUrl",
          "in" : "query",
          "description" : "Return url to which the CarewebQI application should send data to.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/notes" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the notes of an authorization",
        "description" : "${description/authorizations/getAuthorizationNotes.html}",
        "operationId" : "getAuthorizationNotes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Creates a new note for an authorization",
        "description" : "${description/authorizations/postAuthNote.html}",
        "operationId" : "postAuthorizationNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member internal authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/determination" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Determines multiple line items",
        "description" : "${description/authorizations/postMultiLineItemDetermination.html}",
        "operationId" : "determineMultipleLineItems-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "claimDeterminationTask",
          "in" : "query",
          "description" : "Claims the determination task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the determination task if not assigned to the user",
            "default" : false
          }
        }, {
          "name" : "claimEvaluateAdvisorReviewTask",
          "in" : "query",
          "description" : "Claims the evaluate advisor review task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the evaluate advisor review task if not assigned to the user",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The line item determination request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultiLineItemDeterminationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemDeterminationResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10231" : {
            "description" : "${NotDeterminableLineItemException}"
          },
          "400 - 10123" : {
            "description" : "${LineItemAlreadyVoidedException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/lock" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Locks an authorization",
        "description" : "${description/authorizations/lockAuthorization.html}",
        "operationId" : "lockAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Lock Reason",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "authorizations" ],
        "summary" : "Deletes the lock on an authorization and submit it for processing",
        "description" : "${description/authorizations/unlockAndSubmitAuthorization.html}",
        "operationId" : "unlockAndSubmitAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10903" : {
            "description" : "${AuthorizationProcessingFailedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/cwqi-auth-request" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Prepares a CareWebQI request for interacting with CareWebQI APIs from an external client.",
        "description" : "${description/authorizations/prepareCareWebQIRequest.html}",
        "operationId" : "prepareCareWebQIRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID, contained as patient ID in a CareWebQIAuthRequest.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The member ID, contained as patient ID in a CareWebQIAuthRequest."
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Details used in initiating a CareWebQI AuthRequest session.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CareWebQIRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CareWebQIRequest"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/notes/count" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the notes count of an authorization",
        "description" : "${description/authorizations/getAuthorizationNotesCount.html}",
        "operationId" : "getNotesCount-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits an authorization request",
        "description" : "${description/authorizations/postAuthorization.html}",
        "operationId" : "runPrescreenAndPostAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "runPrescreenBeforeAuthSubmission",
          "in" : "query",
          "description" : "Indicates if pre-screen has to be run before creating an authorization.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if pre-screen has to be run before creating an authorization.",
            "default" : false
          }
        }, {
          "name" : "createPrescreenNote",
          "in" : "query",
          "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationSubmissionResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10222" : {
            "description" : "${DuplicateRxLineItemSameDrugAndDateOverlapException}"
          },
          "400 - 10093" : {
            "description" : "${InpatientLineItemGapDatesException}"
          },
          "400 - 10091" : {
            "description" : "${InpatientLineItemOverlappingDatesException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/{lineItemNumber}/line-item-reviews/{lineItemReviewId}/void-info" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Void a review of a line item in an authorization",
        "description" : "${description/authorizations/postVoidReview.html}",
        "operationId" : "voidLineItemReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lineItemReviewId",
          "in" : "path",
          "description" : "The review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10228" : {
            "description" : "${LineItemReviewNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/attachments/{attachmentId}/void-info" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Void an attachment of an authorization",
        "description" : "${description/attachments/postVoidAttachment.html}",
        "operationId" : "voidAuthorizationAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/void" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Voids an authorization",
        "description" : "${description/authorizations/voidAuthorization.html}",
        "operationId" : "voidAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The void authorization object request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VoidAuthorizationResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-items/{lineItemNumber}/void" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Voids a line item of an authorization",
        "description" : "${description/authorizations/voidLineItem.html}",
        "operationId" : "voidAuthorizationLineItem-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to void a line item of a locked authorization.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to void a line item of a locked authorization.",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The line item version and authorization version object request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LineItemVoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VoidLineItemAuthorizationResponse"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10123" : {
            "description" : "${LineItemAlreadyVoidedException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "404 - 10167" : {
            "description" : "${AuthorizationLockedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/appeals" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits an appeal request on an authorization",
        "description" : "${description/appeals/postAppeal.html}",
        "operationId" : "postAuthorizationAppeal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Appeal Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAuthorizationAppealRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAppealSummary"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10212" : {
            "description" : "${LineItemAlreadyAppealedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10220" : {
            "description" : "${MissingUrgencyChangeReasonException}"
          },
          "400 - 10219" : {
            "description" : "${InvalidUrgencyChangeReasonException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-advisor-reviews/{reviewId}/draft" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets a draft line item advisor review",
        "description" : "${description/review/getLineItemAdvisorReviewDraft.html}",
        "operationId" : "getDraftLineItemAdvisorReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The line item review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationLineItemReview"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "404 - 10228" : {
            "description" : "${LineItemReviewNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/draft" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets entire draft authorization",
        "description" : "${description/authorizations/getDraftAuthorization.html}",
        "operationId" : "getDraftAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Authorization"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/reopen" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Reopen a specific authorization",
        "description" : "${description/authorizations/reopenAuthorization.html}",
        "operationId" : "reopenAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10034" : {
            "description" : "${AlreadyOpenException}"
          },
          "400 - 10041" : {
            "description" : "${OperationNotSupportedOnDraftAuthorizationException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-advisor-review/draft" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Create new draft line item advisor review",
        "description" : "${description/review/postLineItemAdvisorReviewDraft.html}",
        "operationId" : "postDraftLineItemAdvisorReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Line Item Advisor Review request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLineItemAdvisorReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemReviewSummary"
                }
              }
            }
          },
          "400 - 10223" : {
            "description" : "${LineItemReviewDisabledInnerReviewTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10225" : {
            "description" : "${LineItemReviewInvalidXmlException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10226" : {
            "description" : "${DraftReviewActiveByOtherUserException}"
          },
          "400 - 10227" : {
            "description" : "${LineItemAlreadyHasDraftReviewException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-clinical-review/draft" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Create new draft line item clinical review",
        "description" : "${description/review/postLineItemClinicalReviewDraft.html}",
        "operationId" : "postDraftLineItemClinicalReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Line Item Clinical Review request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLineItemClinicalReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemReviewSummary"
                }
              }
            }
          },
          "400 - 10223" : {
            "description" : "${LineItemReviewDisabledInnerReviewTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10225" : {
            "description" : "${LineItemReviewInvalidXmlException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10226" : {
            "description" : "${DraftReviewActiveByOtherUserException}"
          },
          "400 - 10227" : {
            "description" : "${LineItemAlreadyHasDraftReviewException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/determination-due-date-history-search" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the determination due date history for all line items in an authorization",
        "description" : "${description/authorizations/postDeterminationDueDateHistorySearch.html}",
        "operationId" : "getDeterminationDueDateHistory-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Line Determination Due Date History Search request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeterminationDueDateHistorySearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeterminationDueDateHistoryResults"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-clinical-reviews/{reviewId}/draft" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets a draft line item clinical review",
        "description" : "${description/review/getLineItemClinicalReviewDraft.html}",
        "operationId" : "getDraftLineItemClinicalReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The line item review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationLineItemReview"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "404 - 10228" : {
            "description" : "${LineItemReviewNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/discharges-readmissions-search" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Search for discharges and readmit",
        "description" : "${description/authorizations/searchDischargeAndReadmission.html}",
        "operationId" : "searchDischargesAndReadmissions-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for discharge readmission",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DischargeReadmissionSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DischargeReadmissionSearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/partial-update" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates parts of authorization",
        "description" : "${description/authorizations/patchAuthorization.html}",
        "operationId" : "partiallyUpdateAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "claimDeterminationTask",
          "in" : "query",
          "description" : "Claims the determination task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the determination task if not assigned to the user",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update authorization request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAuthorizationRequestAuthorizationHeaderRequestCreateLineItemRequestUpdateLineItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAuthorizationResponse"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "400 - 10203" : {
            "description" : "${InvalidServicingFacilityLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10929" : {
            "description" : "${InvalidNotificationTaskException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10151" : {
            "description" : "${InvalidRequestedUnitsException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "400 - 10123" : {
            "description" : "${LineItemAlreadyVoidedException}"
          },
          "400 - 10093" : {
            "description" : "${InpatientLineItemGapDatesException}"
          },
          "400 - 10091" : {
            "description" : "${InpatientLineItemOverlappingDatesException}"
          },
          "400 - 10092" : {
            "description" : "${TaskContainsDeterminedLineItemException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10269" : {
            "description" : "${OonReasonNotAllowedWhenInNetworkException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-advisor-review" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Create new line item advisor review",
        "description" : "${description/review/postLineItemAdvisorReview.html}",
        "operationId" : "postLineItemAdvisorReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "draftReviewId",
          "in" : "query",
          "description" : "Draft id in case we are submitting a draft review",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Line Item Advisor Review request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLineItemAdvisorReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemReviewSummary"
                }
              }
            }
          },
          "400 - 10223" : {
            "description" : "${LineItemReviewDisabledInnerReviewTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10225" : {
            "description" : "${LineItemReviewInvalidXmlException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10228" : {
            "description" : "${LineItemReviewNotFoundException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-clinical-review" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Create new line item clinical review",
        "description" : "${description/review/postLineItemClinicalReview.html}",
        "operationId" : "postLineItemClinicalReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "runBRE",
          "in" : "query",
          "description" : "Optional, defaults to true. Indicates whether to trigger the Business Rules when submitting this Clinical Review, which may auto-approve line items. (Must also be enabled for the line item types in the Administrative Console.)",
          "schema" : {
            "type" : "boolean",
            "description" : "Optional, defaults to true. Indicates whether to trigger the Business Rules when submitting this Clinical Review, which may auto-approve line items. (Must also be enabled for the line item types in the Administrative Console.)",
            "default" : true
          }
        }, {
          "name" : "draftReviewId",
          "in" : "query",
          "description" : "Draft id in case we are submitting a draft review",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Line Item Clinical Review request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLineItemClinicalReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemReviewSummary"
                }
              }
            }
          },
          "400 - 10223" : {
            "description" : "${LineItemReviewDisabledInnerReviewTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10225" : {
            "description" : "${LineItemReviewInvalidXmlException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10228" : {
            "description" : "${LineItemReviewNotFoundException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-advisor-review/{reviewId}/draft" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Update a draft line item advisor review",
        "description" : "${description/review/putLineItemAdvisorReviewDraft.html}",
        "operationId" : "putDraftLineItemAdvisorReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Line Item Advisor Review update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLineItemAdvisorReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10223" : {
            "description" : "${LineItemReviewDisabledInnerReviewTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10234" : {
            "description" : "${NotEditableLineItemReviewException}"
          },
          "400 - 10227" : {
            "description" : "${LineItemAlreadyHasDraftReviewException}"
          },
          "400 - 10226" : {
            "description" : "${DraftReviewActiveByOtherUserException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/line-item-clinical-review/{reviewId}/draft" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Update a draft line item clinical review",
        "description" : "${description/review/putLineItemClinicalReviewDraft.html}",
        "operationId" : "putDraftLineItemClinicalReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Line Item Clinical Review update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLineItemClinicalReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10223" : {
            "description" : "${LineItemReviewDisabledInnerReviewTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10225" : {
            "description" : "${LineItemReviewInvalidXmlException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10234" : {
            "description" : "${NotEditableLineItemReviewException}"
          },
          "400 - 10227" : {
            "description" : "${LineItemAlreadyHasDraftReviewException}"
          },
          "400 - 10226" : {
            "description" : "${DraftReviewActiveByOtherUserException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/close" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Closes a specific authorization",
        "description" : "${description/authorizations/closeAuthorization.html}",
        "operationId" : "closeAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10232" : {
            "description" : "${ActualLOSNotMatchingException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10230" : {
            "description" : "${AuthorizationClosureException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/link" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Creates a link between IPAuthorization and SPAuthorization",
        "description" : "${description/authorizations/createLinkIPAuthToSPAuth.html}",
        "operationId" : "createLinkIPAuthToSPAuth-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "otherAuthorizationId",
          "in" : "query",
          "description" : "otherAuthorizationId as a query param",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "otherAuthorizationId as a query param"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/duplicate-check" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Check if the given line items are duplicated into an stored authorization",
        "description" : "${description/authorizations/postAuthDuplicatedCheck.html}",
        "operationId" : "checkIfLineItemsAreDuplicated-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authToExclude",
          "in" : "query",
          "description" : "The internal authorization ID that we don't take into account for the duplication",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationType",
          "in" : "query",
          "description" : "Type of authorization.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization.",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          }
        } ],
        "requestBody" : {
          "description" : "The request body with the line items that we want to check",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LineItemListDuplicateCheckRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/draft-appeals" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Create Draft appeal request on an authorization",
        "description" : "${description/authorizations/postDraftAppeal.html}",
        "operationId" : "createDraftAppeal-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Appeal Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAuthorizationAppealRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/locked" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Returns locked authorizations ids",
        "description" : "${description/authorizations/getLockedAuthorizationIds.html}",
        "operationId" : "getLockedAuthorizationIds-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIds",
          "in" : "query",
          "description" : "List of authorization ids to check",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/case-association" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Assign or Unassign a case to authorization",
        "description" : "${description/authorizations/assignCaseToAuthorization.html}",
        "operationId" : "assignCaseToAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for appeals",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationCaseAssociationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/draft-notifications" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Save an authorization notification draft",
        "description" : "${description/authorizations/postSaveAuthNotification.html}",
        "operationId" : "saveAuthorizationNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "saveAuthNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateAuthorizationNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10502" : {
            "description" : "${LetterTemplateNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/linked-authorizations" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets a list of linked authorization",
        "description" : "${description/authorizations/getLinkedAuthorizationBaseList.html}",
        "operationId" : "getLinkedAuthorizationBaseList-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LinkedAuthorizationBase"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/notifications" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submit an authorization notification",
        "description" : "${description/authorizations/postSubmitAuthNotification.html}",
        "operationId" : "submitAuthorizationNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "claimNotificationTask",
          "in" : "query",
          "description" : "Claims the notification task",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the notification task",
            "default" : false
          }
        }, {
          "name" : "closeNotificationTask",
          "in" : "query",
          "description" : "Closes the notification task",
          "schema" : {
            "type" : "boolean",
            "description" : "Closes the notification task",
            "default" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "submitAuthNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateAuthorizationNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/appealable-line-items" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Returns appealable line items",
        "description" : "${description/authorizations/getAppealableLineItems.html}",
        "operationId" : "getAppealableLineItems-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppealableLineItemResponse"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/authorization-search-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the configuration for the authorization search",
        "description" : "${description/authorizations-search/getAuthorizationSearchConfiguration.html}",
        "operationId" : "getAuthorizationSearchConfiguration",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      }
    },
    "/authorizations-search" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Performs a search for authorizations",
        "description" : "${description/authorizations-search/postAuthorizationSearch.html}",
        "operationId" : "searchAuthorizations",
        "parameters" : [ {
          "name" : "includeDrafts",
          "in" : "query",
          "description" : "Indicates whether draft authorizations are included in the results. Draft authorizations are not returned by default",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether draft authorizations are included in the results. Draft authorizations are not returned by default",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for authorizations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10163" : {
            "description" : "${LocationsNotFoundException}"
          }
        }
      }
    },
    "/concurrent-review-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the member's Concurrent Review BHP configuration",
        "description" : "${description/authorizations/getConcurrentReviewConfiguration.html}",
        "operationId" : "getConcurrentReviewConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConcurrentReviewConfiguration"
                }
              }
            }
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/determination-configuration" : {
      "get" : {
        "tags" : [ "determinations" ],
        "summary" : "Gets the configuration to create a determination",
        "description" : "${description/authorizations/getDeterminationConfiguration.html}",
        "operationId" : "getDeterminationConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeterminationConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/discharge-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the configuration to discharge an authorization.",
        "description" : "${description/authorizations/getDischargeConfiguration.html}",
        "operationId" : "getDischargeConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/ip-line-item-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the member-specific inpatient line item configuration",
        "description" : "${description/authorizations/getIPLineItemConfiguration.html}",
        "operationId" : "getIPLineItemConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InpatientLineItemConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/line-item-advisor-review-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the configuration for creating a line item advisor review",
        "description" : "${description/review/getLineItemAdvisorReviewConfiguration.html}",
        "operationId" : "getAdvisorReviewConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/line-item-clinical-review-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the BHP configuration for a line item clinical review",
        "description" : "${description/review/getLineItemClinicalReviewBHPConfiguration.html}",
        "operationId" : "getClinicalReviewBHPConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineItemClinicalReviewBHPConfiguration"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/line-item-clinical-review-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the configuration for creating a line item clinical review",
        "description" : "${description/review/getLineItemClinicalReviewConfiguration.html}",
        "operationId" : "getClinicalReviewConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/attach-authorization-search" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Performs a search for authorizations by member",
        "description" : "${description/authorizations/postAttachAuthorizationSearchByMember.html}",
        "operationId" : "searchMemberAttachAuthorizations-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for authorizations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberAttachAuthorizationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationGlobalSearchRow"
                  }
                }
              }
            }
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/readmit-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the configuration for creating a line item clinical review",
        "description" : "${description/authorizations/getReadmitAuthorizationConfiguration.html}",
        "operationId" : "getReadmitConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/rx-authorization-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the valid types of diagnoses",
        "description" : "${description/authorizations/getMemberRxAuthorizationConfiguration.html}",
        "operationId" : "getRxAuthorizationBhpConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RxAuthorizationBhpConfiguration"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          }
        }
      }
    },
    "/rx-authorization-configuration" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the configuration to create a new  RX authorization",
        "description" : "${description/authorizations/getRxAuthorizationConfiguration.html}",
        "operationId" : "getGetAuthorizationConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RxAuthorizationConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/rx-line-item-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the Rx line item configuration for the member",
        "description" : "${description/authorizations/getRXLineItemConfiguration.html}",
        "operationId" : "getRXLineItemConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inpatient",
          "in" : "query",
          "description" : "A boolean specifying if the authorization is Inpatient or SP.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the authorization is Inpatient or SP.",
            "default" : false
          }
        }, {
          "name" : "includeDisabled",
          "in" : "query",
          "description" : "A boolean specifying if the Rx line item configuration along with the hidden types.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if Rx line item configuration along with the hidden types.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RxLineItemConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/service-procedure-authorization-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the valid types of diagnoses",
        "description" : "${description/authorizations/getMemberServiceProcedureAuthorizationConfiguration.html}",
        "operationId" : "getServiceProcedureAuthorizationBhpConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProcedureAuthorizationBhpConfiguration"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          }
        }
      }
    },
    "/service-procedure-authorization-configuration" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Get configuration to create a new SP authorization",
        "description" : "${description/authorizations/getServiceProcedureAuthorizationConfiguration.html}",
        "operationId" : "getAuthorizationConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProcedureAuthorizationConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/sp-line-item-configuration/sp-service-types-v2" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Get filtered service types for service procedure line item",
        "description" : "${description/authorizations/getFilteredSPServiceTypes.html}",
        "operationId" : "getFilteredSPServiceTypesWithDefaults-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inpatient",
          "in" : "query",
          "description" : "A boolean specifying if the authorization is Inpatient or SP.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the authorization is Inpatient or SP.",
            "default" : false
          }
        }, {
          "name" : "behavioral",
          "in" : "query",
          "description" : "A boolean specifying if the diagnosis type is Medical or behavioral.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the diagnosis type is Medical or behavioral.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OptionGroupFieldConfig"
                }
              }
            }
          }
        }
      }
    },
    "/sp-line-item-configuration" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Get the member-specific Service Procedure line item configuration for duplicate Authorization",
        "description" : "${description/authorizations/getSPLineItemDuplicateAuthConfiguration.html}",
        "operationId" : "getSPLineItemDuplicateAuthorizationConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "behavioral",
          "in" : "query",
          "description" : "A boolean specifying if the diagnosis type is Medical or behavioral.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the diagnosis type is Medical or behavioral.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SPLineItemDuplicateAuthConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/sp-line-item-configuration/sp-service-types" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Get filtered service types for service procedure line item",
        "description" : "${description/authorizations/getFilteredSPServiceTypes.html}",
        "operationId" : "getFilteredSPServiceTypes",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inpatient",
          "in" : "query",
          "description" : "A boolean specifying if the authorization is Inpatient or SP.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the authorization is Inpatient or SP.",
            "default" : false
          }
        }, {
          "name" : "behavioral",
          "in" : "query",
          "description" : "A boolean specifying if the diagnosis type is Medical or behavioral.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the diagnosis type is Medical or behavioral.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sp-line-item-configuration/{serviceTypeValue}" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Get the service procedure line item configuration for a service type",
        "description" : "${description/authorizations/getSPLineItemConfiguration.html}",
        "operationId" : "getSPLineItemConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceTypeValue",
          "in" : "path",
          "description" : "SP service type value",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inpatient",
          "in" : "query",
          "description" : "A boolean specifying if the authorization is Inpatient or SP.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the authorization is Inpatient or SP.",
            "default" : false
          }
        }, {
          "name" : "includeDisabled",
          "in" : "query",
          "description" : "A boolean specifying whether or not to include disabled service types in the configuration search.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying whether or not to include disabled service types in the configuration search.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProcedureLineItemConfiguration"
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/sp-line-item-service-type-value-configuration" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the configuration for a service type on a service procedure line item",
        "description" : "${description/authorizations/getSPLineItemServiceTypeValueConfiguration.html}",
        "operationId" : "getSPLineItemConfigurationByServiceType-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceTypeValue",
          "in" : "query",
          "description" : "SP service type value",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inpatient",
          "in" : "query",
          "description" : "A boolean specifying if the authorization is Inpatient or SP.",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying if the authorization is Inpatient or SP.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProcedureLineItemConfiguration"
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/xml-review-parser/interqual-documents" : {
      "post" : {
        "tags" : [ "xml-review-parser-internal" ],
        "summary" : "Parse InterQual XML documents",
        "description" : "${description/authorizations/parseInterqualReviewDocument.html}",
        "operationId" : "parseInterqualDocument-internal",
        "parameters" : [ {
          "name" : "reviewSource",
          "in" : "query",
          "description" : "InterQual Review Source",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "InterQual Review Source",
            "xml" : {
              "name" : "UMInterqualReviewSourceEnum",
              "namespace" : "http://www.casenet.com/UMInterqualReviewSourceEnum"
            },
            "enum" : [ "REVIEW_MANAGER", "IQCONNECT" ]
          }
        } ],
        "requestBody" : {
          "description" : "InterQual document",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterqualReview"
                }
              }
            }
          }
        }
      }
    },
    "/xml-review-parser/cwqi-documents" : {
      "post" : {
        "tags" : [ "xml-review-parser-internal" ],
        "summary" : "Parse CareWebQI XML documents",
        "description" : "${description/authorizations/parseCareWebQIReviewDocument.html}",
        "operationId" : "parseCareWebQIDocument-internal",
        "requestBody" : {
          "description" : "CareWebQI document",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CareWebQIInnerReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CareWebQIReview"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/draft-appeals/{appealId}/void" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Voids an existing draft appeal",
        "description" : "${description/appeals/voidDraftAppeal.html}",
        "operationId" : "voidDraftAppeal-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10211" : {
            "description" : "${AppealVoidedException}"
          },
          "400 - 10210" : {
            "description" : "${AppealClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-appeals/{draftAppealId}" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets the draft appeal",
        "description" : "${description/appeals/getAppealDraft.html}",
        "operationId" : "getDraftAppeals-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftAppealId",
          "in" : "path",
          "description" : "The member draft appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "draftAppealIdType",
          "in" : "query",
          "description" : "Type of the draft appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the draft appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Appeal"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "appeals" ],
        "summary" : "Update an existing Draft appeal instance",
        "description" : "${description/appeals/putDraftAppeal.html}",
        "operationId" : "updateDraftAppeal-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftAppealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The appeal information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAuthorizationAppealRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Post Update and Submit DraftAppeal",
        "description" : "${description/appeals/postUpdateDraftAppealAndSubmit.html}",
        "operationId" : "postUpdateDraftAppealAndSubmit-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftAppealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The appeal information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAuthorizationAppealRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10220" : {
            "description" : "${MissingUrgencyChangeReasonException}"
          },
          "400 - 10219" : {
            "description" : "${InvalidUrgencyChangeReasonException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets the appeal",
        "description" : "${description/appeals/getAppeal.html}",
        "operationId" : "getAppeal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        }, {
          "name" : "showAppealDueDateHistory",
          "in" : "query",
          "description" : "Flag to show the Appeal Due Date change history as part of GET Appeal. The flag will be defaulted to 'false' if no value is passed.",
          "schema" : {
            "type" : "boolean",
            "description" : "Flag to show the Appeal Due Date change history as part of GET Appeal. The flag will be defaulted to 'false' if no value is passed.",
            "default" : false
          }
        }, {
          "name" : "includeDraftReviews",
          "in" : "query",
          "description" : "Flag to show the Appeal Due Date change history as part of GET Appeal. The flag will be defaulted to 'false' if no value is passed.",
          "schema" : {
            "type" : "boolean",
            "description" : "Flag to show the review part of GET Appeal. The flag will be defaulted to 'false' if no value is passed.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Appeal"
                }
              }
            }
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "appeals" ],
        "summary" : "Update an existing appeal instance",
        "description" : "${description/appeals/putAppeal.html}",
        "operationId" : "updateAppeal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The appeal information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAuthorizationAppealRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10210" : {
            "description" : "${AppealClosedException}"
          },
          "400 - 10215" : {
            "description" : "${AppealLineItemNotBelongToAuthException}"
          },
          "400 - 10212" : {
            "description" : "${LineItemAlreadyAppealedException}"
          },
          "400 - 10220" : {
            "description" : "${MissingUrgencyChangeReasonException}"
          },
          "400 - 10219" : {
            "description" : "${InvalidUrgencyChangeReasonException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/tasks" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets the tasks of an appeal",
        "description" : "${description/appeals/getAppealTasks.html}",
        "operationId" : "getAppealTasks",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppealTask"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10211" : {
            "description" : "${AppealVoidedException}"
          },
          "400 - 10926" : {
            "description" : "${InvalidTaskException}"
          }
        }
      },
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Submit a task on an appeal",
        "description" : "${description/appeals/postAppealTask.html}",
        "operationId" : "postAppealTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The task request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppealActionPathRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionPathSummary"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10211" : {
            "description" : "${AppealVoidedException}"
          },
          "400 - 10210" : {
            "description" : "${AppealClosedException}"
          },
          "400 - 10213" : {
            "description" : "${NotEditableAppealException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/complete" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "complete an existing appeal ",
        "description" : "${description/appeals/completeAppeal.html}",
        "operationId" : "completeAppeal-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The appeal information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAppealGlobalOutcomeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CompleteAppealResponse"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          },
          "400 - 10268" : {
            "description" : "${AlreadyCompleteException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/void-info" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Voids an existing appeal",
        "description" : "${description/appeals/voidAppeal.html}",
        "operationId" : "voidAppeal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10211" : {
            "description" : "${AppealVoidedException}"
          },
          "400 - 10210" : {
            "description" : "${AppealClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/notes" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets notes of an appeal",
        "description" : "${description/appeals/getAppealNotes.html}",
        "operationId" : "getAppealNotes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Create a new note for an Appeal",
        "description" : "${description/notes/postAppealNote.html}",
        "operationId" : "postAppealNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10211" : {
            "description" : "${AppealVoidedException}"
          },
          "400 - 10210" : {
            "description" : "${AppealClosedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/reviews/{reviewId}" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets the appeal reviews",
        "description" : "${description/appeals/getAppealReview.html}",
        "operationId" : "getAppealReview",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The appeal review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppealReview"
                }
              }
            }
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10214" : {
            "description" : "${AppealReviewNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/reopen" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Reopen Appeal for completed or closed status",
        "description" : "${description/appeals/reopenAppeal.html}",
        "operationId" : "reopenAppeal-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "memberId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10034" : {
            "description" : "${AlreadyOpenException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/reviews/{reviewId}/void" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Void the appeal review",
        "description" : "${description/appeals/voidAppealReview.html}",
        "operationId" : "voidAppealReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The appeal review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void Info request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10214" : {
            "description" : "${AppealReviewNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/outcome/{outcomeId}" : {
      "put" : {
        "tags" : [ "appeals" ],
        "summary" : "updates an outcome for an appeal",
        "description" : "${description/appeals/putOutcomeAppeal.html}",
        "operationId" : "putappealoutcome-internal",
        "parameters" : [ {
          "name" : "outcomeId",
          "in" : "path",
          "description" : "Appeal outcomeId to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The appeal information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAppealOutcomeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10235" : {
            "description" : "${AppealOutcomeNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/attachments/{attachmentId}/void-info" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Void an attachment of an appeal",
        "description" : "${description/appeals/postVoidAttachment.html}",
        "operationId" : "voidAppealAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/attachments" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets the attachments of an appeal",
        "description" : "${description/appeals/getAppealAttachments.html}",
        "operationId" : "getAppealAttachments",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Creates a new attachment for an appeal",
        "description" : "${description/appeals/postAppealAttachment.html}",
        "operationId" : "postAppealAttachment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10211" : {
            "description" : "${AppealVoidedException}"
          },
          "400 - 10210" : {
            "description" : "${AppealClosedException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/outcome" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "creates an outcome for an appeal",
        "description" : "${description/appeals/postOutcomeAppeal.html}",
        "operationId" : "postappealoutcome-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The appeal information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAppealOutcomeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10237" : {
            "description" : "${AppealActivityHasWrongValueException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/draft-reviews/{reviewId}" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Gets the appeal's draft review",
        "description" : "${description/appeals/getAppealDraftReview.html}",
        "operationId" : "getAppealDraftReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "The appeal review ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppealReview"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10214" : {
            "description" : "${AppealReviewNotFoundException}"
          },
          "400 - 10266" : {
            "description" : "${AppealReviewIsNotDraftException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/draft-review" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Saves a review on an Appeal",
        "description" : "${description/appeals/postSaveAppealReview.html}",
        "operationId" : "postSaveAppealReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAppealReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/notifications" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Submit an appeal notification",
        "description" : "${description/appeals/postSubmitAppealNotification.html}",
        "operationId" : "submitAppealNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "submitAppealNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateAppealNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10215" : {
            "description" : "${AppealLineItemNotBelongToAuthException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/draft-reviews/{appealReviewId}" : {
      "put" : {
        "tags" : [ "appeals" ],
        "summary" : "Saves a review on an Appeal",
        "description" : "${description/appeals/updateSaveAppealReview.html}",
        "operationId" : "updateSaveAppealReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        }, {
          "name" : "appealReviewId",
          "in" : "path",
          "description" : "Appeal Review ID to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAppealReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10214" : {
            "description" : "${AppealReviewNotFoundException}"
          },
          "400 - 10266" : {
            "description" : "${AppealReviewIsNotDraftException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      },
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Submits a review on an Appeal",
        "description" : "${description/appeals/updateSubmitAppealReview.html}",
        "operationId" : "submitDraftAppealReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        }, {
          "name" : "appealReviewId",
          "in" : "path",
          "description" : "Appeal Review ID to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAppealReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10214" : {
            "description" : "${AppealReviewNotFoundException}"
          },
          "400 - 10266" : {
            "description" : "${AppealReviewIsNotDraftException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/draft-notifications" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Save an appeal notification draft",
        "description" : "${description/appeals/postSaveAppealNotification.html}",
        "operationId" : "saveAppealNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "saveAppealNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateAppealNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10215" : {
            "description" : "${AppealLineItemNotBelongToAuthException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/appeals/{appealId}/review" : {
      "post" : {
        "tags" : [ "appeals" ],
        "summary" : "Submits a review on an Appeal",
        "description" : "${description/appeals/postSubmitAppealReview.html}",
        "operationId" : "postSubmitAppealReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "appealId",
          "in" : "path",
          "description" : "The member appeal ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appealIdType",
          "in" : "query",
          "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
          "schema" : {
            "type" : "string",
            "description" : "Type of the appeal ID. The type will be defaulted to 'INTERNAL_ID' if no value is passed.",
            "xml" : {
              "name" : "AppealIdType",
              "namespace" : "http://www.casenet.com/AppealIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "APPEAL_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The review request data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAppealReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          }
        }
      }
    },
    "/appeal-configuration" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Get the configuration for creating an appeal",
        "description" : "${description/appeals/getAppealConfiguration.html}",
        "operationId" : "getAuthorizationAppealConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAppealConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/appeal-configuration/tasks-bhp-configuration" : {
      "get" : {
        "tags" : [ "appeals" ],
        "summary" : "Retrieve the Appeal Tasks information configured for the BhpNode",
        "description" : "${description/appeals/getAppealTasksBhpConfiguration.html}",
        "operationId" : "getAppealTasksBhpConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppealTasksBhpConfiguration"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-authorizations/{draftAuthorizationId}/partial-update" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates parts of draft authorization",
        "description" : "${description/authorizations/patchDraftAuthorization.html}",
        "operationId" : "partiallyUpdateDraftAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDraftAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10204" : {
            "description" : "${LineItemInvalidUpdateException}"
          },
          "400 - 10269" : {
            "description" : "${OonReasonNotAllowedWhenInNetworkException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-authorizations/{draftAuthorizationId}/header" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get draft authorization header with servicing facility information",
        "description" : "${description/authorizations/getDraftAuthorizationHeader.html}",
        "operationId" : "getDraftAuthorizationHeader-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationHeader2"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-authorizations/{draftAuthorizationId}" : {
      "delete" : {
        "tags" : [ "authorizations" ],
        "summary" : "Voids a draft authorization",
        "description" : "${description/authorizations/voidDraftAuthorization.html}",
        "operationId" : "voidDraftAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "authorizationVersion",
          "in" : "query",
          "description" : "Version of the authorization",
          "required" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Version of the authorization",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10250" : {
            "description" : "${InvalidAuthorizationStateException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-authorizations/{draftAuthorizationId}/line-items" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets a page of line items from a draft authorization.",
        "description" : "${description/authorizations/getLineItemsPageDraftAuthorization.html}",
        "operationId" : "getLineItemsDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "LINE_ITEM_NUMBER",
            "enum" : [ "LINE_ITEM_NUMBER", "STAY_LEVEL", "FROM_DATE", "TO_DATE", "SERVICE_TYPE", "STATUS", "SERVICING_PROVIDER", "PROCEDURE_CODE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LineItemPaginatedResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-authorizations/{draftAuthorizationId}/line-items/{lineItemNumber}" : {
      "delete" : {
        "tags" : [ "authorizations" ],
        "summary" : "Delete a draft line item from a draft authorization",
        "description" : "${description/authorizations/deleteDraftAuthorizationLineItem.html}",
        "operationId" : "voidDraftAuthorizationLineItem-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lineItemVersion",
          "in" : "query",
          "description" : "Version of the line item",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "Version of the line item",
            "format" : "int64",
            "default" : -1
          }
        }, {
          "name" : "authorizationVersion",
          "in" : "query",
          "description" : "Version of the authorization",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "Version of the authorization",
            "format" : "int64",
            "default" : -1
          }
        } ],
        "responses" : {
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10123" : {
            "description" : "${LineItemAlreadyVoidedException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "400 - 10250" : {
            "description" : "${InvalidAuthorizationStateException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-inpatient-authorizations/{draftAuthorizationId}" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates a draft inpatient authorization",
        "description" : "${description/authorizations/putInpatientAuthorizationDraft.html}",
        "operationId" : "putDraftInpatientAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDraftInpatientAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10204" : {
            "description" : "${LineItemInvalidUpdateException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          },
          "400 - 10128" : {
            "description" : "${ObsoleteProviderException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits a draft inpatient authorization",
        "description" : "${description/authorizations/postDraftInpatientAuthorization.html}",
        "operationId" : "postDraftInpatientAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateInpatientAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAuthorizationResponse"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10222" : {
            "description" : "${DuplicateRxLineItemSameDrugAndDateOverlapException}"
          },
          "400 - 10093" : {
            "description" : "${InpatientLineItemGapDatesException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10091" : {
            "description" : "${InpatientLineItemOverlappingDatesException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "400 - 10216" : {
            "description" : "${AuthSpecificContactAddressNotRequiredException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10269" : {
            "description" : "${OonReasonNotAllowedWhenInNetworkException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-rx-authorizations/{draftAuthorizationId}/notifications/correspondence-notifications" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the correspondence notifications for an Draft Rx authorization",
        "description" : "${description/authorizations/getRxDraftCorrespondenceNotifications.html}",
        "operationId" : "getDraftAuthorizationCorrespondenceNotifications-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CorrespondenceNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-rx-authorizations/{draftAuthorizationId}/notifications/phone-notifications" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the phone notifications for an Draft Rx authorization",
        "description" : "${description/authorizations/getRxDraftPhoneNotifications.html}",
        "operationId" : "getDraftAuthorizationPhoneNotifications-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PhoneNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-rx-authorizations/{draftAuthorizationId}" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates a draft RX authorization",
        "description" : "${description/authorizations/putRXAuthorizationDraft.html}",
        "operationId" : "putDraftRXAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The RX Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDraftRxAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10056" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10204" : {
            "description" : "${LineItemInvalidUpdateException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates and Submit RX authorization",
        "description" : "${description/authorizations/updateAndSubmitRXAuthorization.html}",
        "operationId" : "updateAndSubmitRxAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The RX Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRxAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10222" : {
            "description" : "${DuplicateRxLineItemSameDrugAndDateOverlapException}"
          },
          "400 - 10204" : {
            "description" : "${LineItemInvalidUpdateException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-rx-authorizations/{draftAuthorizationId}/attachments" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the attachments information for an Draft Rx authorization",
        "description" : "${description/authorizations/getRxDraftAuthorizationAttachments.html}",
        "operationId" : "getDraftAuthorizationAttachments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-rx-authorizations/{draftAuthorizationId}/notes" : {
      "get" : {
        "tags" : [ "authorizations" ],
        "summary" : "Gets the notes of an Draft Rx authorization",
        "description" : "${description/authorizations/getRxDraftAuthorizationNotes.html}",
        "operationId" : "getDraftAuthorizationNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-service-procedure-authorizations/{draftAuthorizationId}" : {
      "put" : {
        "tags" : [ "authorizations" ],
        "summary" : "Updates a draft service procedure authorization",
        "description" : "${description/authorizations/putServiceProcedureAuthorizationDraft.html}",
        "operationId" : "putDraftServiceProcedureAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDraftServiceProcedureAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10204" : {
            "description" : "${LineItemInvalidUpdateException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          },
          "400 - 10128" : {
            "description" : "${ObsoleteProviderException}"
          }
        }
      },
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits a draft service procedure authorization",
        "description" : "${description/authorizations/postServiceProcedureAuthorizationDraftV2.html}",
        "operationId" : "postDraftServiceProcedureAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftAuthorizationId",
          "in" : "path",
          "description" : "The member draft authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Service Procedure Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceProcedureAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateAuthorizationResponse"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "400 - 10216" : {
            "description" : "${AuthSpecificContactAddressNotRequiredException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/draft" : {
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Saves a draft inpatient authorization request",
        "description" : "${description/authorizations/postInpatientAuthorizationDraft.html}",
        "operationId" : "postInpatientAuthorizationDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InpatientAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          },
          "400 - 10269" : {
            "description" : "${OonReasonNotAllowedWhenInNetworkException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/draft" : {
      "post" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Saves a draft rx authorization request",
        "description" : "${description/authorizations/postRxAuthorizationDraft.html}",
        "operationId" : "postRxAuthorizationDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Rx Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RxAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/draft" : {
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Saves a draft service procedure authorization request",
        "description" : "${description/authorizations/postServiceProcedureAuthorizationDraft.html}",
        "operationId" : "postServiceProcedureAuthorizationDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Service Procedure Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceProcedureAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/follow-up-configuration" : {
      "get" : {
        "tags" : [ "follow-ups-internal" ],
        "summary" : "Gets the configuration to follow up an authorization.",
        "description" : "${description/authorizations/getFollowUpConfiguration.html}",
        "operationId" : "getFollowUpConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/follow-ups/{followUpId}" : {
      "put" : {
        "tags" : [ "follow-ups-internal" ],
        "summary" : "Update follow up of an authorization.",
        "description" : "${description/authorizations/putFollowUp.html}",
        "operationId" : "updateFollowUp-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "followUpId",
          "in" : "path",
          "description" : "The ID of the follow Up to edit",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Follow Up Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateFollowUpRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FollowUp"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "404 - 10260" : {
            "description" : "${FollowUpNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10261" : {
            "description" : "${AuthorizationClosedException}"
          },
          "400 - 10041" : {
            "description" : "${OperationNotSupportedOnDraftAuthorizationException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/follow-ups" : {
      "get" : {
        "tags" : [ "follow-ups-internal" ],
        "summary" : "Gets follow ups of an authorization.",
        "description" : "${description/authorizations/getFollowUps.html}",
        "operationId" : "getFollowUpsForAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FollowUp"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      },
      "post" : {
        "tags" : [ "follow-ups-internal" ],
        "summary" : "Create follow up for an authorization.",
        "description" : "${description/authorizations/postFollowUp.html}",
        "operationId" : "createFollowUp-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Follow Up Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FollowUpRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FollowUp"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10261" : {
            "description" : "${AuthorizationClosedException}"
          },
          "400 - 10041" : {
            "description" : "${OperationNotSupportedOnDraftAuthorizationException}"
          }
        }
      }
    },
    "/inpatient-authorization-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the valid types of line items and diagnoses",
        "description" : "${description/authorizations/getMemberInpatientAuthorizationConfiguration.html}",
        "operationId" : "getInpatientAuthorizationBhpConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InpatientAuthorizationBhpConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/inpatient-authorization-configuration" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Get configuration to create a new authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationConfiguration.html}",
        "operationId" : "getAuthorizationConfiguration_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InpatientAuthorizationConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/line-items/line-item-reviews" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the line item reviews for the given authorization",
        "description" : "${description/authorizations/getIPAuthorizationLineItemReviews.html}",
        "operationId" : "getLineItemReviews_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationLineItemReview"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/line-items/{lineItemNumber}/determination" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the determination for the line item",
        "description" : "${description/authorizations/getInpatientAuthorizationDetermination.html}",
        "operationId" : "getDetermination_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Determination"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10072" : {
            "description" : "${DeterminationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/servicing-facility" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets a servicing facility for an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthServicingFacility.html}",
        "operationId" : "getServicingFacility",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicingFacility"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updates an inpatient authorization servicing facility",
        "description" : "${description/authorizations/putInpatientAuthServicingFacility.html}",
        "operationId" : "updateServicingFacility",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The servicing facility request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServicingFacilityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10203" : {
            "description" : "${InvalidServicingFacilityLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/diagnoses" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the diagnosis information for an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationDiagnosis.html}",
        "operationId" : "getAuthorizationDiagnosis_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationDiagnosis"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Add, Remove, Void authorization diagnoses",
        "description" : "${description/authorizations/postInpatientAuthorizationDiagnosisRequest.html}",
        "operationId" : "addAuthorizationDiagnosis",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The diagnosis request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10242" : {
            "description" : "${MissingExplanationForOtherVoidReasonException}"
          },
          "400 - 10243" : {
            "description" : "${MissingDiagnosisInAuthorizationException}"
          },
          "400 - 10244" : {
            "description" : "${InvalidAuthStatusForVoidDiagnosisException}"
          },
          "400 - 10245" : {
            "description" : "${MissingDiagnosisInVoidOrAddSectionException}"
          },
          "400 - 10248" : {
            "description" : "${InvalidAuthStatusForRemoveDiagnosisException}"
          },
          "400 - 10041" : {
            "description" : "${OperationNotSupportedOnDraftAuthorizationException}"
          },
          "400 - 10931" : {
            "description" : "${UnspecifiedObjectVersionException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/header" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the header of an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationHeader.html}",
        "operationId" : "getAuthorizationHeader_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InpatientAuthorizationHeader"
                }
              }
            }
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updates an inpatient authorization header",
        "description" : "${description/authorizations/putInpatientAuthorizationHeaderRequest.html}",
        "operationId" : "updateAuthorizationHeaderRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update authorization header request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateInpatientAuthorizationHeaderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/linked-authorizations" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the linked authorizations for the given inpatient authorization",
        "description" : "${description/authorizations/getLinkedAuthorizationsForIpAuth.html}",
        "operationId" : "getLinkedAuthorizationSummariesForIpAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationSummaryLite"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/requesting-provider" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the requesting provider of an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthRequestingProvider.html}",
        "operationId" : "getAuthorizationRequestingProvider_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestingProvider"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updates the requesting provider of an inpatient authorization",
        "description" : "${description/authorizations/putInpatientAuthRequestingProviderRequest.html}",
        "operationId" : "updateAuthorizationRequestingProvider",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The requesting provider request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRequestingProviderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/request-for-information" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Get the requests for information (RFIs) on a inpatient authorization",
        "description" : "${description/authorizations/getIPAuthorizationRequestForInformation.html}",
        "operationId" : "getAuthorizationRequestForInformation_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestForInformation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/notifications/phone-notifications" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the phone notifications for an inpatient authorization",
        "description" : "${description/authorizations/getAuthorizationPhoneNotifications.html}",
        "operationId" : "getAuthorizationPhoneNotifications",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PhoneNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/notifications/correspondence-notifications" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the correspondence notifications for an inpatient authorization",
        "description" : "${description/authorizations/getInpatientCorrespondenceNotifications.html}",
        "operationId" : "getAuthorizationCorrespondenceNotifications",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CorrespondenceNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/line-items/{lineItemNumber}/rx" : {
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updates a RX line item",
        "description" : "${description/authorizations/putRXLineItem.html}",
        "operationId" : "updateRXLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRxLineItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10151" : {
            "description" : "${InvalidRequestedUnitsException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10082" : {
            "description" : "${DeterminationNotAllowedException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/line-items/{lineItemNumber}/inpatient" : {
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updates an inpatient line item",
        "description" : "${description/authorizations/putIPLineItem.html}",
        "operationId" : "updateIPLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateInpatientLineItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10151" : {
            "description" : "${InvalidRequestedUnitsException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10082" : {
            "description" : "${DeterminationNotAllowedException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/line-items/{lineItemNumber}/service-procedure" : {
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updates an service procedure line item",
        "description" : "${description/authorizations/putSPLineItem.html}",
        "operationId" : "updateSPLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceProcedureLineItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10151" : {
            "description" : "${InvalidRequestedUnitsException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10082" : {
            "description" : "${DeterminationNotAllowedException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/void-readmission" : {
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Voids a readmission for an inpatient discharge",
        "description" : "${description/authorizations/postVoidReadmission.html}",
        "operationId" : "voidReadmission-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10250" : {
            "description" : "${InvalidAuthorizationStateException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/line-items" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the line items of an inpatient authorization",
        "description" : "${description/authorizations/getInpatientLineItems.html}",
        "operationId" : "getAuthorizationLineItems",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LineItem"
                  }
                }
              }
            }
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Add line items to an existing authorization",
        "description" : "${description/authorizations/addLineItemsToIPAuth.html}",
        "operationId" : "addLineItems",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The line Item request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddLineItemsToInpatientAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10222" : {
            "description" : "${DuplicateRxLineItemSameDrugAndDateOverlapException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/readmission" : {
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "readmission an inpatient authorization",
        "description" : "${description/authorizations/postReadmitDischargedAuthorization.html}",
        "operationId" : "postReadmitDischarged-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "ReadmissionRequest request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReadmissionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10250" : {
            "description" : "${InvalidAuthorizationStateException}"
          },
          "400 - 10249" : {
            "description" : "${InvalidReadmitDateException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/discharges" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the discharge summaries for the given inpatient authorization",
        "description" : "${description/authorizations/getDischargesForIpAuth.html}",
        "operationId" : "getDischargesForIpAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DischargeSummary"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Updated the discharge of an inpatient authorization",
        "description" : "${description/authorizations/putDischargeAuthorization.html}",
        "operationId" : "updateDischargeAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Discharge request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDischargeDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10264" : {
            "description" : "${AuthorizationNotDischargedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10263" : {
            "description" : "${PrimaryDischargeDiagnosisAlreadySetException}"
          },
          "400 - 10265" : {
            "description" : "${PrimaryAxisIDischargeCodeAlreadySetException}"
          },
          "400 - 10262" : {
            "description" : "${DuplicateDischargeDiagnosisException}"
          }
        }
      },
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Discharge an inpatient authorization",
        "description" : "${description/authorizations/dischargeAuthorization.html}",
        "operationId" : "dischargeAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Discharge request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DischargeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10085" : {
            "description" : "${AuthorizationAlreadyDischargedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/void-discharge" : {
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Void the discharge of an inpatient authorization",
        "description" : "${description/authorizations/voidDischargeAuthorization.html}",
        "operationId" : "voidDischargeAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The void request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10250" : {
            "description" : "${InvalidAuthorizationStateException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/reopenings" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the reopenings for an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationReopenings.html}",
        "operationId" : "getAuthorizationReopenings",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationReopening"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/appeals" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the appeals for an inpatient authorization",
        "description" : "${description/authorizations/getIPAuthorizationAppeals.html}",
        "operationId" : "getAuthorizationAppealsSummary",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationAppeal"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/readmissions" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the readmissions for an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationReadmissions.html}",
        "operationId" : "getAuthorizationReadmissions",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationReadmission"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/attachments" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the attachments of an authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationAttachments.html}",
        "operationId" : "getAuthorizationAttachments_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Creates a new attachment for an authorization",
        "description" : "${description/authorizations/postInpatientAuthAttachment.html}",
        "operationId" : "postAuthorizationAttachment_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations/{authorizationId}/notes" : {
      "get" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Gets the notes of an inpatient authorization",
        "description" : "${description/authorizations/getInpatientAuthorizationNotes.html}",
        "operationId" : "getAuthorizationNotes_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Creates a new note for an inpatient authorization",
        "description" : "${description/authorizations/postInpatientAuthNote.html}",
        "operationId" : "postAuthorizationNote_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations" : {
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Submits an inpatient authorization request",
        "description" : "${description/authorizations/postInpatientAuthorization.html}",
        "operationId" : "postInpatientAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InpatientAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10222" : {
            "description" : "${DuplicateRxLineItemSameDrugAndDateOverlapException}"
          },
          "400 - 10093" : {
            "description" : "${InpatientLineItemGapDatesException}"
          },
          "400 - 10091" : {
            "description" : "${InpatientLineItemOverlappingDatesException}"
          },
          "400 - 10115" : {
            "description" : "${InvalidModifierCodeException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/inpatient-authorizations-v2" : {
      "post" : {
        "tags" : [ "inpatient-authorizations" ],
        "summary" : "Submits an inpatient authorization request",
        "description" : "${description/authorizations/postInpatientAuthorizationV2.html}",
        "operationId" : "postInpatientAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "runPrescreenBeforeAuthSubmission",
          "in" : "query",
          "description" : "Indicates if pre-screen has to be run before creating an authorization.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if pre-screen has to be run before creating an authorization.",
            "default" : false
          }
        }, {
          "name" : "createPrescreenNote",
          "in" : "query",
          "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectGapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the gaps between dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "rejectOverlapsIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process in case warning message(s) is generated while validating the overlaps of dates of IP line items",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Inpatient Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InpatientAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationSubmissionResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10201" : {
            "description" : "${InvalidDischargedDateException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10222" : {
            "description" : "${DuplicateRxLineItemSameDrugAndDateOverlapException}"
          },
          "400 - 10093" : {
            "description" : "${InpatientLineItemGapDatesException}"
          },
          "400 - 10091" : {
            "description" : "${InpatientLineItemOverlappingDatesException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/portal-authorizations-search" : {
      "post" : {
        "tags" : [ "portal-authorizations-internal" ],
        "summary" : "Performs a search for authorizations",
        "description" : "${description/authorizations/postPortalAuthorizationSearch.html}",
        "operationId" : "searchAuthorizations-internal",
        "requestBody" : {
          "description" : "The search criteria for authorizations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortalAuthorizationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalAuthorizationSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10163" : {
            "description" : "${LocationsNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/line-items/line-item-reviews" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the line item reviews for the given Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationLineItemReviews.html}",
        "operationId" : "getLineItemReviews_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationLineItemReview"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/line-items/{lineItemNumber}/determination" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the line item determination information for an Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationDetermination.html}",
        "operationId" : "getDetermination_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Determination"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10072" : {
            "description" : "${DeterminationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/diagnoses" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the diagnosis information for an Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationDiagnosis.html}",
        "operationId" : "getAuthorizationDiagnosis_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationDiagnosis"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      },
      "post" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Add, Remove, Void authorization diagnoses",
        "description" : "${description/authorizations/postRxAuthorizationDiagnosis.html}",
        "operationId" : "addAuthorizationDiagnosis_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The diagnosis request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10056" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10242" : {
            "description" : "${MissingExplanationForOtherVoidReasonException}"
          },
          "400 - 10243" : {
            "description" : "${MissingDiagnosisInAuthorizationException}"
          },
          "400 - 10244" : {
            "description" : "${InvalidAuthStatusForVoidDiagnosisException}"
          },
          "400 - 10245" : {
            "description" : "${MissingDiagnosisInVoidOrAddSectionException}"
          },
          "400 - 10248" : {
            "description" : "${InvalidAuthStatusForRemoveDiagnosisException}"
          },
          "400 - 10041" : {
            "description" : "${OperationNotSupportedOnDraftAuthorizationException}"
          },
          "400 - 10931" : {
            "description" : "${UnspecifiedObjectVersionException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/header" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the header of an Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationHeader.html}",
        "operationId" : "getAuthorizationHeader_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RxAuthorizationHeader"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/requesting-provider" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the requesting provider information for an Rx authorization",
        "description" : "${description/authorizations/getRxAuthRequestingProvider.html}",
        "operationId" : "getAuthorizationRequestingProvider_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestingProvider"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/request-for-information" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Get the requests for information (RFIs) on a Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationRequestForInformation.html}",
        "operationId" : "getAuthorizationRequestForInformation_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestForInformation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/notifications/phone-notifications" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the phone notifications for an Rx authorization",
        "description" : "${description/authorizations/getRxPhoneNotifications.html}",
        "operationId" : "getAuthorizationPhoneNotifications_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PhoneNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/notifications/correspondence-notifications" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the correspondence notifications for an Rx authorization",
        "description" : "${description/authorizations/getRxCorrespondenceNotifications.html}",
        "operationId" : "getAuthorizationCorrespondenceNotifications_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CorrespondenceNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/line-items" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the line items of an Rx authorization",
        "description" : "${description/authorizations/getRxLineItems.html}",
        "operationId" : "getAuthorizationLineItems_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RxLineItem"
                  }
                }
              }
            }
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      },
      "post" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Add Rx line items to an existing authorization",
        "description" : "${description/authorizations/addRxLineItemToRxAuth.html}",
        "operationId" : "addRxLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "tcclient"
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The request to add a Rx LineItem",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddRxLineItemToAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/reopenings" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the Reopenings for an Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationReopens.html}",
        "operationId" : "getAuthorizationReopenings-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationReopening"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/appeals" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the appeals for an Rx authorization",
        "description" : "${description/authorizations/getAuthorizationAppeals.html}",
        "operationId" : "getAuthorizationAppealsSummary_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationAppeal"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/attachments" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the attachments information for an Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationAttachments.html}",
        "operationId" : "getAuthorizationAttachments_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      },
      "post" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Creates a new attachment for an Rx authorization",
        "description" : "${description/authorizations/postRxAuthAttachment.html}",
        "operationId" : "postAuthorizationAttachment_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations/{authorizationId}/notes" : {
      "get" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Gets the notes of an Rx authorization",
        "description" : "${description/authorizations/getRxAuthorizationNotes.html}",
        "operationId" : "getAuthorizationNotes_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      },
      "post" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Creates a new note for an Rx authorization",
        "description" : "${description/authorizations/postRxAuthNote.html}",
        "operationId" : "postAuthorizationNote_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/rx-authorizations" : {
      "post" : {
        "tags" : [ "rx-authorizations" ],
        "summary" : "Submits an Rx authorization request",
        "description" : "${description/authorizations/postRxAuthorization.html}",
        "operationId" : "postRxAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "runPrescreenBeforeAuthSubmission",
          "in" : "query",
          "description" : "Indicates if pre-screen has to be run before creating an authorization.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if pre-screen has to be run before creating an authorization.",
            "default" : false
          }
        }, {
          "name" : "createPrescreenNote",
          "in" : "query",
          "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Rx Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RxAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationSubmissionResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10911" : {
            "description" : "${AssigneeDisabledException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10140" : {
            "description" : "${LineItemTypeNotAllowedByBhpNodeException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/line-items" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the line items for the given service procedure authorization",
        "description" : "${description/authorizations/getAuthorizationLineItems.html}",
        "operationId" : "getLineItems",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceProcedureLineItem"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Add service procedure line items to an existing authorization",
        "description" : "${description/authorizations/addSPLineItemToSPAuth.html}",
        "operationId" : "addSPLineItem",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The request to add a SP LineItem",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddServiceProcedureLineItemToAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/line-items/line-item-reviews" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the line item reviews for the given service procedure authorization",
        "description" : "${description/authorizations/getSPAuthorizationLineItemReviews.html}",
        "operationId" : "getLineItemReviews_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationLineItemReview"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/line-items/{lineItemNumber}/determination" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the line item determination",
        "description" : "${description/authorizations/getServiceProcedureAuthorizationDetermination.html}",
        "operationId" : "getDetermination_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Determination"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10072" : {
            "description" : "${DeterminationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/diagnoses" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the diagnosis information for a service procedure authorization",
        "description" : "${description/authorizations/getServiceProcedureAuthorizationDiagnosis.html}",
        "operationId" : "getAuthorizationDiagnosis_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationDiagnosis"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Add, Remove, Void authorization diagnoses",
        "description" : "${description/authorizations/postServiceProcedureAuthorizationDiagnosisRequest.html}",
        "operationId" : "addAuthorizationDiagnosis_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The diagnosis request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10242" : {
            "description" : "${MissingExplanationForOtherVoidReasonException}"
          },
          "400 - 10243" : {
            "description" : "${MissingDiagnosisInAuthorizationException}"
          },
          "400 - 10244" : {
            "description" : "${InvalidAuthStatusForVoidDiagnosisException}"
          },
          "400 - 10245" : {
            "description" : "${MissingDiagnosisInVoidOrAddSectionException}"
          },
          "400 - 10248" : {
            "description" : "${InvalidAuthStatusForRemoveDiagnosisException}"
          },
          "400 - 10041" : {
            "description" : "${OperationNotSupportedOnDraftAuthorizationException}"
          },
          "400 - 10931" : {
            "description" : "${UnspecifiedObjectVersionException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/header" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the header of a service procedure",
        "description" : "${description/authorizations/getServiceProcedureAuthorizationHeader.html}",
        "operationId" : "getAuthorizationHeader_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceProcedureAuthorizationHeader"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Updates an existing service procedure authorization header",
        "description" : "${description/authorizations/putServiceProcedureAuthorizationHeaderRequest.html}",
        "operationId" : "updateAuthorizationHeaderRequest_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The header request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceProcedureAuthorizationHeaderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/linked-authorizations" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the linked authorizations for the given service procedure authorization",
        "description" : "${description/authorizations/getLinkedAuthorizationsForSpAuth.html}",
        "operationId" : "getLinkedAuthorizationSummariesForSpAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationSummaryLite"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/requesting-provider" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the requesting provider of a service procedure authorization",
        "description" : "${description/authorizations/getServiceProcedureAuthRequestingProvider.html}",
        "operationId" : "getAuthorizationRequestingProvider_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestingProvider"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Updates the requesting provider of a service procedure authorization",
        "description" : "${description/authorizations/putServiceProcedureAuthRequestingProviderRequest.html}",
        "operationId" : "updateAuthorizationRequestingProvider_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The request to update a Requesting Provider",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRequestingProviderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/request-for-information" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Get the requests for information (RFIs) on a service procedure authorization",
        "description" : "${description/authorizations/getSPAuthorizationRequestForInformation.html}",
        "operationId" : "getAuthorizationRequestForInformation_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RequestForInformation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/notifications/phone-notifications" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the phone notifications for service procedure authorization",
        "description" : "${description/authorizations/getSPAuthorizationPhoneNotifications.html}",
        "operationId" : "getAuthorizationPhoneNotifications_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PhoneNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/notifications/correspondence-notifications" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the correspondence notifications for service procedure authorization",
        "description" : "${description/authorizations/getServiceProcedureCorrespondenceNotifications.html}",
        "operationId" : "getAuthorizationCorrespondenceNotifications_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CorrespondenceNotification"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations" : {
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Submit a service procedure authorization request",
        "description" : "${description/authorizations/postServiceProcedureAuthorization.html}",
        "operationId" : "postServiceProcedureAuthorization",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Service Procedure Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceProcedureAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10122" : {
            "description" : "${NonVoidableLineItemException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10930" : {
            "description" : "${ExtendedAttributeDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/line-items/{lineItemNumber}" : {
      "put" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Updates an service procedure line item",
        "description" : "${description/authorizations/putSPAuthSPLineItem.html}",
        "operationId" : "updateSPLineItem_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "lockedAuthUpdate",
          "in" : "query",
          "description" : "Indicates if the intent of this request is to update a locked authorization, waiting on additional information from external systems.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceProcedureLineItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10124" : {
            "description" : "${NotEditableLineItemAuthLockedException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10151" : {
            "description" : "${InvalidRequestedUnitsException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10167" : {
            "description" : "${AlreadyUnlockedException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          },
          "400 - 10082" : {
            "description" : "${DeterminationNotAllowedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/reopenings" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the Reopenings for an SP authorization",
        "description" : "${description/authorizations/getServiceProviderAuthorizationReopens.html}",
        "operationId" : "getAuthorizationReopenings_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationReopening"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/appeals" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the appeals for a service procedure authorization",
        "description" : "${description/authorizations/getSPAuthorizationAppeals.html}",
        "operationId" : "getAuthorizationAppealsSummary_2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AuthorizationAppeal"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/attachments" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the attachments of an authorization",
        "description" : "${description/authorizations/getServiceProcedureAuthorizationAttachments.html}",
        "operationId" : "getAuthorizationAttachments_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Creates a new attachment for an authorization",
        "description" : "${description/authorizations/postServiceProcedureAuthAttachment.html}",
        "operationId" : "postAuthorizationAttachment_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations/{authorizationId}/notes" : {
      "get" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Gets the notes for a service procedure authorization",
        "description" : "${description/authorizations/getServiceProcedureAuthorizationNotes.html}",
        "operationId" : "getAuthorizationNotes_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Creates a new note for a service procedure authorization",
        "description" : "${description/authorizations/postServiceProcedureAuthNote.html}",
        "operationId" : "postAuthorizationNote_3",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-procedure-authorizations-v2" : {
      "post" : {
        "tags" : [ "service-procedure-authorizations" ],
        "summary" : "Submit a service procedure authorization request",
        "description" : "${description/authorizations/postServiceProcedureAuthorizationV2.html}",
        "operationId" : "postServiceProcedureAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "runPrescreenBeforeAuthSubmission",
          "in" : "query",
          "description" : "Indicates if pre-screen has to be run before creating an authorization.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if pre-screen has to be run before creating an authorization.",
            "default" : false
          }
        }, {
          "name" : "createPrescreenNote",
          "in" : "query",
          "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates if in case pre-screen was run resulting in authorization required a pre-screen note has to be created or not.",
            "default" : false
          }
        }, {
          "name" : "rejectCodeIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the request for codes (diagnosis, procedure and etc)",
            "default" : false
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        }, {
          "name" : "copyArtifact",
          "in" : "query",
          "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether copy is being created, UDFs are being copied even if they are marked as hidden",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Service Procedure Authorization Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceProcedureAuthorizationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationSubmissionResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10055" : {
            "description" : "${DuplicateAuthorizationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10202" : {
            "description" : "${AuthorizationDisabledTypeException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10060" : {
            "description" : "${InvalidProviderSpecialtyException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10912" : {
            "description" : "${AssigneeMissingMemberPermissionException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10217" : {
            "description" : "${AuthSpecificContactRequiredException}"
          },
          "400 - 10218" : {
            "description" : "${AuthSpecificContactInvalidException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/interqual-transition-plan" : {
      "get" : {
        "tags" : [ "transition-plan-internal" ],
        "summary" : "Retrieve all the transition plans created for the authorization",
        "description" : "${description/transitionplan/getTransitionPlan.html}",
        "operationId" : "retrieveTransitionPlans-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterqualTransitionPlan"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "transition-plan-internal" ],
        "summary" : "Crete new transition plan",
        "description" : "${description/transitionplan/submitTransitionPlan.html}",
        "operationId" : "submitTransitionPlan-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "reviewSource",
          "in" : "query",
          "description" : "InterQual Review Source",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "InterQual Review Source",
            "xml" : {
              "name" : "UMInterqualReviewSourceEnum",
              "namespace" : "http://www.casenet.com/UMInterqualReviewSourceEnum"
            },
            "enum" : [ "REVIEW_MANAGER", "IQCONNECT" ]
          }
        } ],
        "requestBody" : {
          "description" : "InterQual document",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterqualTransitionPlan"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "409 - 10957" : {
            "description" : "${TransitionPlanAlreadyExistsException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/interqual-transition-plan/notes" : {
      "get" : {
        "tags" : [ "transition-plan-internal" ],
        "summary" : "Get all transition plan notes for an authorization",
        "description" : "${description/transitionplan/getTransitionPlanNotes.html}",
        "operationId" : "getTransitionPlanNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          }
        }
      },
      "post" : {
        "tags" : [ "transition-plan-internal" ],
        "summary" : "Create new transition plan note",
        "description" : "${description/transitionplan/submitTransitionPlanNotes.html}",
        "operationId" : "submitTransitionPlanNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Request Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransitionPlanNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "404 - 10956" : {
            "description" : "${TransitionPlanNotFoundException}"
          }
        }
      }
    },
    "/bhp-nodes/{bhpNodeFeedIdFullPath}/care-plans-configuration" : {
      "get" : {
        "tags" : [ "bhp-nodes" ],
        "summary" : "Get the configuration for care plans based on the BHP node",
        "description" : "${description/bhp/getCarePlanBhpConfiguration.html}",
        "operationId" : "getCarePlanBhpConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "path",
          "description" : "The BHP node feed ID full path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanBhpConfiguration"
                  }
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/bhp-nodes/{bhpNodeFeedIdFullPath}/currency-configuration" : {
      "get" : {
        "tags" : [ "bhp-nodes" ],
        "summary" : "Retrieve the currency information configured for the BhpNode",
        "description" : "${description/bhp/getCurrencyConfiguration.html}",
        "operationId" : "getCurrencyConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "path",
          "description" : "The BHP node feed ID full path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyBhpConfiguration"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/bhp-nodes/{bhpNodeFeedIdFullPath}/default-country" : {
      "get" : {
        "tags" : [ "bhp-nodes" ],
        "summary" : "Retrieve the default country configured for the BhpNode",
        "description" : "${description/bhp/getDefaultCountry.html}",
        "operationId" : "getDefaultCountryByBhpFeedPath-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "path",
          "description" : "The BHP node feed ID full path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          }
        }
      }
    },
    "/bhp-nodes/{bhpNodeFeedIdFullPath}/authorization-configuration" : {
      "get" : {
        "tags" : [ "bhp-nodes" ],
        "summary" : "Returns the Inpatient, Service Procedure and Rx authorization configuration for the requested BHP node",
        "description" : "${description/bhp/getAuthorizationBhpConfiguration.html}",
        "operationId" : "getAuthorizationConfiguration_2",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "path",
          "description" : "The BHP node feed ID full path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationBhpConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/bhp-node-search" : {
      "post" : {
        "tags" : [ "bhp-nodes" ],
        "summary" : "Search for bhp nodes",
        "description" : "${description/bhp/searchBhpNode.html}",
        "operationId" : "searchBhpNodes-internal",
        "requestBody" : {
          "description" : "The search criteria for bhp nodes",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BhpNodeCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BhpNodeSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11222" : {
            "description" : "${DuplicateSortColumnException}"
          }
        }
      }
    },
    "/configuration/birth-events" : {
      "get" : {
        "tags" : [ "birth-events" ],
        "summary" : "Gets the birth event configuration",
        "description" : "${description/birthevent/birthEventConfiguration.html}",
        "operationId" : "getBirthEventConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/birth-events" : {
      "get" : {
        "tags" : [ "birth-events" ],
        "summary" : "Gets the birth events summary",
        "description" : "${description/member-summary/getBirthEventSummary.html}",
        "operationId" : "getBirthEventSummary",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BirthEventSummary"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "birth-events" ],
        "summary" : "Creates a birth event",
        "description" : "${description/birthevent/createBirthEvent.html}",
        "operationId" : "createBirthEvent",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The birth event request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BirthEventRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 13000" : {
            "description" : "${BirthEventCurrentMemberRequiredException}"
          },
          "400 - 13001" : {
            "description" : "${BirthEventSameMemberException}"
          }
        }
      }
    },
    "/members/{memberId}/birth-events/{birthEventId}" : {
      "get" : {
        "tags" : [ "birth-events" ],
        "summary" : "Gets the birth event details",
        "description" : "${description/birthevent/getBirthEvent.html}",
        "operationId" : "getBirthEventDetails",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "birthEventId",
          "in" : "path",
          "description" : "Birth event ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BirthEvent"
                }
              }
            }
          },
          "404 - 13002" : {
            "description" : "${BirthEventNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "birth-events" ],
        "summary" : "Edits a birth event",
        "description" : "${description/birthevent/editBirthEvent.html}",
        "operationId" : "editBirthEvent",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "birthEventId",
          "in" : "path",
          "description" : "Birth event ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The birth event update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateBirthEventRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 13000" : {
            "description" : "${BirthEventCurrentMemberRequiredException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 13002" : {
            "description" : "${BirthEventNotFoundException}"
          },
          "400 - 13001" : {
            "description" : "${BirthEventSameMemberException}"
          }
        }
      }
    },
    "/care-opportunity-configuration" : {
      "get" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "Get the Care Opportunities configuration",
        "description" : "${description/care-opportunity-configuration/getCareOpportunityConfiguration.html}",
        "operationId" : "getCareOpportunityConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CareOpportunityConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/care-opportunity/configuration" : {
      "get" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "Gets member specific configuration items",
        "description" : "${description/careopportunity/getMemberCareOpportunityConfigurationResponse.html}",
        "operationId" : "getMemberCareOpportunityConfiguration-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CareOpportunityMemberConfiguration"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/care-opportunity/{indicatorCode}/history" : {
      "get" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "Get the member's risk indicator and its historical changes",
        "description" : "${description/careopportunity/getRiskIndicatorHistoryResponse.html}",
        "operationId" : "getMemberRiskIndicatorHistory",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "indicatorCode",
          "in" : "path",
          "description" : "Risk Indicator Code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RiskIndicatorHistoryResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10939" : {
            "description" : "${MemberRiskIndicatorCodeException}"
          }
        }
      }
    },
    "/members/{memberId}/care-opportunity/{indicatorCode}/history-search" : {
      "post" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "Get the paginated member's risk indicator and its historical changes",
        "description" : "${description/careopportunity/postRiskIndicatorHistorySearch.html}",
        "operationId" : "searchMemberRiskIndicatorHistory-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "indicatorCode",
          "in" : "path",
          "description" : "Risk Indicator Code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The risk indicator history search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RiskIndicatorHistorySearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RiskIndicatorHistorySearchResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10939" : {
            "description" : "${MemberRiskIndicatorCodeException}"
          }
        }
      }
    },
    "/members/{memberId}/care-opportunity" : {
      "put" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "It updates the member risk indicators list",
        "description" : "${description/careopportunity/updateMemberRiskIndicators.html}",
        "operationId" : "updateMemberRiskIndicators",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The members risk indicators update request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRiskIndicatorsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "400 - 10038" : {
            "description" : "${XmlValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10933" : {
            "description" : "${RiskIndicatorNotExistsException}"
          }
        }
      },
      "post" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "It creates the member risk indicators list",
        "description" : "${description/careopportunity/createMemberRiskIndicators.html}",
        "operationId" : "createMemberRiskIndicators",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The members risk indicators creation request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRiskIndicatorsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "400 - 10038" : {
            "description" : "${XmlValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10940" : {
            "description" : "${RiskIndicatorAlreadyExistsException}"
          }
        }
      }
    },
    "/members/{memberId}/care-opportunity/risk-indicators" : {
      "get" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "Gets the risk indicators by member",
        "description" : "${description/careopportunity/getRiskIndicatorResponse.html}",
        "operationId" : "getMemberRiskIndicators",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RiskIndicatorResponse"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/care-opportunity-search" : {
      "post" : {
        "tags" : [ "care-opportunities" ],
        "summary" : "Search for Member Care Opportunities",
        "description" : "${description/care-opportunity-search/postCareOpportunitySearch.html}",
        "operationId" : "careOpportunitySearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The care opportunity search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CareOpportunitySearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CareOpportunitySearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/care-plans-configuration/problem-definitions/{definitionId}" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get problem definition",
        "description" : "${description/care-plan/getProblemDefinition.html}",
        "operationId" : "getProblemDefinition-internal",
        "parameters" : [ {
          "name" : "definitionId",
          "in" : "path",
          "description" : "Problem definition id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDefinition"
                }
              }
            }
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          }
        }
      }
    },
    "/care-plans-configuration/action-definitions/{definitionId}" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get action definition",
        "description" : "${description/care-plan/getActionDefinition.html}",
        "operationId" : "getActionDefinition-internal",
        "parameters" : [ {
          "name" : "definitionId",
          "in" : "path",
          "description" : "Action definition id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionDefinition"
                }
              }
            }
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          }
        }
      }
    },
    "/care-plans-configuration" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns the configuration for care plans",
        "description" : "${description/care-plan/getCarePlanConfiguration.html}",
        "operationId" : "getCarePlanConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/care-plans-configuration/definitions/{carePlanDefinitionId}" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get care plan definition",
        "description" : "${description/care-plan/getCarePlanDefinition.html}",
        "operationId" : "getCarePlanDefinition-internal",
        "parameters" : [ {
          "name" : "carePlanDefinitionId",
          "in" : "path",
          "description" : "Care plan definition id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarePlanDefinitionNode"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          }
        }
      }
    },
    "/care-plans-configuration/problem-definitions/{definitionId}/note-definitions" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get note definitions for the problem definition",
        "description" : "${description/care-plan/getNoteDefinitions.html}",
        "operationId" : "getProblemNoteDefinitions-internal",
        "parameters" : [ {
          "name" : "definitionId",
          "in" : "path",
          "description" : "Problem definition id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteDefinition"
                  }
                }
              }
            }
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          }
        }
      }
    },
    "/care-plans-configuration/objective-definitions/{definitionId}" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get objective definition",
        "description" : "${description/care-plan/getObjectiveDefinition.html}",
        "operationId" : "getObjectiveDefinition-internal",
        "parameters" : [ {
          "name" : "definitionId",
          "in" : "path",
          "description" : "Objective definition id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectiveDefinition"
                }
              }
            }
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          }
        }
      }
    },
    "/care-plans-configuration-v2" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get the configuration for care plans",
        "description" : "${description/care-plan/getCarePlanConfiguration2.html}",
        "operationId" : "getCarePlanConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarePlanConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/care-plans/actions" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns all care plan actions for a member",
        "description" : "${description/care-plan/getMemberActions.html}",
        "operationId" : "getMemberActions",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status to filter actions",
          "schema" : {
            "type" : "string",
            "description" : "Status to filter actions",
            "xml" : {
              "name" : "CarePlanStatusSearchType",
              "namespace" : "http://www.casenet.com/CarePlanStatusSearchType"
            },
            "default" : "ALL",
            "enum" : [ "ALL", "OPEN", "CLOSED" ]
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type to filter actions. It could be a main type: INTERVENTION, SERVICE_REQUEST, ASSESSMENT, TASK, TEXT or a subtype",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanAction"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/notes" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns all notes of a care plan, inclusion of voided notes depends on the value of includeVoided",
        "description" : "${description/care-plan/getCarePlanNoteInstance.html}",
        "operationId" : "getCarePlanNotes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The note creation date from which active notes will be returned. If not provided, all active notes will be returned",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeVoided",
          "in" : "query",
          "description" : "Include or exclude voided notes. Empty param will return active notes only",
          "schema" : {
            "type" : "boolean",
            "description" : "Include or exclude voided notes. Empty param will return active notes only",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanNoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Creates a new note for a CarePlan",
        "description" : "${description/care-plan/postCarePlanNote.html}",
        "operationId" : "postCarePlanNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "careplanVersion",
          "in" : "query",
          "description" : "The Careplan current version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The Careplan current version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get a summary of all care plans for a member",
        "description" : "${description/care-plan/getCarePlansSummaryByMemberId.html}",
        "operationId" : "getCarePlansSummaryByMemberId",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "includeClosed",
          "in" : "query",
          "description" : "Includes closed care plans",
          "schema" : {
            "type" : "boolean",
            "description" : "Includes closed care plans",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanSummary"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Creates a new Care Plan",
        "description" : "${description/care-plan/postCarePlan.html}",
        "operationId" : "createCarePlan-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Care Plan Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubmitCarePlanResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "404 - 11108" : {
            "description" : "${CarePlanConditionDefinitionNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns all details of a care plan",
        "description" : "${description/care-plan/getCarePlanDetails.html}",
        "operationId" : "getCarePlanDetails",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status to filter actions, objectives and problems",
          "schema" : {
            "type" : "string",
            "description" : "Status to filter actions, objectives and problems",
            "xml" : {
              "name" : "CarePlanStatusSearchType",
              "namespace" : "http://www.casenet.com/CarePlanStatusSearchType"
            },
            "default" : "ALL",
            "enum" : [ "ALL", "OPEN", "CLOSED" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarePlan"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "put" : {
        "tags" : [ "care-plans" ],
        "summary" : "Updates an existing Care Plan",
        "description" : "${description/care-plan/putCarePlan.html}",
        "operationId" : "updateCarePlan-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "The ID of the Care Plan to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "submitCarePlan",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "boolean",
            "description" : "Submit Care Plan upon update",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Update Care Plan Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubmitCarePlanResponse"
                }
              }
            }
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 11105" : {
            "description" : "${CarePlanElementNotFoundException}"
          },
          "400 - 11107" : {
            "description" : "${CarePlanAssessmentInProgressException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 10056" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/acknowledgements" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns acknowledgments of a care plan",
        "description" : "${description/care-plan/getCarePlanAcknowledgement.html}",
        "operationId" : "getCarePlanAcknowledgements",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanAcknowledgement"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          }
        },
        "deprecated" : true
      }
    },
    "/members/{memberId}/care-plans/builder-care-plan" : {
      "put" : {
        "tags" : [ "care-plans" ],
        "summary" : "Updates existing Care Plans from Builder",
        "description" : "${description/care-plan/putCarePlansFromBuilder.html}",
        "operationId" : "updateCarePlanFromBuilder-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Care Plan From Builder Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCarePlansFromBuilderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SaveCarePlanResponse"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          },
          "400 - 11104" : {
            "description" : "${CarePlanAlreadyClosedException}"
          },
          "400 - 11112" : {
            "description" : "${CarePlanRecommendationArtifactNotAvailableException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      },
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Creates new Care Plans from Builder",
        "description" : "${description/care-plan/postCarePlansFromBuilder.html}",
        "operationId" : "createCarePlanFromBuilder-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Care Plan From Builder Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCarePlansFromBuilderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SaveCarePlanResponse"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 11112" : {
            "description" : "${CarePlanRecommendationArtifactNotAvailableException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/acknowledgments" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns acknowledgments of a care plan",
        "description" : "${description/care-plan/getCarePlanAcknowledgment.html}",
        "operationId" : "getCarePlanAcknowledgments",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanAcknowledgement"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Create an acknowledgement for selected Care Plan",
        "description" : "${description/care-plan/postAcknowledgments.html}",
        "operationId" : "postAcknowledgements-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Post an acknowledgment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CarePlanAcknowledgementRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/objectives" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns all member's care plan objectives",
        "description" : "${description/care-plan/getMemberObjectives.html}",
        "operationId" : "getMemberObjectives",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status to filter actions, objectives and problems",
          "schema" : {
            "type" : "string",
            "description" : "Status to filter actions, objectives and problems",
            "xml" : {
              "name" : "CarePlanStatusSearchType",
              "namespace" : "http://www.casenet.com/CarePlanStatusSearchType"
            },
            "default" : "ALL",
            "enum" : [ "ALL", "OPEN", "CLOSED" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanObjective"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/problems" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns all care plan problems for a member",
        "description" : "${description/care-plan/getMemberProblems.html}",
        "operationId" : "getMemberProblems",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status to filter actions, objectives and problems",
          "schema" : {
            "type" : "string",
            "description" : "Status to filter actions, objectives and problems",
            "xml" : {
              "name" : "CarePlanStatusSearchType",
              "namespace" : "http://www.casenet.com/CarePlanStatusSearchType"
            },
            "default" : "ALL",
            "enum" : [ "ALL", "OPEN", "CLOSED" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanProblem"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/problems/{problemId}/notes" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Creates a new Care Plan Problem note",
        "description" : "${description/care-plan/createCarePlanProblemNote.html}",
        "operationId" : "createCarePlanProblemNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "The CarePlan ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "problemId",
          "in" : "path",
          "description" : "The CarePlan Problem ID ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "problemVersion",
          "in" : "query",
          "description" : "The CarePlan Problem Version",
          "required" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The CarePlan Problem Version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The note",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "404 - 11105" : {
            "description" : "${CarePlanElementNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 10056" : {
            "description" : "${CarePlanAlreadyClosedException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10925" : {
            "description" : "${UserOfflineMemberOnlineException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/related-assessments" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns all related assessments of a care plan",
        "description" : "${description/care-plan/getRelatedAssessments.html}",
        "operationId" : "getRelatedAssessments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RelatedAssessment"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/related-elements-search" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Searches for care plan's related elements",
        "description" : "${description/care-plan/postRelatedElementsSearch.html}",
        "operationId" : "postRelatedElementsSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "CarePlan related elements search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CarePlanRelatedElementsSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarePlanRelatedElementsSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/outcomes" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Get outcomes for all care plans for a member",
        "description" : "${description/care-plan/getOutcomesByMemberId.html}",
        "operationId" : "getOutcomesByMemberId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ObjectiveOutcomeSummary"
                  }
                }
              }
            }
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/closure-information" : {
      "put" : {
        "tags" : [ "care-plans" ],
        "summary" : "Close a member's care plan",
        "description" : "${description/care-plan/closureInformation.html}",
        "operationId" : "closureInformation-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Care Plan details to close",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "400 - 11107" : {
            "description" : "${CarePlanAssessmentInProgressException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 11104" : {
            "description" : "${CarePlanAlreadyClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/reopen" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Reopen a closed Care Plan",
        "description" : "${description/care-plan/postCarePlanReopen.html}",
        "operationId" : "postCarePlanReopen-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "CarePlan reopen details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReopenCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 11109" : {
            "description" : "${CarePlanAlreadyOpenException}"
          },
          "400 - 11110" : {
            "description" : "${CarePlanReopenNotAllowedException}"
          }
        }
      }
    },
    "/members/{memberId}/care-plans/{carePlanId}/history" : {
      "get" : {
        "tags" : [ "care-plans" ],
        "summary" : "Returns the status change history for a care plan",
        "description" : "${description/care-plan/getCarePlanHistory.html}",
        "operationId" : "getCarePlanHistory",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "carePlanId",
          "in" : "path",
          "description" : "Care plan identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarePlanStatus"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/care-plans/problem-definitions-search" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Search the care plan's problems ",
        "description" : "${description/care-plan/postProblemDefinitionSearch.html}",
        "operationId" : "searchProblemDefinitions-internal",
        "requestBody" : {
          "description" : "The search criteria for problems",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProblemDefinitionSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDefinitionSearchResults"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/care-plans/action-definitions-search" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Search the care plan's actions ",
        "description" : "${description/care-plan/postActionDefinitionSearch.html}",
        "operationId" : "searchActionDefinitions-internal",
        "requestBody" : {
          "description" : "The search criteria for actions",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionDefinitionSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionDefinitionSearchResults"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          }
        }
      }
    },
    "/care-plans/objective-definitions-search" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Search the care plan's objectives ",
        "description" : "${description/care-plan/postObjectiveDefinitionSearch.html}",
        "operationId" : "searchObjectiveDefinitions-internal",
        "requestBody" : {
          "description" : "The search criteria for objectives",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectiveDefinitionSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectiveDefinitionSearchResults"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-care-plans" : {
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Creates a new Care Plan Draft",
        "description" : "${description/care-plan/postCarePlanDraft.html}",
        "operationId" : "createCarePlanDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Care Plan Draft Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveCarePlanResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 10056" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-care-plans/{draftCarePlanId}" : {
      "put" : {
        "tags" : [ "care-plans" ],
        "summary" : "Updates an existing Care Plan Draft",
        "description" : "${description/care-plan/putCarePlanDraft.html}",
        "operationId" : "updateCarePlanDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftCarePlanId",
          "in" : "path",
          "description" : "The ID of the Care Plan Draft to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Care Plan Draft Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SaveCarePlanResponse"
                }
              }
            }
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 11105" : {
            "description" : "${CarePlanElementNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 10056" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11106" : {
            "description" : "${CarePlanIsNotDraftException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      },
      "post" : {
        "tags" : [ "care-plans" ],
        "summary" : "Updates an existing Care Plan Draft to a submitted Care Plan",
        "description" : "${description/care-plan/postSubmitCarePlanDraft.html}",
        "operationId" : "submitCarePlanDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftCarePlanId",
          "in" : "path",
          "description" : "The ID of the Care Plan Draft to update and submit",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Care Plan Draft Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCarePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubmitCarePlanResponse"
                }
              }
            }
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 11105" : {
            "description" : "${CarePlanElementNotFoundException}"
          },
          "400 - 11107" : {
            "description" : "${CarePlanAssessmentInProgressException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "404 - 10056" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11103" : {
            "description" : "${CarePlanElementDefinitionException}"
          },
          "400 - 11106" : {
            "description" : "${CarePlanIsNotDraftException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          }
        }
      }
    },
    "/case-configuration" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Gets the configuration for a case",
        "description" : "${description/cases/getCaseConfiguration.html}",
        "operationId" : "getCaseConfiguration",
        "parameters" : [ {
          "name" : "caseAction",
          "in" : "query",
          "description" : "The user action for case",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The user action for case",
            "xml" : {
              "name" : "CaseAction",
              "namespace" : "http://www.casenet.com/CaseAction"
            },
            "default" : "ADD",
            "enum" : [ "ADD", "ADD_AND_ASSIGN", "EDIT", "CLOSE", "REOPEN", "GET" ]
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/cases" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Create a member case",
        "description" : "${description/cases/postCase.html}",
        "operationId" : "createCase",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The new case information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseIdentity"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10069" : {
            "description" : "${InvalidDiagnosisException}"
          },
          "400 - 10169" : {
            "description" : "${VoidDiagnosisException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10070" : {
            "description" : "${DuplicateCaseNameException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/notes" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Retrieve a note-details",
        "description" : "${description/cases/getNotes.html}",
        "operationId" : "getNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Creates a new note for a Case",
        "description" : "${description/cases/createCaseNote.html}",
        "operationId" : "createCaseNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        }, {
          "name" : "caseVersion",
          "in" : "query",
          "description" : "The Case current version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The Case current version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10075" : {
            "description" : "${InvalidNoteTypeException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/case-reopen" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Reopen a member case",
        "description" : "${description/cases/reopenCase.html}",
        "operationId" : "reopenCase-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "memberId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "caseId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Reopen Case Information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReopenCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10098" : {
            "description" : "${OpenTasksForCaseException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/case-closure" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Close a member case",
        "description" : "${description/cases/closeCase.html}",
        "operationId" : "closeCase",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The close case information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10098" : {
            "description" : "${OpenTasksForCaseException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/authorizations" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "to see detailed information of the Case and this API provides details regarding authorizations",
        "description" : "${description/cases/findAuthorizationbyMember.html}",
        "operationId" : "findAuthorizationsByMemberAndCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SummaryAuthorization"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/close-tasks" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Close tasks",
        "description" : "${description/cases/closeTasks.html}",
        "operationId" : "closeTasks-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "List of Tasks to be closed",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseTasksRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Retrieve a member case",
        "description" : "${description/cases/getCase.html}",
        "operationId" : "getCase",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CnCase"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "cases" ],
        "summary" : "Update a member case",
        "description" : "${description/cases/putCase.html}",
        "operationId" : "updateCase",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "The updated case information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10069" : {
            "description" : "${InvalidDiagnosisException}"
          },
          "400 - 10169" : {
            "description" : "${VoidDiagnosisException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10070" : {
            "description" : "${DuplicateCaseNameException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "400 - 10065" : {
            "description" : "${DiagnosisRequiredException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/time-tracking/{timeTrackingId}/void-info" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Void time tracking",
        "description" : "${description/cases/postVoidTimeTracking.html}",
        "operationId" : "postVoidTimeTracking-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "Case Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeTrackingId",
          "in" : "path",
          "description" : "TimeTracking Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "description" : "Time Tracking request information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/draft-notifications" : {
      "put" : {
        "tags" : [ "cases" ],
        "summary" : "Updates a draft case notification",
        "description" : "${description/cases/updateDraftCaseNotification.html}",
        "operationId" : "updateDraftCaseNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "updateDraftCaseNotificationRequest" : {
                    "$ref" : "#/components/schemas/UpdateCaseNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          }
        }
      },
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Saves a case notification",
        "description" : "${description/cases/saveCaseNotification.html}",
        "operationId" : "saveCaseNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "saveDraftCaseNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateCaseNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10502" : {
            "description" : "${LetterTemplateNotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/care-plans" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "View CarePlans for a case",
        "description" : "${description/cases/getCaseCarePlan.html}",
        "operationId" : "findCarePlanSummaryByCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "memberId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "caseId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarePlanSummary"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/waiver-enrollments" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : " To view waiver enrollments associated with given Case Id in the View Case Detail",
        "description" : "${description/cases/getEnrollments.html}",
        "operationId" : "getHcsEnrollmentSummaryByCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WaiverEnrollment"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/tasks" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Retrieves list of open task for member case",
        "description" : "${description/cases/getOpenCaseTasks.html}",
        "operationId" : "getTasksForCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseTasks"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/time-tracking-activities" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get time tracking details",
        "description" : "${description/cases/timetracking.html}",
        "operationId" : "getTimeTrackingList-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "Case Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeTrackingActivity"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/service-requests" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get the service request list of the case by caseId",
        "description" : "${description/cases/getServiceRequestLiteByCaseId.html}",
        "operationId" : "findServiceRequestsLiteByCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceRequestLite"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/assessment-summary" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get the Assessments of the case",
        "description" : "${description/cases/getAssessmentsByCaseId.html}",
        "operationId" : "findAssessmentsByCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BaseAssessment"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/referrals" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get the referral list of the case by caseId",
        "description" : "${description/cases/getReferralsLiteByCaseId.html}",
        "operationId" : "findReferralsLiteByCaseId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReferralLite"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/notifications" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Submits a case notification",
        "description" : "${description/cases/submitCaseNotification.html}",
        "operationId" : "submitCaseNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "submitCaseNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateCaseNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/program-enrollments" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "View ProgramEnrollments for each case",
        "description" : "${description/cases/getCasePrgmEnrollment.html}",
        "operationId" : "getPrgmEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "memberId",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "caseId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgramEnrollment"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/case-history-field-changes" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get the CaseFieldChanges of the case",
        "description" : "${description/cases/getCaseFieldChangesByCaseId.html}",
        "operationId" : "fetchCaseFieldChanges-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        }, {
          "name" : "maxItems",
          "in" : "query",
          "description" : "Maximum Number of Items for Case History, will be defaulted to 100 if no value is provided",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CaseFieldChange"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cases/{caseId}/draft-notifications/{draftNotificationId}" : {
      "get" : {
        "tags" : [ "cases" ],
        "summary" : "Get a draft case notification",
        "description" : "${description/cases/getDraftCaseNotification.html}",
        "operationId" : "getDraftCaseNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caseId",
          "in" : "path",
          "description" : "The case ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "caseIdType",
          "in" : "query",
          "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
          "schema" : {
            "type" : "string",
            "description" : "The type of the Case identifier. The type will be defaulted to 'INTERNAL_ID' if no value is passed.'",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          }
        }, {
          "name" : "draftNotificationId",
          "in" : "path",
          "description" : "The ID of the draft notification that we want to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseNotificationDetails"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 11510" : {
            "description" : "${InternalLetterArtifactException}"
          },
          "404 - 10518" : {
            "description" : "${DraftNotificationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/case-search" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Search for cases",
        "description" : "${description/cases/searchCase.html}",
        "operationId" : "searchCases",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for cases",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CaseSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/case-search-v2" : {
      "post" : {
        "tags" : [ "cases" ],
        "summary" : "Search for cases",
        "description" : "${description/cases/searchCaseV2.html}",
        "operationId" : "searchCasesV2-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for cases",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CaseSearchCriteriaV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseSearchResultsV2"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/authorization-claims-acceptance-requests/{claimRequestId}" : {
      "put" : {
        "tags" : [ "claims" ],
        "summary" : "Updates the acceptance status of a claim",
        "description" : "${description/claim/updateClaimAcceptance.html}",
        "operationId" : "updateClaimAcceptance",
        "parameters" : [ {
          "name" : "claimRequestId",
          "in" : "path",
          "description" : "Request ID of the claim",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Claims acceptance message",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClaimAcceptance"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10101" : {
            "description" : "${ClaimRequestNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/claims/{claimId}" : {
      "get" : {
        "tags" : [ "claims" ],
        "summary" : "Claims Summary view",
        "description" : "${description/claim/getViewClaims.html}",
        "operationId" : "viewClaimResults-internal",
        "parameters" : [ {
          "name" : "claimId",
          "in" : "path",
          "description" : "The Claim Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseClaim"
                }
              }
            }
          },
          "404 - 10101" : {
            "description" : "${ClaimRequestNotFoundException}"
          },
          "400 - 10106" : {
            "description" : "${ClaimRequestDoesNotBelongToMemberException}"
          }
        }
      }
    },
    "/members/{memberId}/claims" : {
      "post" : {
        "tags" : [ "claims" ],
        "summary" : "Search for claims summaries",
        "description" : "${description/claim/searchClaims.html}",
        "operationId" : "claimSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Claims search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClaimsBaseSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClaimsSearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          }
        }
      }
    },
    "/members/{memberId}/claims/medications-donut-hole" : {
      "get" : {
        "tags" : [ "claims" ],
        "summary" : "Get Medications donut hole",
        "description" : "${description/claim/getDonutHoleResults.html}",
        "operationId" : "getDonutHoleResults-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedicationsDonutHoleResult"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11518" : {
            "description" : "${NoBhpSetupForMedicationDonutHoleException}"
          }
        }
      }
    },
    "/allergy-configuration" : {
      "get" : {
        "tags" : [ "allergies" ],
        "summary" : "Gets the allergy configuration (Deprecated)",
        "description" : "${description/allergies/getAllergyConfiguration.html}",
        "operationId" : "getAllergyConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllergyConfiguration"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/diagnosis-codes" : {
      "get" : {
        "tags" : [ "diagnosis-codes" ],
        "summary" : "Search for diagnosis codes",
        "description" : "${description/diagnosis-codes/search.html}",
        "operationId" : "diagnosisCodeSearch",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Matches a substring from the diagnosis name field",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nameSearchType",
          "in" : "query",
          "description" : "Change search mode for Diagnosis name.",
          "schema" : {
            "type" : "string",
            "description" : "Change search mode for Diagnosis code.",
            "xml" : {
              "name" : "StringMatchType",
              "namespace" : "http://www.casenet.com/StringMatchType"
            },
            "default" : "BEGINS_WITH",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "EQUALS" ]
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Matches the diagnosis code field",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeSearchType",
          "in" : "query",
          "description" : "Change search mode for Diagnosis code.",
          "schema" : {
            "type" : "string",
            "description" : "Change search mode for Diagnosis code.",
            "xml" : {
              "name" : "StringMatchType",
              "namespace" : "http://www.casenet.com/StringMatchType"
            },
            "default" : "BEGINS_WITH",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "EQUALS" ]
          }
        }, {
          "name" : "diagnosisCodeType",
          "in" : "query",
          "description" : "The type of diagnosis code",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeType",
              "namespace" : "http://www.casenet.com/DiagnosisCodeType"
            },
            "enum" : [ "ICD9", "ICD10" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DiagnosisCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/diagnosis-codes-search" : {
      "post" : {
        "tags" : [ "diagnosis-codes" ],
        "summary" : "Search for diagnosis codes",
        "description" : "${description/diagnosis-codes/postDiagnosisSearch.html}",
        "operationId" : "searchDiagnosisCodes-internal",
        "requestBody" : {
          "description" : "The diagnosis search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiagnosisCodeSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiagnosisCodeSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/diagnosis-configuration" : {
      "get" : {
        "tags" : [ "diagnosis-codes" ],
        "summary" : "Configuration for create and close a member diagnosis",
        "description" : "${description/diagnoses/getDiagnosisConfiguration.html}",
        "operationId" : "getDiagnosisConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/diagnoses-search" : {
      "post" : {
        "tags" : [ "diagnosis-codes" ],
        "summary" : "Search for member diagnoses",
        "description" : "${description/diagnosis-search/postDiagnosesSummary.html}",
        "operationId" : "diagnosesSearch",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The diagnosis search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiagnosisSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiagnosesSearchResults"
                }
              }
            }
          }
        }
      }
    },
    "/drugs/{drugId}" : {
      "get" : {
        "tags" : [ "drugs" ],
        "summary" : "Find a drug by ID",
        "description" : "${description/drugs/getDrugById.html}",
        "operationId" : "getDrug",
        "parameters" : [ {
          "name" : "drugId",
          "in" : "path",
          "description" : "The drug ID obtained from the drug search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Drug"
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/drugs" : {
      "get" : {
        "tags" : [ "drugs" ],
        "summary" : "Search for drugs",
        "description" : "${description/drugs/getDrugs.html}",
        "operationId" : "simpleDrugSearch",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "A search term matching the drug name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nameMatchType",
          "in" : "query",
          "description" : "Search mode for drug name field",
          "schema" : {
            "type" : "string",
            "description" : "Search mode for drug name field",
            "xml" : {
              "name" : "StringMatchType",
              "namespace" : "http://www.casenet.com/StringMatchType"
            },
            "default" : "BEGINS_WITH",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "EQUALS" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SimpleDrug"
                  }
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/drug-search" : {
      "post" : {
        "tags" : [ "drugs" ],
        "summary" : "Search for drugs",
        "description" : "${description/drugs/postDrugSearch.html}",
        "operationId" : "searchDrugs-internal",
        "requestBody" : {
          "description" : "The search criteria for drugs",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DrugSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DrugSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11502" : {
            "description" : "${MediSpanDrugSearchException}"
          }
        }
      }
    },
    "/medication-configuration" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Gets the medication configuration",
        "description" : "${description/medications/getMedicationConfiguration.html}",
        "operationId" : "getMedicationConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/medication-configuration-v2" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Gets the Medication Configurations",
        "description" : "${description/medications/getMedicationConfigurationV2.html}",
        "operationId" : "getMedicationConfigurationV2-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedicationConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens-search" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Search for member medication regimens",
        "description" : "${description/medication-regimens/postMedicationRegimensSearch.html}",
        "operationId" : "searchMemberMedicationRegimens-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "medication regimens search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MedicationRegimensSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedicationRegimensSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11507" : {
            "description" : "${InvalidStandardConfigurationException}"
          }
        }
      }
    },
    "/members/{memberId}/medications-search" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Search for member medications",
        "description" : "${description/medication-search/postMedicationSearch.html}",
        "operationId" : "medicationSearch",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "medication search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MedicationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedicationSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/medications-search-v2" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Search for member medications",
        "description" : "${description/medication-search/postMedicationSearchV2.html}",
        "operationId" : "searchMemberMedications-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "medication search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MedicationSummarySearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedicationSummarySearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11507" : {
            "description" : "${InvalidStandardConfigurationException}"
          }
        }
      }
    },
    "/members/{memberId}/allergen-medication-reactions-search" : {
      "post" : {
        "tags" : [ "allergies" ],
        "summary" : "Search for reacting medications",
        "description" : "${description/allergies/postMedispanAllergenReactionSearch.html}",
        "operationId" : "postAllergenMedicationReactionsSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MedispanAllergenReactionSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedispanAllergenSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11520" : {
            "description" : "${MedispanAllergiesNotEnabledException}"
          },
          "404 - 11523" : {
            "description" : "${MediSpanDrugAllergenScreeningException}"
          }
        }
      }
    },
    "/medispan-allergen-search" : {
      "post" : {
        "tags" : [ "allergies" ],
        "summary" : "Search for Medispan Allergens",
        "description" : "${description/allergies/postMedispanAllergenSearch.html}",
        "operationId" : "searchAllergens",
        "requestBody" : {
          "description" : "The search criteria for allergens",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MedispanAllergenSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedispanAllergenSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11519" : {
            "description" : "${MediSpanAllergenSearchException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/drug-allergy-reactions-search" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Search for reacting allergies",
        "description" : "${description/medications/postDrugAllergyReactionsSearch.html}",
        "operationId" : "postDrugAllergyReactionsSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MedispanDrugReactionSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MedispanAllergenSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11520" : {
            "description" : "${MedispanAllergiesNotEnabledException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "404 - 11523" : {
            "description" : "${MediSpanDrugAllergenScreeningException}"
          }
        }
      }
    },
    "/members/{memberId}/allergies/{allergyId}" : {
      "get" : {
        "tags" : [ "allergies" ],
        "summary" : "Retrieve a member allergy",
        "description" : "${description/allergies/getAllergy.html}",
        "operationId" : "getAllergy",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allergyId",
          "in" : "path",
          "description" : "The allergy ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Allergy"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "allergies" ],
        "summary" : "Update a member allergy",
        "description" : "${description/allergies/putMemberAllergy.html}",
        "operationId" : "updateAllergy",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allergyId",
          "in" : "path",
          "description" : "The allergy ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The allergy information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAllergyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 11523" : {
            "description" : "${MediSpanDrugAllergenScreeningException}"
          }
        }
      }
    },
    "/members/{memberId}/allergies" : {
      "get" : {
        "tags" : [ "allergies" ],
        "summary" : "Find allergies for a member",
        "description" : "${description/allergies/getMemberAllergies.html}",
        "operationId" : "getMemberAllergies",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Allergy"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "allergies" ],
        "summary" : "Create a member allergy",
        "description" : "${description/allergies/postMemberAllergy.html}",
        "operationId" : "createAllergy",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The allergy information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAllergyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/allergies/{allergyId}/void-info" : {
      "put" : {
        "tags" : [ "allergies" ],
        "summary" : "Void a member allergy",
        "description" : "${description/allergies/voidMemberAllergy.html}",
        "operationId" : "voidAllergy",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allergyId",
          "in" : "path",
          "description" : "The allergy ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/allergies-v2" : {
      "get" : {
        "tags" : [ "allergies" ],
        "summary" : "Get a summary of a sorted member's allergies",
        "description" : "${description/allergies/getSortedMemberAllergies.html}",
        "operationId" : "getSortedMemberAllergies-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "Sort Column",
            "default" : "ALLERGY",
            "enum" : [ "ALLERGY", "ALLERGY_DETAIL", "REACTION", "SEVERITY", "SOURCE", "DATE_IDENTIFIED", "ACTIVE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort type",
          "schema" : {
            "type" : "string",
            "description" : "Sort type",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status",
          "schema" : {
            "type" : "string",
            "description" : "Status",
            "default" : "ALL",
            "enum" : [ "ACTIVE", "INACTIVE", "ALL" ]
          }
        }, {
          "name" : "showVoided",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns voided allergies",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns voided allergies",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllergySearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "allergies" ],
        "summary" : "Create a TruCare Allergy or a MediSpan Drug Allergy for a member",
        "description" : "${description/allergies/postMemberAllergyV2.html}",
        "operationId" : "createAllergy_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The allergy information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateBaseAllergyRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11520" : {
            "description" : "${MedispanAllergiesNotEnabledException}"
          },
          "404 - 11521" : {
            "description" : "${MedispanAllergenNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/diagnoses/{diagnosisId}" : {
      "get" : {
        "tags" : [ "diagnoses" ],
        "summary" : "Gets a member diagnosis",
        "description" : "${description/diagnoses/getDiagnosis.html}",
        "operationId" : "getDiagnosis",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diagnosisId",
          "in" : "path",
          "description" : "The diagnosis ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Diagnosis"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "diagnoses" ],
        "summary" : "Update a member diagnosis",
        "description" : "${description/diagnoses/editMemberDiagnosis.html}",
        "operationId" : "editDiagnosis",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diagnosisId",
          "in" : "path",
          "description" : "The diagnosis ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The diagnosis information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/diagnoses" : {
      "post" : {
        "tags" : [ "diagnoses" ],
        "summary" : "Create a member diagnosis",
        "description" : "${description/diagnoses/postMemberDiagnosis.html}",
        "operationId" : "addDiagnosis",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The diagnosis information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10047" : {
            "description" : "${DuplicateDiagnosisException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          }
        }
      }
    },
    "/members/{memberId}/diagnoses/{diagnosisId}/close" : {
      "post" : {
        "tags" : [ "diagnoses" ],
        "summary" : "Close a member diagnosis",
        "description" : "${description/diagnoses/closeMemberDiagnosis.html}",
        "operationId" : "closeDiagnosis-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "diagnosisId",
          "in" : "path",
          "description" : "The diagnosis ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The close diagnosis information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseDiagnosisRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/diagnoses/{diagnosisId}/void-info" : {
      "put" : {
        "tags" : [ "diagnoses" ],
        "summary" : "Voids a member medication",
        "description" : "${description/diagnoses/voidMemberDiagnosis.html}",
        "operationId" : "voidDiagnosis",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "diagnosisId",
          "in" : "path",
          "description" : "The diagnosis ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/duplicate-medications-search" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Search for duplicate medication for member medications",
        "description" : "${description/medication-screening/postMemberDuplicateMedication.html}",
        "operationId" : "searchDuplicateMedication-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "duplicate medication search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DuplicateMedicationCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMedicationResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-alerts" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Get medication alerts for the member",
        "description" : "${description/medication-screening/getMemberMedicationAlerts.html}",
        "operationId" : "getMemberMedicationAlerts-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberMedicationAlert"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11515" : {
            "description" : "${MediSpanDrugScreeningException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/medications/{medicationId}" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Gets a member medication",
        "description" : "${description/medications/getMedication.html}",
        "operationId" : "getMedication",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Medication"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/medications" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Gets a member's medications",
        "description" : "${description/medications/getMemberMedications.html}",
        "operationId" : "getMemberMedications-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Medication"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Creates a member medication",
        "description" : "${description/medications/postMemberMedication.html}",
        "operationId" : "addMedication",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The medication information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMedicationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          }
        }
      }
    },
    "/members/{memberId}/medications/{medicationId}/void-info" : {
      "put" : {
        "tags" : [ "medications" ],
        "summary" : "Voids a member medication",
        "description" : "${description/medications/voidMemberMedication.html}",
        "operationId" : "voidMedication",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "11201" : {
            "description" : "${TaskCannotBeCancelledException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/medications/regimen/{medicationCodeId}" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Finds regimen for a member",
        "description" : "${description/medications/getMemberMedicationsRegimen.html}",
        "operationId" : "getMedicationsRegimen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "medicationCodeId",
          "in" : "path",
          "description" : "The medicationCodeId, obtainable from the medication search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Medication"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/modifier-codes" : {
      "get" : {
        "tags" : [ "modifier-codes" ],
        "summary" : "Gets all modifier codes",
        "description" : "${description/modifier-codes/getAllModifierCodes.html}",
        "operationId" : "getAllModifierCodes",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ModifierCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monographs/{monographTypeId}/{monographId}" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Finds the Monograph by monographId and monographType",
        "description" : "${description/medication-screening/postMonograph.html}",
        "operationId" : "searchMonograph-internal",
        "parameters" : [ {
          "name" : "monographId",
          "in" : "path",
          "description" : "monographId to find the Monograph for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "monographTypeId",
          "in" : "path",
          "description" : "monographTypeId to specify the type of interaction",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "monographTypeId to specify the type of interaction",
            "default" : "DRUG",
            "enum" : [ "DRUG", "FOOD", "ALLERGEN" ]
          }
        } ],
        "requestBody" : {
          "description" : "Interacting drugs description",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonographRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11524" : {
            "description" : "${MediSpanMonographSearchException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          },
          "400 - 11520" : {
            "description" : "${MedispanAllergiesNotEnabledException}"
          }
        }
      }
    },
    "/procedure-codes/{procedureCodeId}/descriptions" : {
      "get" : {
        "tags" : [ "procedure-codes" ],
        "summary" : "Get all available language descriptions for a procedure code",
        "description" : "${description/procedure-codes/procedureCodeDescriptions.html}",
        "operationId" : "getProcedureCodeDescriptions",
        "parameters" : [ {
          "name" : "procedureCodeId",
          "in" : "path",
          "description" : "Procedure Code Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcedureCodeDescriptions"
                  }
                }
              }
            }
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          }
        }
      }
    },
    "/procedure-codes" : {
      "get" : {
        "tags" : [ "procedure-codes" ],
        "summary" : "Search for procedure codes",
        "description" : "${description/procedure-codes/procedureCodes.html}",
        "operationId" : "procedureCodeSearch",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Matches a substring from the procedure name field",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nameMatchType",
          "in" : "query",
          "description" : "Search mode for procedure name field",
          "schema" : {
            "type" : "string",
            "description" : "Search mode for procedure name field",
            "xml" : {
              "name" : "StringMatchType",
              "namespace" : "http://www.casenet.com/StringMatchType"
            },
            "default" : "BEGINS_WITH",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "EQUALS" ]
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Matches a substring of the procedure code field",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codeMatchType",
          "in" : "query",
          "description" : "Search mode for procedure code field",
          "schema" : {
            "type" : "string",
            "description" : "Search mode for procedure name field",
            "xml" : {
              "name" : "StringMatchType",
              "namespace" : "http://www.casenet.com/StringMatchType"
            },
            "default" : "BEGINS_WITH",
            "enum" : [ "BEGINS_WITH", "CONTAINS", "EQUALS" ]
          }
        }, {
          "name" : "procedureCodeType",
          "in" : "query",
          "description" : "The type of procedure code",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          }
        }, {
          "name" : "languageOption",
          "in" : "query",
          "description" : "Language in which the procedure code description needs to be retrieved",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcedureCode"
                  }
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          }
        }
      }
    },
    "/procedure-codes/{procedureCodeId}/services" : {
      "get" : {
        "tags" : [ "procedure-codes" ],
        "summary" : "Get list of Service for a Procedure Code Id",
        "description" : "${description/service-requests/getServicesByProcedureResponse.html}",
        "operationId" : "getServicesByProcedure-internal",
        "parameters" : [ {
          "name" : "procedureCodeId",
          "in" : "path",
          "description" : "The Procedure Code Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Service"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/procedure-codes-search" : {
      "post" : {
        "tags" : [ "procedure-codes" ],
        "summary" : "Search for procedure codes",
        "description" : "${description/procedure-codes/procedureCodesSearch.html}",
        "operationId" : "searchWithPagination-internal",
        "requestBody" : {
          "description" : "The search criteria for procedure codes",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProcedureCodesSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProcedureCodePaginatedSearchResult"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          }
        }
      }
    },
    "/configuration/allergy" : {
      "get" : {
        "tags" : [ "allergies" ],
        "summary" : "Gets the allergy configuration",
        "description" : "${description/allergies/getPropertyBasedAllergyConfiguration.html}",
        "operationId" : "getAllergyConfiguration_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/quality-incidents/{qualityIncidentId}/attachments/{attachmentId}/void" : {
      "post" : {
        "tags" : [ "quality-incidents-summary-internal" ],
        "summary" : "Void the quality incident Details attachment",
        "description" : "${description/quality-incident/postVoidQualityIncidentAttachment.html}",
        "operationId" : "postVoidQualityIncidentAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "qualityIncidentId",
          "in" : "path",
          "description" : "Quality Incident Id retrieved from quality incident summary search for member.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10962" : {
            "description" : "${QualityIncidentNotFoundException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/quality-incidents/{qualityIncidentId}" : {
      "get" : {
        "tags" : [ "quality-incidents-summary-internal" ],
        "summary" : "Retrieve the quality incident Details along with attachments",
        "description" : "${description/quality-incident/getQualityIncidentDetails.html}",
        "operationId" : "getQualityIncidentDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "qualityIncidentId",
          "in" : "path",
          "description" : "Quality Incident Id retrieved from quality incident summary search for member.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QualityIncidentOutcome"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10962" : {
            "description" : "${QualityIncidentNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/quality-incidents" : {
      "get" : {
        "tags" : [ "quality-incidents-summary-internal" ],
        "summary" : "Retrieve the quality incidents along with attachments associated with the incident related to the member",
        "description" : "${description/quality-incident/getQualityIncidentSummary.html}",
        "operationId" : "getQualityIncidents-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QualityIncidentSummary"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/admin/system-properties" : {
      "get" : {
        "tags" : [ "admin" ],
        "summary" : "Gets the system property value based on the property key",
        "description" : "${description/admin/getSystemPropertyValue.html}",
        "operationId" : "getSystemPropertyValue-internal",
        "parameters" : [ {
          "name" : "propertyKey",
          "in" : "query",
          "description" : "The property key ",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "ANALYTICS_URL", "ALLOW_CAPTURING_ADDRESS_FOR_AUTHORIZATION_SPECIFIC_CONTACT", "PROVIDER_SEARCH_ELIGIBILITY" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10952" : {
            "description" : "${PropertyNotFoundException}"
          },
          "400 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      },
      "post" : {
        "tags" : [ "admin" ],
        "summary" : "Edits a system property. Only for testing purposes.",
        "description" : "${description/admin/postSystemProperty.html}",
        "operationId" : "editSystemProperty-internal",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "The property Key",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "The property Value",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/environment-configuration/reload-brs" : {
      "post" : {
        "tags" : [ "environment" ],
        "summary" : "Reloads BRS proxies",
        "description" : "${description/environment-configuration/brsReload.html}",
        "operationId" : "reloadBRSProxies-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BRSProxyStatusSummary"
                }
              }
            }
          }
        }
      }
    },
    "/environment-configuration" : {
      "get" : {
        "tags" : [ "environment" ],
        "summary" : "Get environment configuration",
        "description" : "${description/environment-configuration/getEnvironmentDetails.html}",
        "operationId" : "getEnvironmentDetails-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnvironmentDetails"
                }
              }
            }
          }
        }
      }
    },
    "/environment-configuration/api-version" : {
      "get" : {
        "tags" : [ "environment" ],
        "summary" : "Get API build number",
        "description" : "${description/environment-configuration/getBuildNumber.html}",
        "operationId" : "getApiBuildInformation",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildInfo"
                }
              }
            }
          }
        }
      }
    },
    "/location-configuration/bhp-configuration/{bhpNodeFeedIdFullPath}" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the Member Location bhp configuration data.",
        "description" : "${description/member-locations/getMemberLocationBhpConfiguration.html}",
        "operationId" : "getMemberLocationBhpConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "path",
          "description" : "The member BHP node Feed ID Full Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LocationBhpConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/address-configurations" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get address configurations by country codes",
        "description" : "${description/addresses/getAddressConfigurations.html}",
        "operationId" : "getAddressConfigurations",
        "parameters" : [ {
          "name" : "alpha2Code",
          "in" : "query",
          "description" : "Country Alpha2 Code",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressConfiguration"
                  }
                }
              }
            }
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          }
        }
      }
    },
    "/countries" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Retrieve all the countries supported",
        "description" : "${description/countries/getCountries.html}",
        "operationId" : "getCountries",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organization-contact-configuration" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get the configuration for creating or modifying an organization contact",
        "description" : "${description/organization-contacts/getOrganizationContactConfiguration.html}",
        "operationId" : "getOrganizationContactConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationContactConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get a member's organization contacts",
        "description" : "${description/organization-contacts/getMemberOrganizationContactSummary.html}",
        "operationId" : "getOrganizationContacts",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "retrieveObsolete",
          "in" : "query",
          "description" : "Retrieve obsolete contacts",
          "schema" : {
            "type" : "boolean",
            "description" : "Retrieve obsolete contacts",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganizationContact"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Create a member organization contact",
        "description" : "${description/organization-contacts/postMemberOrganizationContact.html}",
        "operationId" : "addMemberOrganizationContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Member organization contact information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationContact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}/addresses/{contactAddressId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact address for member organization contact",
        "description" : "${description/organization-contacts/putMemberOrganizationContactAddress.html}",
        "operationId" : "editMemberOrganizationContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactAddressId",
          "in" : "path",
          "description" : "The contact address ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact address info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}/emails" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new email for member organization contact",
        "description" : "${description/organization-contacts/postMemberOrganizationContactEmail.html}",
        "operationId" : "addMemberOrganizationContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact email info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}/addresses" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Create an address for a member organization contact",
        "description" : "${description/organization-contacts/postMemberOrganizationContactAddress.html}",
        "operationId" : "addMemberOrganizationContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact address info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}/emails/{contactEmailId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact email for member organization contact",
        "description" : "${description/organization-contacts/putMemberOrganizationContactEmail.html}",
        "operationId" : "editMemberOrganizationContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "path",
          "description" : "The contact email ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact email info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}/phone-numbers/{contactPhoneNumberId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact phoneNumber for member organization contact",
        "description" : "${description/organization-contacts/putMemberOrganizationContactPhoneNumber.html}",
        "operationId" : "editMemberOrganizationContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneNumberId",
          "in" : "path",
          "description" : "The contact phone number ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact phone number info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}/phone-numbers" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new phone number for member organization contact",
        "description" : "${description/organization-contacts/postMemberOrganizationContactPhoneNumber.html}",
        "operationId" : "addMemberOrganizationContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact phone number info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/organization-contacts/{organizationContactId}" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get a member's organization contact",
        "description" : "${description/organization-contacts/getMemberOrganizationContact.html}",
        "operationId" : "getOrganizationContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationContact"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update a member organization contact",
        "description" : "${description/organization-contacts/putMemberOrganizationContact.html}",
        "operationId" : "updateMemberOrganizationContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationContactId",
          "in" : "path",
          "description" : "The organization contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The organization contact information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationContact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/personal-contact-configuration" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get the configuration for creating or modifying a personal contact",
        "description" : "${description/personal-contacts/getPersonalContactConfiguration.html}",
        "operationId" : "getPersonalContactConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonalContactConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get a member's personal contacts",
        "description" : "${description/personal-contacts/getMemberPersonalContactSummary.html}",
        "operationId" : "getPersonalContacts",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "retrieveObsolete",
          "in" : "query",
          "description" : "Retrieve obsolete contacts",
          "schema" : {
            "type" : "boolean",
            "description" : "Retrieve obsolete contacts",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PersonalContact"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Create a member personal contact",
        "description" : "${description/personal-contacts/postMemberPersonalContact.html}",
        "operationId" : "addMemberPersonalContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Member's personal contact information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonalContact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}/phone-numbers" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new phone number for member personal contact",
        "description" : "${description/personal-contacts/postMemberPersonalContactPhoneNumber.html}",
        "operationId" : "addMemberPersonalContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact phone number info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}/phone-numbers/{contactPhoneNumberId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact phone number for member personal contact",
        "description" : "${description/personal-contacts/putMemberPersonalContactPhoneNumber.html}",
        "operationId" : "editMemberPersonalContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneNumberId",
          "in" : "path",
          "description" : "The contact phone number ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact phone number info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get a member's personal contacts",
        "description" : "${description/personal-contacts/getMemberPersonalContact.html}",
        "operationId" : "getPersonalContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonalContact"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update a member personal contact",
        "description" : "${description/personal-contacts/putMemberPersonalContact.html}",
        "operationId" : "updatePersonalContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The personal contact information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PersonalContact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10048" : {
            "description" : "${PersonalContactNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}/addresses/{contactAddressId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact address for member personal contact",
        "description" : "${description/personal-contacts/putMemberPersonalContactAddress.html}",
        "operationId" : "editMemberPersonalContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactAddressId",
          "in" : "path",
          "description" : "The contact email ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact address info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}/emails" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new email for member personal contact",
        "description" : "${description/personal-contacts/postMemberPersonalContactEmail.html}",
        "operationId" : "addMemberPersonalContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact email info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}/emails/{contactEmailId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact email for member personal contact",
        "description" : "${description/personal-contacts/putMemberPersonalContactEmail.html}",
        "operationId" : "editMemberPersonalContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "path",
          "description" : "The contact email ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact email info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/personal-contacts/{personalContactId}/addresses" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new address for member personal contact",
        "description" : "${description/personal-contacts/postMemberPersonalContactAddress.html}",
        "operationId" : "addMemberPersonalContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "personalContactId",
          "in" : "path",
          "description" : "The personal contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact address info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          }
        }
      }
    },
    "/phone-configurations" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get phone configurations by country codes",
        "description" : "${description/phone-numbers/getPhoneConfigurations.html}",
        "operationId" : "getPhoneConfigurations",
        "parameters" : [ {
          "name" : "alpha2Code",
          "in" : "query",
          "description" : "Country Alpha2 Code",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PhoneConfiguration"
                  }
                }
              }
            }
          },
          "404 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          }
        }
      }
    },
    "/provider-contact-configuration" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get the configuration for creating a provider contact",
        "description" : "${description/provider-contacts/getProviderContactConfiguration.html}",
        "operationId" : "getProviderContactConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderContactConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get a member's provider contacts",
        "description" : "${description/provider-contacts/getMemberProviderContactSummary.html}",
        "operationId" : "getProviderContacts",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "retrieveObsolete",
          "in" : "query",
          "description" : "Retrieve obsolete contacts",
          "schema" : {
            "type" : "boolean",
            "description" : "Retrieve obsolete contacts",
            "default" : false
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "The start index for pagination",
          "schema" : {
            "type" : "integer",
            "description" : "The start index for pagination",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "description" : "Number of returned values",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProviderContact"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Create a member provider contact",
        "description" : "${description/provider-contacts/postMemberProviderContact.html}",
        "operationId" : "addMemberProviderContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Member provider contact information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProviderContact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}/phone-numbers" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new phone number for member provider contact",
        "description" : "${description/provider-contacts/postMemberProviderContactPhoneNumber.html}",
        "operationId" : "addMemberProviderContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact phone number info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}/phone-numbers/{contactPhoneNumberId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact phone number for member provider contact",
        "description" : "${description/provider-contacts/putMemberProviderContactPhoneNumber.html}",
        "operationId" : "editMemberProviderContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneNumberId",
          "in" : "path",
          "description" : "The contact phone number ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact phone number info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}/emails" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new email for member provider contact",
        "description" : "${description/provider-contacts/postMemberProviderContactEmail.html}",
        "operationId" : "addMemberProviderContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact email info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}/addresses/{contactAddressId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact address for member provider contact",
        "description" : "${description/provider-contacts/putMemberProviderContactAddress.html}",
        "operationId" : "editMemberProviderContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactAddressId",
          "in" : "path",
          "description" : "The contact address ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact address info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}/emails/{contactEmailId}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Updates a contact email for member provider contact",
        "description" : "${description/provider-contacts/putMemberProviderContactEmail.html}",
        "operationId" : "editMemberProviderContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "path",
          "description" : "The contact email ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact email info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Get a member's provider contacts",
        "description" : "${description/provider-contacts/getMemberProviderContact.html}",
        "operationId" : "getProviderContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderContact"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "Update a member provider contact",
        "description" : "${description/provider-contacts/putMemberProviderContact.html}",
        "operationId" : "updateMemberProviderContact",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The provider contact information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProviderContact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          }
        }
      }
    },
    "/members/{memberId}/provider-contacts/{providerContactId}/addresses" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Creates new address for member provider contact",
        "description" : "${description/provider-contacts/postMemberProviderContactAddress.html}",
        "operationId" : "addMemberProviderContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerContactId",
          "in" : "path",
          "description" : "The provider contact ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Contact address info.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          }
        }
      }
    },
    "/letter-configuration/enclosures" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the letter configuration enclosures",
        "description" : "${description/letters/getLetterConfigurationEnclosures.html}",
        "operationId" : "getEnclosures",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExternalLetterEnclosure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/letter-configuration" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the letter configuration",
        "description" : "${description/letters/getLetterConfiguration.html}",
        "operationId" : "getExternalLetterConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetterConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/letter-configuration/template/{templateId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the recipients for the letter template id",
        "description" : "${description/correspondence/getRecipient.html}",
        "operationId" : "getRecipientsByTemplateId-internal",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "path",
          "description" : "Letter Template Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetterTemplateVersion"
                }
              }
            }
          },
          "404 - 10944" : {
            "description" : "${ExternalLetterTemplateVersionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/external-letter-mailings/{letterMailingId}/pdfURL" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the PDF URL for an  External letter mailing",
        "description" : "${description/letters/getExternalLetterPDF.html}",
        "operationId" : "getExternalLetterPdf-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "letterMailingId",
          "in" : "path",
          "description" : "Letter Mailing ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetterTemplateVersion"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetterTemplateVersion"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          }
        }
      }
    },
    "/external-letter-templates" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the list of External Letter Templates",
        "description" : "${description/correspondence/getExternalLetterTemplates.html}",
        "operationId" : "getExternalLetterTemplates-internal",
        "parameters" : [ {
          "name" : "casenetFeature",
          "in" : "query",
          "description" : "Casenet License Feature name",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetterTemplate"
                }
              }
            }
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/external-letters/{letterId}" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Save and submit Operation for Failed external letter",
        "description" : "${description/letters/draftExternalLetter.html}",
        "operationId" : "updateFailedExternalLetter-internal",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateExternalLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10928" : {
            "description" : "${LatestMailingInvalidStateException}"
          }
        }
      }
    },
    "/external-letters/{letterId}/void" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Void external letter",
        "description" : "${description/letters/voidExternalLetterFromUI.html}",
        "operationId" : "voidExternalLetter-internal",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10928" : {
            "description" : "${LatestMailingInvalidStateException}"
          }
        }
      }
    },
    "/external-letters/{letterId}/resend" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Resend a letter",
        "description" : "${description/letters/resendUpdateExternalLetter.html}",
        "operationId" : "resendExactCopyLetter-internal",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateExternalLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10928" : {
            "description" : "${LatestMailingInvalidStateException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/internal-letter-configuration" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the internal letter configuration",
        "description" : "${description/correspondence/getInternalLetterConfiguration.html}",
        "operationId" : "getInternalLetterConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/internal-letter-templates/versions/{versionId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets Internal Letter Templates Version of given ID",
        "description" : "${description/correspondence/getInternalLetterTemplateVersion.html}",
        "operationId" : "getInternalLetterTemplateVersion-internal",
        "parameters" : [ {
          "name" : "versionId",
          "in" : "path",
          "description" : "ID of the required Internal Letter Template Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterTemplateVersionDetail"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          }
        }
      }
    },
    "/internal-letter-templates" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets a list of Internal Letter Templates for given BHP node",
        "description" : "${description/correspondence/getInternalLetterTemplates.html}",
        "operationId" : "getInternalLetterTemplates-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "casenetFeature",
          "in" : "query",
          "description" : "Casenet License Feature name",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InternalLetterTemplate"
                  }
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/letter-logos/{letterLogoId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get Letter Logos",
        "description" : "${description/correspondence/getLetterLogoResource.html}",
        "operationId" : "getLetterLogo-internal",
        "parameters" : [ {
          "name" : "letterLogoId",
          "in" : "path",
          "description" : "The letter logo ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "image/*" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404 - 10515" : {
            "description" : "${LetterLogoNotFoundException}"
          },
          "400 - 10516" : {
            "description" : "${LetterLogoProcessingException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letter-mailings/{letterMailingId}/pdf" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Gets the PDF for an internal letter mailing",
        "description" : "${description/letters/getLetterPDF.html}",
        "operationId" : "getPdf",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "letterMailingId",
          "in" : "path",
          "description" : "Letter Mailing ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "400 - 10517" : {
            "description" : "${UnsentLetterMailingException}"
          }
        }
      }
    },
    "/letters/{letterId}/mailings-search" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get paginated letter mailings",
        "description" : "${description/correspondence/getLetterMailings.html}",
        "operationId" : "getLetterMailings-internal",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Letter mailing request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LetterMailingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LetterMailingPaginatedResults"
                }
              }
            }
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/letters/{letterId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get letter details",
        "description" : "${description/letters/getLetterDetails.html}",
        "operationId" : "getLetterDetails",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetter"
                }
              }
            }
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          }
        }
      }
    },
    "/letters/{letterId}/void-info" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Void external letter",
        "description" : "${description/letters/voidExternalLetter.html}",
        "operationId" : "voidExternalLetter",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10928" : {
            "description" : "${LatestMailingInvalidStateException}"
          }
        }
      }
    },
    "/letters/{letterId}/resendings" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Resend failed letter",
        "description" : "${description/letters/resendExternalLetter.html}",
        "operationId" : "resendFailedLetter",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400 - 10168" : {
            "description" : "${ExternalLetterResendException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/letters/external-letter" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "create an external letter",
        "description" : "${description/letters/createExternalLetter.html}",
        "operationId" : "createExternalLetter",
        "requestBody" : {
          "description" : "Create External Letter Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateExternalLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "503 - 10090" : {
            "description" : "${ServiceUnavailableException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 11204" : {
            "description" : "${TaskAttemptNotFoundException}"
          }
        }
      }
    },
    "/letters/{letterId}/status" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Update status of an external letter",
        "description" : "${description/letters/updateExternalLetter.html}",
        "operationId" : "updateExternalLetter",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update letter Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLetterStatusRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10915" : {
            "description" : "${LatestMailingVoidedException}"
          }
        }
      }
    },
    "/letters/{letterId}/letter-details/{letterMailingId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get letter mailing details",
        "description" : "${description/letters/getLetterMailingDetails.html}",
        "operationId" : "getLetterMailingDetails",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "letterMailingId",
          "in" : "path",
          "description" : "The letter mailing ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalLetter"
                }
              }
            }
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          }
        }
      }
    },
    "/letters/{letterId}/status-message" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Update letter status message",
        "description" : "${description/letters/putLetterStatusMessage.html}",
        "operationId" : "updateLetterStatusMessage-internal",
        "parameters" : [ {
          "name" : "letterId",
          "in" : "path",
          "description" : "The letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mailingId",
          "in" : "query",
          "description" : "The Mailing ID",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The LetterStatusMessage Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LetterStatusMessageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "404 - 10927" : {
            "description" : "${NoLetterMailingFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/correspondence-search" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Search for correspondence summaries",
        "description" : "${description/correspondence/searchCorrespondence.html}",
        "operationId" : "searchCorrespondence",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for correspondence summary",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CorrespondenceSummarySearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorrespondenceSummarySearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/correspondence-search-v2" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Search for correspondence summaries",
        "description" : "${description/correspondence/searchCorrespondenceV2.html}",
        "operationId" : "searchCorrespondence-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for correspondence summary",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CorrespondenceSummarySearchCriteriaV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorrespondenceSummarySearchResultsV2"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/correspondence-configuration" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Check if distributed correspondence is enabled",
        "description" : "${description/correspondence/getCorrespondenceConfiguration.html}",
        "operationId" : "getDistributedCorrespondenceConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorrespondenceConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/draft-external-letters/{draftExternalLetterId}" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Method to Save the Draft letter correspondence",
        "description" : "${description/letters/draftExternalLetter.html}",
        "operationId" : "saveExternalCorrespondence-internal",
        "parameters" : [ {
          "name" : "draftExternalLetterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Draft Letter request object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateExternalLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10168" : {
            "description" : "${ExternalLetterResendException}"
          }
        }
      },
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Method to submit the Draft letter correspondence",
        "description" : "${description/letters/submitDraftExternalLetter.html}",
        "operationId" : "submitExternalCorrespondence-internal",
        "parameters" : [ {
          "name" : "draftExternalLetterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Draft Letter request object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateExternalLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10168" : {
            "description" : "${ExternalLetterResendException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-external-letters" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Save draft of an external letter",
        "description" : "${description/letters/saveExternalLetterDraft.html}",
        "operationId" : "saveDraftExternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The external letter information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateExternalLetterRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 11204" : {
            "description" : "${TaskAttemptNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-internal-letters/templates/{templateName}" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Create a new draft internal letter",
        "description" : "${description/correspondence/postDraftInternalLetter.html}",
        "operationId" : "createDraftInternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Resource name of a template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "claimNotificationTask",
          "in" : "query",
          "description" : "Claims the notification task",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the notification task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "createLetterRequest" : {
                    "$ref" : "#/components/schemas/CreateInternalLetterRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10502" : {
            "description" : "${LetterTemplateNotFoundException}"
          },
          "400 - 10503" : {
            "description" : "${LetterAssociatedObjectNotFoundException}"
          },
          "404 - 10507" : {
            "description" : "${InvalidLetterAssociatedObjectException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "400 - 10513" : {
            "description" : "${NotificationRecipientTypeNotSupportedException}"
          },
          "400 - 10514" : {
            "description" : "${UploadFileException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-internal-letters/{letterId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get internal letter details by letterId and memberId",
        "description" : "${description/correspondence/getInternalLetterDraftDetails.html}",
        "operationId" : "getCorrespondenceDraftDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterDetails"
                }
              }
            }
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Save an existing draft internal letter",
        "description" : "${description/correspondence/putDraftInternalLetter.html}",
        "operationId" : "saveDraftInternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "updateLetterRequest" : {
                    "$ref" : "#/components/schemas/UpdateInternalLetterRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10502" : {
            "description" : "${LetterTemplateNotFoundException}"
          },
          "400 - 10503" : {
            "description" : "${LetterAssociatedObjectNotFoundException}"
          },
          "404 - 10507" : {
            "description" : "${InvalidLetterAssociatedObjectException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "400 - 10514" : {
            "description" : "${UploadFileException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/{letterId}/default-recipients" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get default recipients for an internal letter",
        "description" : "${description/correspondence/getDefaultRecipients.html}",
        "operationId" : "GetDefaultRecipients-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LetterRecipient"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/{letterId}/save-resend" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Save a resent internal letter",
        "description" : "${description/correspondence/putSaveResendInternalLetter.html}",
        "operationId" : "SaveResend-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Save internal letter during resend",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InternalLetterResendRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "404 - 10512" : {
            "description" : "${InternalLetterRecipientNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/{letterId}" : {
      "get" : {
        "tags" : [ "correspondences" ],
        "summary" : "Get internal letter details by letterId and memberId",
        "description" : "${description/correspondence/getInternalLetterDetails.html}",
        "operationId" : "getCorrespondenceDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterDetails"
                }
              }
            }
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/{letterId}/void-info" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Void internal letter",
        "description" : "${description/correspondence/voidInternalLetter.html}",
        "operationId" : "voidInternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidInternalLetterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10928" : {
            "description" : "${LatestMailingInvalidStateException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/templates/{templateName}" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Submit new internal letter from scratch or from existing draft",
        "description" : "${description/correspondence/postInternalLetter.html}",
        "operationId" : "submitInternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Resource name of a template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "claimNotificationTask",
          "in" : "query",
          "description" : "Claims the notification task",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the notification task",
            "default" : false
          }
        }, {
          "name" : "draftLetterId",
          "in" : "query",
          "description" : "Id of existing letter draft",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "createLetterRequest" : {
                    "$ref" : "#/components/schemas/CreateInternalLetterRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10502" : {
            "description" : "${LetterTemplateNotFoundException}"
          },
          "400 - 10503" : {
            "description" : "${LetterAssociatedObjectNotFoundException}"
          },
          "404 - 10507" : {
            "description" : "${InvalidLetterAssociatedObjectException}"
          },
          "400 - 10505" : {
            "description" : "${InvalidInternalLetterUserNotesException}"
          },
          "404 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 11508" : {
            "description" : "${InvalidInternalLetterStateException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 11510" : {
            "description" : "${InternalLetterArtifactException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "400 - 10513" : {
            "description" : "${NotificationRecipientTypeNotSupportedException}"
          },
          "400 - 10514" : {
            "description" : "${UploadFileException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/templates/{templateName}/preview" : {
      "post" : {
        "tags" : [ "correspondences" ],
        "summary" : "Previews internal letter in PDF format",
        "description" : "${description/correspondence/postInternalLetterPreview.html}",
        "operationId" : "previewInternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Resource name of a template",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "draftLetterId",
          "in" : "query",
          "description" : "Id of existing letter draft",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "previewLetterRequest" : {
                    "$ref" : "#/components/schemas/CreateInternalLetterRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10503" : {
            "description" : "${LetterAssociatedObjectNotFoundException}"
          },
          "404 - 10507" : {
            "description" : "${InvalidLetterAssociatedObjectException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10502" : {
            "description" : "${LetterTemplateNotFoundException}"
          },
          "400 - 11510" : {
            "description" : "${InternalLetterArtifactException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/internal-letters/{letterId}/resend" : {
      "put" : {
        "tags" : [ "correspondences" ],
        "summary" : "Resend an internal letter",
        "description" : "${description/correspondence/putResendInternalLetter.html}",
        "operationId" : "resendInternalLetter-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "letterId",
          "in" : "path",
          "description" : "Letter Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Resend internal letter request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InternalLetterResendRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10076" : {
            "description" : "${LetterNotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10511" : {
            "description" : "${InternalLetterRecipientException}"
          },
          "404 - 10512" : {
            "description" : "${InternalLetterRecipientNotFoundException}"
          }
        }
      }
    },
    "/cost-savings-configuration" : {
      "get" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Get the configuration for creating an cost savings",
        "description" : "${description/costsavings/getCostSavingsConfiguration.html}",
        "operationId" : "getCostSavingsConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/cost-savings-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Retrieve the Cost Savings information configured for the BhpNode",
        "description" : "${description/costsavings/getCostSavingsBhpConfiguration.html}",
        "operationId" : "getCostSavingsBhpConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsBhpConfiguration"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/cost-savings-definitions/{costSavingsTypeId}" : {
      "get" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Get the cost saving definition by saving type",
        "description" : "${description/costsavings/getCostSavingsDefBySavingType.html}",
        "operationId" : "getCostSavingsDefBySavingsType-internal",
        "parameters" : [ {
          "name" : "costSavingsTypeId",
          "in" : "path",
          "description" : "The Cost Savings Type Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsDefinition"
                }
              }
            }
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/cost-savings/{costSavingsId}/void-info" : {
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Voids the Cost Savings record for member by Id",
        "description" : "${description/costsavings/postVoidCostSavings.html}",
        "operationId" : "voidCostSavings-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "costSavingsId",
          "in" : "path",
          "description" : "Cost Savings Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          }
        }
      }
    },
    "/members/{memberId}/cost-savings/{costSavingsId}" : {
      "get" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Retrieves Cost Savings record for member by Id",
        "description" : "${description/costsavings/getCostSavingsDetails.html}",
        "operationId" : "getCostSavingsDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "costSavingsId",
          "in" : "path",
          "description" : "Cost Savings Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsInstanceSummaryLite"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          }
        }
      },
      "put" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Save Cost Savings record for member",
        "description" : "${description/costsavings/saveCostSavings.html}",
        "operationId" : "saveCostSavings-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "costSavingsId",
          "in" : "path",
          "description" : "Cost Savings Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Cost Savings request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCostSavingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/cost-savings/artifacts" : {
      "get" : {
        "tags" : [ "cost-savings" ],
        "summary" : "retrieve list of artifacts for a member",
        "description" : "${description/costsavings/getCostSavingsArtifacts.html}",
        "operationId" : "getCostSavingsArtifacts-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "artifactType",
          "in" : "query",
          "description" : "artifactType as a query param",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "artifactType as a query param"
          }
        }, {
          "name" : "includeClosedCases",
          "in" : "query",
          "description" : "If value is passed as false it returns only Open artifacts otherwise (true or empty) it returns Open and Closed artifacts. This only applies to cases",
          "schema" : {
            "type" : "boolean",
            "description" : "If value is passed as false it returns only Open artifacts otherwise (true or empty) it returns Open and Closed artifacts. This only applies to cases",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsArtifact"
                }
              }
            }
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/cost-savings" : {
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Creates a new Cost Savings record for member",
        "description" : "${description/costsavings/createCostSavings.html}",
        "operationId" : "createCostSavings-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Create Cost Savings request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCostSavingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/cost-savings/{costSavingsId}/notes" : {
      "get" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Gets notes of an Cost savings",
        "description" : "${description/costsavings/getCostSavingsNotes.html}",
        "operationId" : "getCostSavingsNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "costSavingsId",
          "in" : "path",
          "description" : "Cost Savings identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          }
        }
      },
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Creates a new note for a Cost Savings",
        "description" : "${description/costsavings/createCostSavingsNote.html}",
        "operationId" : "createCostSavingsNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "costSavingsId",
          "in" : "path",
          "description" : "Cost Savings identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "costSavingsVersion",
          "in" : "query",
          "description" : "The Cost Savings Version",
          "required" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The Cost Savings Version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10075" : {
            "description" : "${InvalidNoteTypeException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/cost-savings-search" : {
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Performs a search for cost savings",
        "description" : "${description/costsavings/postCostSavingsSearch.html}",
        "operationId" : "searchCostSavings",
        "requestBody" : {
          "description" : "Cost savings search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CostSavingsSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsSearchResults"
                }
              }
            }
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/cost-savings-search-v2" : {
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Performs a search for cost savings",
        "description" : "${description/costsavings/postCostSavingsSearchV2.html}",
        "operationId" : "searchCostSavings-internal",
        "requestBody" : {
          "description" : "Cost savings search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CostSavingsSearchAdvancedCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-cost-savings/{draftCostSavingsId}" : {
      "put" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Save draft Cost Savings record for member",
        "description" : "${description/costsavings/saveCostSavingsDraft.html}",
        "operationId" : "saveDraftCostSavings-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftCostSavingsId",
          "in" : "path",
          "description" : "Draft Cost Savings Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Cost Savings request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCostSavingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      },
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Submit draft Cost Savings record for member",
        "description" : "${description/costsavings/submitCostSavingsDraft.html}",
        "operationId" : "submitDraftCostSavings-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftCostSavingsId",
          "in" : "path",
          "description" : "Draft Cost Savings Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Cost Savings request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCostSavingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-cost-savings" : {
      "post" : {
        "tags" : [ "cost-savings" ],
        "summary" : "Creates a new Draft Cost Savings record for member",
        "description" : "${description/costsavings/createCostSavingsDraft.html}",
        "operationId" : "createCostSavingsDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Create Cost Savings request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCostSavingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/member-dashboard-configuration" : {
      "get" : {
        "tags" : [ "member-dashboard-configuration-internal" ],
        "summary" : "Get the the enabled screen pods of current user",
        "description" : "${description/dashboard/memberDashboardConfiguration.html}",
        "operationId" : "getEnabledPodsOfCurrentUser-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberDashboardConfiguration"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/dashboard/timeline" : {
      "get" : {
        "tags" : [ "dashboard-internal" ],
        "summary" : "Get dashboard timeline data",
        "description" : "${description/dashboard/getTimelineData.html}",
        "operationId" : "getDashboardTimeline-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "The start date e.g. YYYY-MM-DDThh:mm:ss.SSSZ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The end date e.g. YYYY-MM-DDThh:mm:ss.SSSZ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "length",
          "in" : "query",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The length",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimelineDataResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/member-filter-group-search" : {
      "post" : {
        "tags" : [ "dashboard-internal" ],
        "summary" : "Search for member filter group",
        "description" : "${description/dashboard/memberFilterGroup.html}",
        "operationId" : "searchMemberFilterGroup-internal",
        "requestBody" : {
          "description" : "The Member Filter Group search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberFilterGroupSearchCriteria"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberFilterGroupSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/user-dashboard/queue-statistics" : {
      "get" : {
        "tags" : [ "user-dashboard-internal" ],
        "summary" : "Get Queue statistics for User Dashboard",
        "description" : "${description/dashboard/getQueueStatistics.html}",
        "operationId" : "getQueueStatistics-internal",
        "parameters" : [ {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "includeOverdue",
          "in" : "query",
          "description" : "Include overdue tasks",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeDueToday",
          "in" : "query",
          "description" : "Include due today tasks",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueStatistics"
                }
              }
            }
          }
        }
      }
    },
    "/user-dashboard/case-search" : {
      "post" : {
        "tags" : [ "user-dashboard-internal" ],
        "summary" : "Search cases to display on the user dashboard",
        "description" : "${description/dashboard/postUserDashboardCaseSearch.html}",
        "operationId" : "postUserDashboardCaseSearch-internal",
        "requestBody" : {
          "description" : "The search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDashboardCaseSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDashboardCaseSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/user-dashboard/pods-status" : {
      "get" : {
        "tags" : [ "user-dashboard-internal" ],
        "summary" : "Retrieve all pods availability",
        "description" : "${description/dashboard/getPodsStatus.html}",
        "operationId" : "getPodsStatus-internal",
        "parameters" : [ {
          "name" : "casesExists",
          "in" : "query",
          "description" : "Check if cases are available",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDashboardPodStatusResult"
                }
              }
            }
          }
        }
      }
    },
    "/user-dashboard/users/{username}/task-metrics" : {
      "get" : {
        "tags" : [ "user-dashboard-internal" ],
        "summary" : "Returns task metrics for use dashboards by username",
        "description" : "${description/dashboard/getTaskMetrics.html}",
        "operationId" : "getTaskMetricsForUserDashboardByUsername-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeZoneId",
          "in" : "query",
          "description" : "The Time Zone Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskMetricsResponse"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10100" : {
            "description" : "${TimeZoneNotFoundException}"
          }
        }
      }
    },
    "/user-dashboard/system-message" : {
      "get" : {
        "tags" : [ "user-dashboard-internal" ],
        "summary" : "Get the current system message",
        "description" : "${description/dashboard/getCurrentSystemMessage.html}",
        "operationId" : "getCurrentSystemMessage-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemMessageResponse"
                }
              }
            }
          },
          "404 - 10955" : {
            "description" : "${SystemMessageNotFoundException}"
          }
        }
      }
    },
    "/discovery/schemas/json/{schemaName}" : {
      "get" : {
        "tags" : [ "discovery-internal" ],
        "summary" : "Gets the JSON schema for an API",
        "description" : "${description/discovery/getJsonSchema.html}",
        "operationId" : "getJsonSchema-internal",
        "parameters" : [ {
          "name" : "schemaName",
          "in" : "path",
          "description" : "Name of the schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10036" : {
            "description" : "${SchemaNotFoundException}"
          }
        }
      }
    },
    "/discovery/api-groups/{api-group-id}" : {
      "get" : {
        "tags" : [ "discovery-internal" ],
        "summary" : "Gets the details of all APIs in an API group",
        "description" : "${description/discovery/apisInGroup.html}",
        "operationId" : "getApisInGroup-internal",
        "parameters" : [ {
          "name" : "api-group-id",
          "in" : "path",
          "description" : "API Group ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiGroup"
                }
              }
            }
          },
          "404 - 10035" : {
            "description" : "${ApiNotFoundException}"
          }
        }
      }
    },
    "/discovery/api-groups" : {
      "get" : {
        "tags" : [ "discovery-internal" ],
        "summary" : "Gets the list of all API groups",
        "description" : "${description/discovery/apiGroups.html}",
        "operationId" : "getApiGroups-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApiGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/discovery/schemas/json/{schemaName}.html" : {
      "get" : {
        "tags" : [ "discovery-internal" ],
        "summary" : "Gets an HTML containing the JSON schema for an API",
        "description" : "${description/discovery/getJsonSchemaHtml.html}",
        "operationId" : "getJsonSchemaHtml-internal",
        "parameters" : [ {
          "name" : "schemaName",
          "in" : "path",
          "description" : "Name of the schema",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/eligibilities-configuration" : {
      "get" : {
        "tags" : [ "eligibilities" ],
        "summary" : "Gets the eligibilities configuration",
        "description" : "${description/eligibilities/getEligibilitiesConfiguration.html}",
        "operationId" : "getEligibilitiesConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EligibilityConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/eligibilities/{eligibilityId}" : {
      "get" : {
        "tags" : [ "eligibilities" ],
        "summary" : "Retrieve a member's eligibility",
        "description" : "${description/eligibilities/getClientEligibilities.html}",
        "operationId" : "getEligibility",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eligibilityId",
          "in" : "path",
          "description" : "The eligibility ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eligibility"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/eligibilities" : {
      "get" : {
        "tags" : [ "eligibilities" ],
        "summary" : "Loads all eligibilities that are valid for the given member at the given date",
        "description" : "${description/eligibilities/getClientEligibilities.html}",
        "operationId" : "getClientEligibilities",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Eligibility date: all member eligibilities will be returned which are effective on this date",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "includeAll",
          "in" : "query",
          "description" : "When set to true, the date parameter is ignored and the API retrieves all of the member's eligibilities but does not return data from UDF fields. Otherwise, the API retrieves all of the client eligibilities effective on the provided date and includes data from any UDF fields.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Eligibility"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      }
    },
    "/members/{memberId}/eligibilities/{eligibilityId}/eligibility-benefit" : {
      "get" : {
        "tags" : [ "eligibilities" ],
        "summary" : "Retrieve a member's eligibility and benefit",
        "description" : "${description/eligibilities/getEligibilityBenefit.html}",
        "operationId" : "getEligibilityBenefit-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "eligibilityId",
          "in" : "path",
          "description" : "The eligibility ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EligibilityBenefit"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programName}/enrollment-status/{enrollmentStatusId}" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Retrieve Task Packages Instance for program enrollment",
        "description" : "${description/program-enrollments/getProgramEnrollmentTaskPackageInstances.html}",
        "operationId" : "getProgramTaskPackageInstances-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "path",
          "description" : "The name of the program",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentStatusId",
          "in" : "path",
          "description" : "Program enrollment Status id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentStatusEnrolledFull"
                }
              }
            }
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programId}/enrollment-eligibility" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Verify whether member is eligible for reenrollment/reinstatement of a program",
        "description" : "${description/program-enrollments/verifyEnrollmentEligibility.html}",
        "operationId" : "verifyEnrollmentEligibilityForProgram-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programId",
          "in" : "path",
          "description" : "Program Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programReenrollmentAction",
          "in" : "query",
          "description" : "Program Reenrollment Action",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "REINSTATE", "RE_ENROLL" ]
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnrollmentRestrictionResponse"
                }
              }
            }
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "400 - 10703" : {
            "description" : "${InvalidProgramReenrollmentActionException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/current" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Gets enrolled programs for a member",
        "description" : "${description/program-enrollments/getMemberEnrolledPrograms.html}",
        "operationId" : "getEnrolledProgramsForMember",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CurrentProgramEnrollment"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programEnrollmentId}/task-package/close" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "close task package",
        "description" : "${description/program-enrollments/closeTaskPackage.html}",
        "operationId" : "closeTaskPackage-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programEnrollmentId",
          "in" : "path",
          "description" : "Program enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "close task package information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompleteProgramTaskPackageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 11000" : {
            "description" : "${TaskCannotBeCompletedException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programEnrollmentId}/task-package/start" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Start task package",
        "description" : "${description/program-enrollments/startTaskPackage.html}",
        "operationId" : "startTaskPackage-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programEnrollmentId",
          "in" : "path",
          "description" : "Program enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Start task package information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StartProgramTaskPackageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programName}/closure" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Close Program Enrollment",
        "description" : "${description/program-enrollments/closeProgramEnrollment.html}",
        "operationId" : "closeProgramEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "path",
          "description" : "The name of the program",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Information for Program Enrollment to close",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseProgramEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10701" : {
            "description" : "${InvalidClosureDateException}"
          },
          "400 - 10901" : {
            "description" : "${ProgramEnrollmentClosedException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Gets member program enrollments",
        "description" : "${description/program-enrollments/getMemberProgramEnrollments.html}",
        "operationId" : "getProgramEnrollmentsForMember",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "query",
          "description" : "The name of the program",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProgramEnrollment"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Create Program Enrollment",
        "description" : "${description/program-enrollments/createProgramEnrollment.html}",
        "operationId" : "createProgramEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Program Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProgramEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programName}/case-association" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : " Assign, reassign or un-assign the case available to a Program",
        "description" : "${description/program-enrollments/assignCaseToProgram.html}",
        "operationId" : "assignCaseToProgram-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "path",
          "description" : "The name of the program",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Program Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProgramCaseAssociationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programName}/re-enrollment" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Re-enroll Program Enrollment",
        "description" : "${description/program-enrollments/reenrollProgramEnrollment.html}",
        "operationId" : "reenrollProgramEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "path",
          "description" : "The name of the program",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Program Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReenrollProgramEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "400 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programName}/reinstatement" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Reinstates a Program Enrollment",
        "description" : "${description/program-enrollments/reinstateProgramEnrollment.html}",
        "operationId" : "reinstateProgramEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "path",
          "description" : "The name of the program",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Program reinstatement information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReinstateProgramEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programName}/engagement-level" : {
      "put" : {
        "tags" : [ "enrollments" ],
        "summary" : "Update Engagement Level for program",
        "description" : "${description/program-enrollments/updateEngagementLevel.html}",
        "operationId" : "updateEngagementLevelForProgram-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programName",
          "in" : "path",
          "description" : "The name of the program",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Information to update engagement level for program",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateEngagementLevelRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programEnrollmentId}/task-package/optional-task" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Add Optional-task to Program Enrollment",
        "description" : "${description/program-enrollments/optionalTaskPackage.html}",
        "operationId" : "addTaskToTaskPackageInstance-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programEnrollmentId",
          "in" : "path",
          "description" : "Program enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Optional task package information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOptionalTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10000" : {
            "description" : "${TaskAlreadyAssignedException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments/{programEnrollmentId}/task-package/reopen" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "reopen task package",
        "description" : "${description/program-enrollments/reopenTaskPackage.html}",
        "operationId" : "reopenTaskPackage-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "programEnrollmentId",
          "in" : "path",
          "description" : "Program enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "reopen task package information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReopenProgramTaskPackageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10900" : {
            "description" : "${ProgramEnrollmentNotFoundForMemberException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/program-enrollments-v2" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Create Program Enrollment",
        "description" : "${description/program-enrollments/createProgramEnrollmentV2.html}",
        "operationId" : "createProgramEnrollmentV2-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Program Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProgramEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgramEnrollmentResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10702" : {
            "description" : "${MemberCannotBeEnrolledInProgramException}"
          }
        }
      }
    },
    "/program-enrollments/configuration" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Gets the program enrollments configuration for create, close, re-enroll and reinstate enrollments",
        "description" : "${description/program-enrollments/getProgramEnrollmentConfiguration.html}",
        "operationId" : "getProgramEnrollmentConfiguration",
        "parameters" : [ {
          "name" : "programEnrollmentAction",
          "in" : "query",
          "description" : "The user action for program enrollment",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ProgramEnrollmentAction",
              "namespace" : "http://www.casenet.com/ProgramEnrollmentAction"
            },
            "enum" : [ "CREATE", "CLOSE", "REINSTATE", "RE_ENROLL" ]
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member bhp feed Id full path. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgramEnrollmentConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/programs/{programId}/service-levels/bhp-configuration" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Gets service level bhp configuration for the program",
        "description" : "${description/program-enrollments/getProgramServiceLevelConfiguration.html}",
        "operationId" : "getProgramServiceLevelConfiguration-internal",
        "parameters" : [ {
          "name" : "programId",
          "in" : "path",
          "description" : "Program Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "BHP Node full path",
          "schema" : {
            "type" : "string",
            "description" : "BHP Node path"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgramServiceLevelBhpConfiguration"
                }
              }
            }
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          }
        }
      }
    },
    "/programs/{programId}/service-level-configuration" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Get the Service level config for enrolled programs",
        "description" : "${description/program-enrollments/getProgramServiceLevel.html}",
        "operationId" : "getServiceLevelConfigForProgram-internal",
        "parameters" : [ {
          "name" : "programId",
          "in" : "path",
          "description" : "Program ID returned from the program",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Program ID returned from the program",
            "default" : "INTERNAL"
          }
        }, {
          "name" : "serviceLevelOption",
          "in" : "query",
          "description" : "serviceLevelOption detail returned from the ProgramServiceLevelConfig",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "serviceLevelOption detail returned from the ProgramServiceLevelConfig",
            "default" : "INTERNAL"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgramServiceLevelConfig"
                }
              }
            }
          },
          "404 - 10902" : {
            "description" : "${ProgramNotFoundException}"
          },
          "404 - 10704" : {
            "description" : "${ServiceLevelOptionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/authorizations/{authorizationId}/fax/{faxId}" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "Add/Tag the fax to a authorization",
        "description" : "${description/fax/addFaxToAuthorization.html}",
        "operationId" : "addFaxToAuthorization-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationId",
          "in" : "path",
          "description" : "The member authorization ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authorizationIdType",
          "in" : "query",
          "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
          "schema" : {
            "type" : "string",
            "description" : "Type of authorization ID. If no value is passed for this parameter, type will be defaulted to 'INTERNAL_ID'",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "default" : "INTERNAL_ID",
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          }
        }, {
          "name" : "faxId",
          "in" : "path",
          "description" : "Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "boolean"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          },
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/fax-queues/{faxQueueId}/documents" : {
      "get" : {
        "tags" : [ "fax-internal" ],
        "summary" : "To retrieve the list of fax documents for a selected fax queue",
        "description" : "${description/fax/getFaxDocumentsByQueueId.html}",
        "operationId" : "getFaxDocumentsByQueueId-internal",
        "parameters" : [ {
          "name" : "faxQueueId",
          "in" : "path",
          "description" : "Fax Queue Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "Sort Column",
            "default" : "FAX_DOCUMENT_RECEIPT_DATE",
            "enum" : [ "FAX_DOCUMENT_NAME", "FAX_DOCUMENT_TYPE", "FAX_DOCUMENT_SOURCE", "FAX_DOCUMENT_RECEIPT_DATE", "FAX_DOCUMENT_ALREADY_ATTACHED" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "Sort Type",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FaxDocumentSearchResults"
                }
              }
            }
          },
          "404 - 10948" : {
            "description" : "${FaxNotFoundException}"
          }
        }
      }
    },
    "/fax-queues/{faxQueueId}/documents/{faxId}" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "Move fax to different queue",
        "description" : "${description/fax/postMoveFaxToQueue.html}",
        "operationId" : "moveDocument-internal",
        "parameters" : [ {
          "name" : "faxQueueId",
          "in" : "path",
          "description" : "Fax Queue Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faxId",
          "in" : "path",
          "description" : "Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404 - 10948" : {
            "description" : "${FaxQueueNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "400 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "400 - 10994" : {
            "description" : "${FaxAlreadyFoundInQueueException}"
          }
        }
      }
    },
    "/fax-queues" : {
      "get" : {
        "tags" : [ "fax-internal" ],
        "summary" : "To retrieve the list of fax queues",
        "description" : "${description/fax/getFaxQueues.html}",
        "operationId" : "getAllFaxQueues-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InboundFaxQueue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fax/{faxId}/process" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "Mark the fax as processed",
        "description" : "${description/fax/processFax.html}",
        "operationId" : "processFax-internal",
        "parameters" : [ {
          "name" : "faxId",
          "in" : "path",
          "description" : "Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InboundFaxDocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          }
        }
      }
    },
    "/fax/{faxId}/split-fax/{splitFaxId}/revert" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "Revert the split fax document",
        "description" : "${description/fax/revertSplitFax.html}",
        "operationId" : "revertSplitPdf-internal",
        "parameters" : [ {
          "name" : "faxId",
          "in" : "path",
          "description" : "Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "splitFaxId",
          "in" : "path",
          "description" : "Split Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "400 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "404 - 10948" : {
            "description" : "${FaxQueueNotFoundException}"
          }
        }
      }
    },
    "/fax/{faxId}/split" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "To Split the fax document",
        "description" : "${description/fax/postSplitFax.html}",
        "operationId" : "splitPdf-internal",
        "parameters" : [ {
          "name" : "faxId",
          "in" : "path",
          "description" : "Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Fax Id",
            "default" : "faxId"
          }
        } ],
        "requestBody" : {
          "description" : "The split pdf document information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SplitPdfRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InboundFaxDocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/fax/{faxId}" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "Add/Tag the fax to a member",
        "description" : "${description/fax/addFaxToMember.html}",
        "operationId" : "addFaxToMember-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "faxId",
          "in" : "path",
          "description" : "Fax Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "boolean"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          },
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/faxes/process-faxes" : {
      "post" : {
        "tags" : [ "fax-internal" ],
        "summary" : "Mark the fax as processed",
        "description" : "${description/fax/process-faxes.html}",
        "operationId" : "process-faxes-internal",
        "requestBody" : {
          "description" : "Document Process IDs",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentProcessRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InboundFaxDocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10949" : {
            "description" : "${FaxNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-hcs-individual-service-plan" : {
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Save Draft Individual Service Plan",
        "description" : "${description/hcs/draftIndividualServicePlan.html}",
        "operationId" : "draftIndividualServicePlan-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Save Draft Individual service Plan",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateIndividualServicePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 10603" : {
            "description" : "${MemberCenteredPlanNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/hcs-enrollment-closure-configuration" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Gets the configuration for HCS Closure",
        "description" : "${description/service-requests/enrollment/getHcsEnrollmentClosureConfiguration.html}",
        "operationId" : "getHcsEnrollmentClosureConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HcsEnrollmentClosureConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/hcs-enrollment-configuration" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Gets the configuration for a case",
        "description" : "${description/service-requests/enrollment/getHcsEnrollmentConfiguration.html}",
        "operationId" : "getHcsEnrollmentConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HcsEnrollmentConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/with-case" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Create HCS Enrollment with case",
        "description" : "${description/service-requests/enrollment/createHcsWaiverEnrollmentWithCase.html}",
        "operationId" : "createHcsWaiverEnrollmentWithCase",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Hcs Enrollment with case information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateHcsWaiverEnrollmentWithCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HcsEnrollmentWithCase"
                }
              }
            }
          },
          "400 - 10070" : {
            "description" : "${DuplicateCaseNameException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10169" : {
            "description" : "${VoidDiagnosisException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "400 - 10065" : {
            "description" : "${DiagnosisRequiredException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Retrieve a HCS Waiver Enrollment",
        "description" : "${description/service-requests/enrollment/getHcsWaiverEnrollmentById.html}",
        "operationId" : "getHcsWaiverEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "The Enrollment Id to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WaiverEnrollment"
                }
              }
            }
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "enrollments" ],
        "summary" : "Update HCS Enrollment",
        "description" : "${description/service-requests/enrollment/updateHcsWaiverEnrollment.html}",
        "operationId" : "updateHcsWaiverEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "The Enrollment Id to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Hcs Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateHcsWaiverEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}/closure" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Close HCS Waiver Enrollment",
        "description" : "${description/service-requests/enrollment/closeHcsWaiverEnrollment.html}",
        "operationId" : "closeHcsWaiverEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "The Enrollment Id to be closed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The HCS Enrollment Closure information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseHcsWaiverEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10088" : {
            "description" : "${HcsEnrollmentClosedException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10079" : {
            "description" : "${HcsEnrollmentCloseDateException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Retrieve HCS Waiver Enrollments associated with a member",
        "description" : "${description/service-requests/enrollment/getHcsWaiverEnrollments.html}",
        "operationId" : "getHcsWaiverEnrollmentList",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeVoided",
          "in" : "query",
          "description" : "Include or exclude voided hcs enrollments. Empty param will not retrieve voided enrollments",
          "schema" : {
            "type" : "boolean",
            "description" : "Include or exclude voided hcs enrollments. Empty param will not retrieve voided enrollments",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WaiverEnrollment"
                  }
                }
              }
            }
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          }
        }
      },
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Create HCS Enrollment",
        "description" : "${description/service-requests/enrollment/createHcsWaiverEnrollment.html}",
        "operationId" : "createHcsWaiverEnrollment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Hcs Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateHcsWaiverEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}/void-info" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Void Hcs Enrollment",
        "description" : "${description/service-requests/enrollment/postVoidHcsEnrollment.html}",
        "operationId" : "postVoidHcsEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "Enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "cancelOpenTasks",
          "in" : "query",
          "description" : "Cancels all the open Tasks related to Task Packages",
          "schema" : {
            "type" : "boolean",
            "description" : "Cancels all the open Tasks related to Task Packages",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Void Hcs Waiver Enrollment request information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidHcsWaiverEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10142" : {
            "description" : "${HcsEnrollmentVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}/assigned-case" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Assign existing case to HCS enrollment",
        "description" : "${description/service-requests/enrollment/postAssignCaseHcsEnrollment.html}",
        "operationId" : "postAssignCaseHcsEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "Enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "CaseId information to assign for Hcs Waiver Enrollment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HCSEnrollmentAssignCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10088" : {
            "description" : "${HcsEnrollmentClosedException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10142" : {
            "description" : "${HcsEnrollmentVoidedException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "enrollments" ],
        "summary" : "Unassign case from the existing HCS enrollment",
        "description" : "${description/service-requests/enrollment/deleteHcsEntrollmentCase.html}",
        "operationId" : "deleteHcsEntrollmentCase-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "Enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10604" : {
            "description" : "${NoCaseAssociatedWithEnrollmentException}"
          },
          "400 - 10142" : {
            "description" : "${HcsEnrollmentVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}/details" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Retrieves the enrollment details for a specific HCS waiver enrollment",
        "description" : "${description/hcs-enrollment-details/waiverEnrollmentDetails.html}",
        "operationId" : "getHCSEnrollmentDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "The waiver enrollment ID, obtained from the HCS summary list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "EFFECTIVE_DATE",
            "enum" : [ "EFFECTIVE_DATE", "TEAM", "FUNDING_SOURCE", "STATE_CLASSIFICATIONS", "STATUS" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HcsWaiverEnrollmentDetailResponse"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/owner" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Get HCS Enrollment Owner",
        "description" : "${description/service-requests/enrollment/getHcsEnrollmentOwner.html}",
        "operationId" : "getHcsEnrollmentOwner-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HcsEnrollmentOwner"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}/cases" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Add case to the existing HCS enrollment",
        "description" : "${description/service-requests/enrollment/postHCSEntrollment.html}",
        "operationId" : "postHCSEntrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "Enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The HCS Enrollment Closure information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaseIdentity"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10070" : {
            "description" : "${DuplicateCaseNameException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments/{enrollmentId}/reopen" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Reopen Hcs Enrollment",
        "description" : "${description/service-requests/enrollment/postReopenHcsEnrollment.html}",
        "operationId" : "postReopenHcsEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "Enrollment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "cancelOpenTasks",
          "in" : "query",
          "description" : "Cancels all the open Tasks related to Task Packages",
          "schema" : {
            "type" : "boolean",
            "description" : "Cancels all the open Tasks related to Task Packages",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Reopen Hcs Waiver Enrollment request information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReopenHcsWaiverEnrollmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10605" : {
            "description" : "${HCSEnrollmentTaskClosureException}"
          },
          "400 - 10608" : {
            "description" : "${HCSEnrollmentTaskAssigneeNotSpecifiedException}"
          },
          "400 - 10088" : {
            "description" : "${HcsEnrollmentClosedException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10142" : {
            "description" : "${HcsEnrollmentVoidedException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments-v2/{enrollmentId}" : {
      "put" : {
        "tags" : [ "enrollments" ],
        "summary" : "Update HCS Enrollment V2",
        "description" : "${description/service-requests/enrollment/updateHcsWaiverEnrollmentV2.html}",
        "operationId" : "updateHcsWaiverEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "The Enrollment Id to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cancelOpenTasks",
          "in" : "query",
          "description" : "Cancels all the open Tasks related to Task Packages",
          "schema" : {
            "type" : "boolean",
            "description" : "Cancels all the open Tasks related to Task Packages",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The Hcs Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateHcsWaiverEnrollmentRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments-v2/{enrollmentId}/closure" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Close HCS Waiver Enrollment",
        "description" : "${description/service-requests/enrollment/closeHcsWaiverEnrollmentV2.html}",
        "operationId" : "closeHcsWaiverEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "enrollmentId",
          "in" : "path",
          "description" : "The Enrollment Id to be closed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cancelOpenTasks",
          "in" : "query",
          "description" : "Cancels all the open Tasks related to Task Packages",
          "schema" : {
            "type" : "boolean",
            "description" : "Cancels all the open Tasks related to Task Packages",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The HCS Enrollment Closure information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseHcsWaiverEnrollmentRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10088" : {
            "description" : "${HcsEnrollmentClosedException}"
          },
          "404 - 10129" : {
            "description" : "${HcsEnrollmentNotFoundException}"
          },
          "400 - 10079" : {
            "description" : "${HcsEnrollmentCloseDateException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments-v2" : {
      "post" : {
        "tags" : [ "enrollments" ],
        "summary" : "Create HCS Enrollment with ExtendedAttributeRequest",
        "description" : "${description/service-requests/enrollment/createHcsWaiverEnrollmentV2.html}",
        "operationId" : "createHcsWaiverEnrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The Hcs Enrollment information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateHcsWaiverEnrollmentRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10127" : {
            "description" : "${HcsEnrollmentDateRangeOverlappingException}"
          },
          "400 - 10087" : {
            "description" : "${HcsEnrollmentInvalidDateException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10153" : {
            "description" : "${TaskPackageNotFoundException}"
          },
          "400 - 10152" : {
            "description" : "${InvalidTaskPackageException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-enrollments-search" : {
      "post" : {
        "tags" : [ "search-hcs-enrollments-internal" ],
        "summary" : "Retrieves a member's HCS waiver enrollments",
        "description" : "${description/hcsenrollment/searchWaiverEnrollmentSummary.html}",
        "operationId" : "search-hcsenrollment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for filtering the HCS enrollments returned",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HcsWaiverEnrollmentSummarySearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HcsWaiverEnrollmentSummarySearchResponse"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/hcs-enrollments/task-packages" : {
      "get" : {
        "tags" : [ "enrollments" ],
        "summary" : "Returns all the hcs task packages",
        "description" : "${description/service-requests/enrollment/getHcsTaskPackage.html}",
        "operationId" : "getHcsTaskPackage-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskPackageCategory",
          "in" : "query",
          "description" : "Task package search criteria",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPackageCategory",
              "namespace" : "http://www.casenet.com/TaskPackageCategory"
            },
            "enum" : [ "GENERIC", "HCS_ENROLLMENT_CREATE", "HCS_ENROLLMENT_EDIT", "HCS_ENROLLMENT_CLOSE", "HCS_ENROLLMENT_VOID" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HcsTaskPackageInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hcs-individual-service-plan-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Retrieve the configuration for the Individual Service Plan",
        "description" : "${description/hcs/getIspConfig.html}",
        "operationId" : "configuration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IspBhpSetup"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Retrieve current individual service plan",
        "description" : "${description/hcs/getIndividualServicePlan.html}",
        "operationId" : "getIsp-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IndividualServicePlan"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "Submit Individual Service Plan",
        "description" : "${description/hcs/submitIndividualServicePlan.html}",
        "operationId" : "submitIndividualServicePlan-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Submit Individual service Plan",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateIndividualServicePlanRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IspSnapshot"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 10603" : {
            "description" : "${MemberCenteredPlanNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/medications" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Retrieve current Medications",
        "description" : "${description/hcs/getMedications.html}",
        "operationId" : "medications-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Medication"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/attachments/{attachmentId}/void" : {
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "Void an attachment of the Individual Service Plan",
        "description" : "${description/hcs/voidIspAttachment.html}",
        "operationId" : "voidIspAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/attachments" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "Gets the attachments of IndividualServicePlan",
        "description" : "${description/hcs/getIspAttachments.html}",
        "operationId" : "GetIspAttachments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "Creates a new attachment for Individual Service Plan",
        "description" : "${description/hcs/postIspAttachment.html}",
        "operationId" : "PostIspAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/artifacts-search" : {
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Retrieve artifact Search Results",
        "description" : "${description/hcs/ispArtifactSearch.html}",
        "operationId" : "ispArtifactSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Search Criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IspArtifactsSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifact"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/artifact-details" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Retrieve Artifact details",
        "description" : "${description/hcs/getArtifactDetails.html}",
        "operationId" : "getArtifactDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IspArtifactDetail"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/notes" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "Gets the notes of an Individual service plan",
        "description" : "${description/hcs/getIspNotes.html}",
        "operationId" : "IspNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "submit a note to the individual service plan",
        "description" : "${description/hcs/SubmitIspNote.html}",
        "operationId" : "SubmitNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "ispVersion",
          "in" : "query",
          "description" : "The Individual Service Plan current version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The Individual Service Plan current version",
            "format" : "int64"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/isp-snapshots" : {
      "get" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : " Retrieve current IspSnapshot",
        "description" : "${description/hcs/getSnapshot.html}",
        "operationId" : "IspSnapshot-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IspSnapshot"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/hcs-individual-service-plan/isp-snapshots/{ispSnapshotId}/attachments" : {
      "post" : {
        "tags" : [ "hcs-individual-service-plan-internal" ],
        "summary" : "Creates a new attachment for Individual Service Plan",
        "description" : "${description/hcs/AttachSignedIsp.html}",
        "operationId" : "AttachSignedIsp-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "ispSnapshotId",
          "in" : "path",
          "description" : "HCS Individual Service Plan Snapshot Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10606" : {
            "description" : "${IspSnapShotNotFoundException}"
          },
          "404 - 10607" : {
            "description" : "${IndividualServicePlanNotFoundException}"
          }
        }
      }
    },
    "/iq-connect/configuration" : {
      "get" : {
        "tags" : [ "iqconnect-internal" ],
        "summary" : "Get the configuration for IQConnect",
        "description" : "${description/iqconnect/getConfiguration.html}",
        "operationId" : "getIqConnectConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IqConnectConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/iq-connect/dynamic-saml-assertion" : {
      "get" : {
        "tags" : [ "iqconnect-internal" ],
        "summary" : "Get SAML Assertion response for Dynamic IQConnect Authentication",
        "description" : "${description/iqconnect/getDynamicSamlAssertion.html}",
        "operationId" : "getDynamicSamlAssertion-internal",
        "parameters" : [ {
          "name" : "primaryFacilityId",
          "in" : "query",
          "description" : "Primary Facility Identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "primaryFacilityName",
          "in" : "query",
          "description" : "Primary Facility Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SamlResponse"
                }
              }
            }
          },
          "503 - 10942" : {
            "description" : "${IQConnectMissingCertificateException}"
          },
          "400 - 10941" : {
            "description" : "${IQConnectSamlException}"
          }
        }
      }
    },
    "/iq-connect/default-saml-assertion" : {
      "get" : {
        "tags" : [ "iqconnect-internal" ],
        "summary" : "Get SAML Assertion response for Default IQConnect Authentication",
        "description" : "${description/iqconnect/getDefaultSamlAssertion.html}",
        "operationId" : "getDefaultSamlAssertion-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SamlResponse"
                }
              }
            }
          },
          "503 - 10942" : {
            "description" : "${IQConnectMissingCertificateException}"
          },
          "400 - 10941" : {
            "description" : "${IQConnectSamlException}"
          }
        }
      }
    },
    "/key-metric-calculated" : {
      "post" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Returns a calculated key metric instance",
        "description" : "${description/key-metrics/calculateKeyMetric.html}",
        "operationId" : "calculateKeyMetricInstance",
        "requestBody" : {
          "description" : "The key metric instance",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyMetricRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricInstance"
                }
              }
            }
          }
        }
      }
    },
    "/key-metric-configuration" : {
      "get" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Gets the configuration for creating a key metric",
        "description" : "${description/key-metrics/getKeyMetricConfiguration.html}",
        "operationId" : "getKeyMetricConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/key-metric-definitions/{keyMetricDefId}" : {
      "get" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Gets the key metric definition",
        "description" : "${description/key-metrics/getKeyMetricDefinition.html}",
        "operationId" : "getKeyMetricDefinition",
        "parameters" : [ {
          "name" : "keyMetricDefId",
          "in" : "path",
          "description" : "The key metric definition id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricDef"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/key-metrics" : {
      "post" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Creates a new key metric",
        "description" : "${description/key-metrics/postKeyMetric.html}",
        "operationId" : "addNewKeyMetricInstance",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "unitInSI",
          "in" : "query",
          "description" : "A boolean specifying unitInSI passed in teh request",
          "schema" : {
            "type" : "boolean",
            "description" : "A boolean specifying unitInSI passed in teh request",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The object describing the properties of the new keymetric instance",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyMetricRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10040" : {
            "description" : "${KeyMetricViolationException}"
          },
          "400 - 10052" : {
            "description" : "${KeyMetricDefinitionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/key-metrics/{keyMetricId}" : {
      "get" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Finds a key metric by ID",
        "description" : "${description/key-metrics/getKeyMetric.html}",
        "operationId" : "getKeyMetric",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keyMetricId",
          "in" : "path",
          "description" : "The keyMetricId ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricInstance"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10051" : {
            "description" : "${KeyMetricNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/key-metrics/{keyMetricId}/void-info" : {
      "put" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Voids a key metric",
        "description" : "${description/key-metrics/voidKeyMetric.html}",
        "operationId" : "voidKeyMetric",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keyMetricId",
          "in" : "path",
          "description" : "The keyMetricId ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10051" : {
            "description" : "${KeyMetricNotFoundException}"
          }
        }
      }
    },
    "/key-metrics-search-configuration" : {
      "get" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Gets the key metrics search configuration",
        "description" : "${description/key-metrics-search/getKeyMetricsSearchConfiguration.html}",
        "operationId" : "getKeyMetricsSearchConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricsSearchConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/key-metrics-search" : {
      "post" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Search for member key metrics",
        "description" : "${description/key-metrics-search/searchKeyMetrics.html}",
        "operationId" : "keyMetricsSearch",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The key metrics search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyMetricsSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricsSearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/key-metric-definitions" : {
      "get" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Gets the key metric ",
        "description" : "${description/key-metrics/getMemberKeyMetric.html}",
        "operationId" : "getMemberKeyMetric-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricDef"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/key-metric-definitions/{keyMetricDefinitionId}/key-metrics" : {
      "post" : {
        "tags" : [ "key-metrics" ],
        "summary" : "Gets the key metric Instances",
        "description" : "${description/key-metrics/getMemberKeyMetricDefinition.html}",
        "operationId" : "getMemberKeyMetricDefinition-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        } ],
        "requestBody" : {
          "description" : "The search critieria for keymetric instances",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyMetricInstanceSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyMetricInstanceSummaryResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10052" : {
            "description" : "${KeyMetricDefinitionNotFoundException}"
          }
        }
      }
    },
    "/logger/log-level" : {
      "get" : {
        "tags" : [ "logs" ],
        "summary" : "Retrieves the log level",
        "description" : "${description/logger/getLoggerLevel.html}",
        "operationId" : "getLoggerLevel",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "xml" : {
                    "name" : "LoggerLevel",
                    "namespace" : "http://www.casenet.com/LoggerLevel"
                  },
                  "enum" : [ "ALL", "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "OFF" ]
                }
              }
            }
          }
        }
      }
    },
    "/logger/log-configuration" : {
      "get" : {
        "tags" : [ "logs" ],
        "summary" : "Get logging configuration",
        "description" : "${description/logger/getLoggingConfiguration.html}",
        "operationId" : "getLoggingConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoggingConfiguration"
                }
              }
            }
          },
          "404 - 10952" : {
            "description" : "${PropertyNotFoundException}"
          }
        }
      }
    },
    "/logger" : {
      "post" : {
        "tags" : [ "logs" ],
        "summary" : "Saves a new log entry",
        "description" : "${description/logger/postLogEntry.html}",
        "operationId" : "postNewLogEntry",
        "requestBody" : {
          "description" : "Contains the information to create a new log entry",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMessage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/logger/log-error" : {
      "post" : {
        "tags" : [ "logs" ],
        "summary" : "Log an error report into the system",
        "description" : "${description/logger/postLogError.html}",
        "operationId" : "postLogReport-internal",
        "requestBody" : {
          "description" : "Contains the error report that has to be logged in the system",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogErrorRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/log-source-client" : {
      "post" : {
        "tags" : [ "logs" ],
        "summary" : "Saves a new log entry for source client",
        "description" : "${description/logger/sourceClientLogEvent.html}",
        "operationId" : "saveSourceClientLog",
        "requestBody" : {
          "description" : "The fields required to create a UserAccessLog record",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SourceClientResourceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens/{medicationId}/reactions" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Get the Allergy Reactions for a member for a given medication",
        "description" : "${description/medication-regimens/getMedicationRegimensAllergyReaction.html}",
        "operationId" : "getMedispanMemberAllergyReactions-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MedispanAllergyReaction"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11520" : {
            "description" : "${MedispanAllergiesNotEnabledException}"
          },
          "404 - 11514" : {
            "description" : "${LicenseNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens/{medicationId}/discontinue-medication" : {
      "put" : {
        "tags" : [ "medications" ],
        "summary" : "discontinue a member medication regimen",
        "description" : "${description/medications/putDiscontinueMedicationRegimen.html}",
        "operationId" : "discontinuedMedicationRegimen-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The medication information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscontinueMedicationRegimenRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          },
          "400 - 11517" : {
            "description" : "${SupplementCannotBeDiscontinuedException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Creates a member medication regimen",
        "description" : "${description/medications/postMemberMedicationRegimen.html}",
        "operationId" : "addMedication-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The medication information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BaseMedicationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10056" : {
            "description" : "${InvalidProviderException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11502" : {
            "description" : "${MediSpanDrugSearchException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "404 - 11523" : {
            "description" : "${MediSpanDrugAllergenScreeningException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens/{medicationId}/medication-review" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Creates a member medication regimen review",
        "description" : "${description/medications/postMedicationRegimenReview.html}",
        "operationId" : "addMedicationReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The medication review information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMedicationRegimenReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "400 - 11506" : {
            "description" : "${MedicationReviewCannotBeCreatedException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "400 - 11509" : {
            "description" : "${InvalidMedicationReviewDateException}"
          },
          "400 - 11511" : {
            "description" : "${InvalidMedicationRegimenEndDateException}"
          },
          "400 - 11512" : {
            "description" : "${InvalidMedicationNextReviewDateException}"
          },
          "400 - 11513" : {
            "description" : "${InvalidMissedDoseDateException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens/{medicationId}/notes" : {
      "get" : {
        "tags" : [ "medications" ],
        "summary" : "Gets the list of note details for Medication",
        "description" : "${description/medications/getMedicationNotes.html}",
        "operationId" : "getMedicationNoteInstanceList-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Create a member medication Note",
        "description" : "${description/medications/postMedicationNote.html}",
        "operationId" : "postMedicationNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The medication information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens/potential-duplicates" : {
      "post" : {
        "tags" : [ "medications" ],
        "summary" : "Search for Potential Duplicates for member's claim based medication",
        "description" : "${description/medication-regimens/postMemberPotentialDuplicates.html}",
        "operationId" : "searchPotentialClaimMedicationsDuplicates-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateMedicationResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          }
        }
      }
    },
    "/members/{memberId}/medication-regimens/{medicationId}" : {
      "put" : {
        "tags" : [ "medications" ],
        "summary" : "Update a member medication regimen",
        "description" : "${description/medications/putMemberMedicationRegimen.html}",
        "operationId" : "updateMedication-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "medicationId",
          "in" : "path",
          "description" : "The medication ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The medication information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMedicationRegimenRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11501" : {
            "description" : "${MedispanNotConfiguredException}"
          },
          "404 - 11502" : {
            "description" : "${MediSpanDrugSearchException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          },
          "400 - 11504" : {
            "description" : "${MedicationCannotBeUpdatedException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10057" : {
            "description" : "${InvalidDrugException}"
          },
          "400 - 11505" : {
            "description" : "${DispensedDrugNotRelatedToDrugNameException}"
          },
          "400 - 11516" : {
            "description" : "${DuplicateMedicationIDException}"
          },
          "404 - 11523" : {
            "description" : "${MediSpanDrugAllergenScreeningException}"
          }
        }
      }
    },
    "/member-activity-configuration" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieve member activity configuration",
        "description" : "${description/member-properties/getMemberActivityConfiguration.html}",
        "operationId" : "getMemberActivityConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberActivityConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/activities" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieve member activity",
        "description" : "${description/member-properties/getMemberActivity.html}",
        "operationId" : "getMemberActivityItems-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityItem"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/addresses/{contactAddressId}" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets a member contact address",
        "description" : "${description/member-contacts/getMemberContactAddress.html}",
        "operationId" : "getContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactAddressId",
          "in" : "path",
          "description" : "The contact address ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactAddress"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10027" : {
            "description" : "${ContactAddressNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Update a member address",
        "description" : "${description/member-contacts/putMemberContactAddress.html}",
        "operationId" : "updateMemberContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactAddressId",
          "in" : "path",
          "description" : "The contact address ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated member address",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/addresses" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Find member addresses",
        "description" : "${description/member-contacts/getMemberAddressList.html}",
        "operationId" : "getMemberAddressList",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactAddress"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Create a new member address",
        "description" : "${description/member-contacts/postMemberContactAddress.html}",
        "operationId" : "addMemberContactAddress",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new member address",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactAddress"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/member-centered-plans" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieve Member Centered Plans",
        "description" : "${description/members/getMemberCenteredPlans.html}",
        "operationId" : "getMemberCenteredPlans-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberCenteredPlan"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/coach-search-configuration" : {
      "get" : {
        "tags" : [ "coach-internal" ],
        "summary" : "Returns all Coach Search Configuration",
        "description" : "${description/coach/coachSearchConfiguration.html}",
        "operationId" : "getCoachSearchConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/member-contact-address-configuration" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member contact address configuration",
        "description" : "${description/member-contacts/getMemberContactAddressConfiguration.html}",
        "operationId" : "getMemberContactAddressConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberContactAddressConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/member-contact-email-configuration" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member contact address configuration",
        "description" : "${description/member-contacts/getMemberContactEmailConfiguration.html}",
        "operationId" : "getMemberContactEmailConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberContactEmailConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/member-contact-email-configuration-v2" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member contact email configuration",
        "description" : "${description/member-contacts/getMemberContactEmailConfigurationV2.html}",
        "operationId" : "getMemberContactEmailConfigurationV2-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberContactEmailConfiguration2"
                }
              }
            }
          }
        }
      }
    },
    "/member-contact-phone-number-configuration" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member contact phone number configuration",
        "description" : "${description/member-contacts/getMemberContactPhoneNumberConfiguration.html}",
        "operationId" : "getMemberContactPhoneNumberConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberContactPhoneNumberConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/documents" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Add document for member",
        "description" : "${description/members/postMemberDocument.html}",
        "operationId" : "addDocument-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Document file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          }
        }
      }
    },
    "/members/{memberId}/documents/{documentId}/void-info" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Void a document",
        "description" : "${description/documents/voidDocument.html}",
        "operationId" : "voidDocument-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "documentId",
          "in" : "path",
          "description" : "The document ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Void Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/documents/document-types" : {
      "get" : {
        "tags" : [ "documents" ],
        "summary" : "Get Document Types",
        "description" : "${description/documents/getDocumentTypes.html}",
        "operationId" : "getDocumentTypes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/document-search" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Search for documents",
        "description" : "${description/documents/postDocumentSearch.html}",
        "operationId" : "documentSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The document search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DocumentSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DocumentSearchResults"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/emails/{contactEmailId}" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets a member contact email address",
        "description" : "${description/member-contacts/getMemberContactEmailAddress.html}",
        "operationId" : "getContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "path",
          "description" : "The member contact email ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactEmail"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10028" : {
            "description" : "${ContactEmailNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Update an member email address",
        "description" : "${description/member-contacts/putMemberContactEmail.html}",
        "operationId" : "updateMemberContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactEmailId",
          "in" : "path",
          "description" : "The member contact email ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated member email address",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/emails" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Find member emails",
        "description" : "${description/member-contacts/getMemberEmailsList.html}",
        "operationId" : "getMemberEmailsList",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactEmail"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Create a member email address",
        "description" : "${description/member-contacts/postMemberContactEmail.html}",
        "operationId" : "addMemberContactEmail",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new member email address",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactEmail"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/member-list/starred" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the starred member list",
        "description" : "${description/members/getStarredMemberList.html}",
        "operationId" : "getStarredMemberList-internal",
        "parameters" : [ {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "Sort Column",
            "default" : "MEMBER_NAME",
            "enum" : [ "MEMBER_NAME", "BIRTH_DATE", "GENDER", "MPI", "EXTERNAL_MEMBER_ID" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "Sort Type",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberListSearchResults"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Adds or removes multiple memberIds to/from starred member list",
        "description" : "${description/members/updateStarredMemberList.html}",
        "operationId" : "updateStarredMemberList-internal",
        "requestBody" : {
          "description" : "Member Id list to process",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberList"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10937" : {
            "description" : "${OperationNotFoundException}"
          },
          "400 - 10108" : {
            "description" : "${MemberListOperationException}"
          }
        }
      }
    },
    "/member-list/managed" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the managed member list",
        "description" : "${description/members/getManagedMemberList.html}",
        "operationId" : "getMemberList",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberList"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Adds or removes multiple memberIds to/from managed member list",
        "description" : "${description/members/updateManagedMemberList.html}",
        "operationId" : "updateManagedMemberList",
        "requestBody" : {
          "description" : "Member Id list to process",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberList"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10937" : {
            "description" : "${OperationNotFoundException}"
          },
          "400 - 10108" : {
            "description" : "${MemberListOperationException}"
          }
        }
      }
    },
    "/member-list/recent" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the recently viewed member list",
        "description" : "${description/members/getRecentMemberList.html}",
        "operationId" : "getRecentMemberList-internal",
        "parameters" : [ {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "Sort Column",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "MEMBER_NAME",
            "enum" : [ "MEMBER_NAME", "BIRTH_DATE", "GENDER", "MPI", "EXTERNAL_MEMBER_ID" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberListSearchResults"
                }
              }
            }
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Adds or removes multiple memberIds to/from Recent member list",
        "description" : "${description/members/updateRecentMemberList.html}",
        "operationId" : "updateRecentMemberList-internal",
        "requestBody" : {
          "description" : "Member Id list to process",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberList"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10937" : {
            "description" : "${OperationNotFoundException}"
          }
        }
      }
    },
    "/member-list/managed-v2" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the managed member list paginating and sorting",
        "description" : "${description/members/getPaginatedManagedMemberList.html}",
        "operationId" : "searchManagedMemberList-internal",
        "parameters" : [ {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "Sort Column",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "MEMBER_NAME",
            "enum" : [ "MEMBER_NAME", "BIRTH_DATE", "GENDER", "MPI", "EXTERNAL_MEMBER_ID" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberListSearchResults"
                }
              }
            }
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/member-list/managed/{memberId}" : {
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Add a member to the managed member list",
        "description" : "${description/members/putMemberInManagedMemberList.html}",
        "operationId" : "addToMemberList",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberList"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10108" : {
            "description" : "${MemberListOperationException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "members" ],
        "summary" : "Remove a member from the member list",
        "description" : "${description/members/deleteMemberFromManagedMemberList.html}",
        "operationId" : "removeFromMemberList",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberList"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/merge-history" : {
      "get" : {
        "tags" : [ "menus-internal" ],
        "summary" : "Find member merge history",
        "description" : "${description/members/getMemberMergeHistory.html}",
        "operationId" : "getMemberMergeHistory-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MergeHistoryEvent"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/networks" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Find member networks",
        "description" : "${description/member-networks/getMemberNetworkList.html}",
        "operationId" : "getMemberNetworks",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Date of service. Finds networks that are active on this date. If empty, assumes today's date. Date format: yyyy-mm-dd",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "product_id",
          "in" : "query",
          "description" : "Product ID",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Network"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/phone-numbers/{contactPhoneNumberId}" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets a member contact phone number",
        "description" : "${description/member-contacts/getMemberContactPhoneNumber.html}",
        "operationId" : "getContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneNumberId",
          "in" : "path",
          "description" : "The phone number instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactPhoneNumber"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10026" : {
            "description" : "${ContactPhoneNumberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates a member phone number",
        "description" : "${description/member-contacts/putMemberContactPhone.html}",
        "operationId" : "updateMemberContactPhone",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactPhoneNumberId",
          "in" : "path",
          "description" : "The phone number instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated member phone number",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/phone-numbers" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Finds member phone numbers",
        "description" : "${description/member-contacts/getMemberPhoneNumbersList.html}",
        "operationId" : "getMemberPhoneNumbersList",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactPhoneNumber"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Creates a new member phone number",
        "description" : "${description/member-contacts/postMemberContactPhoneNumber.html}",
        "operationId" : "addMemberContactPhoneNumber",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "contact phone number entity",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactPhoneNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/prescreen/inpatient-authorization" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the prescreen results for inpatient authorization",
        "description" : "${description/members/submitInpatientAuthorizationPrescreenRequest.html}",
        "operationId" : "submitInpatientAuthorizationPrescreenRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "persistPrescreenNote",
          "in" : "query",
          "description" : "Indicates whether to automatically persist the prescreen note",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically persist the prescreen note",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Inpatient Authorization Prescreen Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InpatientAuthorizationPrescreenRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "400 - 10015" : {
            "description" : "${NoteInstanceDoesNotBelongToMemberException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10172" : {
            "description" : "${NoteInstanceAlreadyAssociatedWithAuthorizationException}"
          },
          "503 - 10090" : {
            "description" : "${ServiceUnavailableException}"
          }
        }
      }
    },
    "/members/{memberId}/prescreen/rx-authorization" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the prescreen results for RX authorization",
        "description" : "${description/members/submitRxAuthorizationPrescreenRequest.html}",
        "operationId" : "submitRxAuthorizationPrescreenRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "persistPrescreenNote",
          "in" : "query",
          "description" : "Indicates whether to automatically persist the prescreen note",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically persist the prescreen note",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "RX Authorization Prescreen Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RxAuthorizationPrescreenRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "400 - 10015" : {
            "description" : "${NoteInstanceDoesNotBelongToMemberException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10172" : {
            "description" : "${NoteInstanceAlreadyAssociatedWithAuthorizationException}"
          },
          "503 - 10090" : {
            "description" : "${ServiceUnavailableException}"
          }
        }
      }
    },
    "/members/{memberId}/prescreen/service-procedure-authorization/notes" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits the prescreen notes for a service procedure authorization",
        "description" : "${description/members/submitServiceProcedureAuthorizationPrescreenNotes.html}",
        "operationId" : "submitServiceProcedurePrescreenNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Prescreen note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrescreenNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/prescreen/inpatient-authorization-v2" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submit the inpatient authorization prescreen and get the results processed by BRE",
        "description" : "${description/members/submitInpatientAuthorizationPrescreenRequestV2.html}",
        "operationId" : "submitInpatientAuthorizationPrescreenRequestV2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "persistPrescreenNote",
          "in" : "query",
          "description" : "Indicates whether to automatically persist the prescreen notes",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically persist the prescreen notes",
            "default" : true
          }
        }, {
          "name" : "forceGenerateNotes",
          "in" : "query",
          "description" : "Indicates whether to automatically generate the notes from prescreen",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically generate the notes from prescreen",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Inpatient Authorization Prescreen Request V2",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InpatientAuthorizationPrescreenRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "503 - 10090" : {
            "description" : "${ServiceUnavailableException}"
          },
          "400 - 10238" : {
            "description" : "${PrescreenNotEnabledException}"
          }
        }
      }
    },
    "/members/{memberId}/prescreen/rx-authorization/notes" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits the prescreen notes for a RX authorization",
        "description" : "${description/members/submitRXAuthorizationPrescreenNotes.html}",
        "operationId" : "submitRXPrescreenNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrescreenNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/prescreen/inpatient-authorization/notes" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Submits the prescreen notes for an inpatient authorization",
        "description" : "${description/members/submitInpatientAuthorizationPrescreenNotes.html}",
        "operationId" : "submitInpatientPrescreenNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Prescreen note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrescreenNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/prescreen/service-procedure-authorization-v2" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Prescreen a service/procedure authorization",
        "description" : "${description/members/submitServiceProcedureAuthorizationPrescreenRequestV2.html}",
        "operationId" : "submitServiceProcedureAuthorizationPrescreenRequestV2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "persistPrescreenNote",
          "in" : "query",
          "description" : "Indicates whether to automatically persist the prescreen note",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically persist the prescreen note",
            "default" : true
          }
        }, {
          "name" : "forceGenerateNotes",
          "in" : "query",
          "description" : "Indicates whether to automatically generate the notes from prescreen",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically generate the notes from prescreen",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Service Procedure Authorization Prescreen Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceProcedureAuthorizationPrescreenRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "503 - 10090" : {
            "description" : "${ServiceUnavailableException}"
          },
          "400 - 10238" : {
            "description" : "${PrescreenNotEnabledException}"
          }
        }
      }
    },
    "/members/{memberId}/prescreen/service-procedure-authorization" : {
      "post" : {
        "tags" : [ "authorizations" ],
        "summary" : "Get the prescreen results for service procedure authorization",
        "description" : "${description/members/submitServiceProcedureAuthorizationPrescreenRequest.html}",
        "operationId" : "submitServiceProcedureAuthorizationPrescreenRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "sourceIdentifier",
          "in" : "query",
          "description" : "Source identifier",
          "schema" : {
            "type" : "string",
            "description" : "Source identifier",
            "default" : "api"
          }
        }, {
          "name" : "persistPrescreenNote",
          "in" : "query",
          "description" : "Indicates whether to automatically persist the prescreen note",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to automatically persist the prescreen note",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "Service Procedure Authorization Prescreen Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceProcedureAuthorizationPrescreenRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10067" : {
            "description" : "${EligibilityNotFoundException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10063" : {
            "description" : "${InvalidDiagnosisCodeException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10061" : {
            "description" : "${InvalidServiceTypeException}"
          },
          "400 - 10064" : {
            "description" : "${InvalidDiagnosisTypeException}"
          },
          "400 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "400 - 10015" : {
            "description" : "${NoteInstanceDoesNotBelongToMemberException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10172" : {
            "description" : "${NoteInstanceAlreadyAssociatedWithAuthorizationException}"
          },
          "503 - 10090" : {
            "description" : "${ServiceUnavailableException}"
          }
        }
      }
    },
    "/member-properties-configuration/general-information" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the general information configuration",
        "description" : "${description/member-properties/getMemberGeneralInformationConfiguration.html}",
        "operationId" : "getMemberGeneralInformationConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberGeneralInformationConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/member-properties-configuration/opt-out-preferences" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the opt-out preferences configuration",
        "description" : "${description/member-properties/getOptOutPreferenceConfiguration.html}",
        "operationId" : "getOptOutPreferenceConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OptOutPreferenceConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/member-properties-configuration/member-header" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member header configuration",
        "description" : "${description/member-properties/getMemberHeaderConfiguration.html}",
        "operationId" : "getMemberHeaderConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberHeaderConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/member-properties-configuration/member-details" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member details configuration",
        "description" : "${description/member-properties/getMemberDetailsConfiguration.html}",
        "operationId" : "getMemberDetailsConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberDetailsConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/header" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the header information of the member",
        "description" : "${description/member-properties/getMemberHeader.html}",
        "operationId" : "getHeader",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberHeader"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      }
    },
    "/members/{memberId}/contact-times" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the preferred contact times of the member",
        "description" : "${description/member-properties/getMemberContactTimes.html}",
        "operationId" : "getMemberContactTimes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberContactTimes"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the preferred contact times of the member",
        "description" : "${description/member-properties/setMemberContactTimes.html}",
        "operationId" : "setMemberContactTimes",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated contact times",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberContactTimes"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/member-details" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member details",
        "description" : "${description/member-properties/getMemberDetails.html}",
        "operationId" : "getMemberDetails",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberDetails"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the member details",
        "description" : "${description/member-properties/setMemberDetails.html}",
        "operationId" : "setMemberDetails",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated member details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/alerts" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member alerts",
        "description" : "${description/member-properties/getMemberAlerts.html}",
        "operationId" : "getMemberAlerts",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberAlerts"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the member alerts",
        "description" : "${description/member-properties/updateMemberAlerts.html}",
        "operationId" : "updateMemberAlerts",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated alerts value",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberAlertsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/general-information" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the general information of the member",
        "description" : "${description/member-properties/getMemberGeneralInformation.html}",
        "operationId" : "getMemberGeneralInformation",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberGeneralInformation"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the general information of the member",
        "description" : "${description/member-properties/updateMemberGeneralInformation.html}",
        "operationId" : "setMemberGeneralInformation",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated general information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMemberGeneralInformationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/member-opt-out" : {
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the contact opt out of the member",
        "description" : "${description/member-properties/updateMemberOptOut.html}",
        "operationId" : "updateMemberContactOptOut",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated contact opt out value",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberOptOutRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        },
        "deprecated" : true
      }
    },
    "/members/{memberId}/mpi" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the MPI summary of the member",
        "description" : "${description/member-properties/getMemberMpi.html}",
        "operationId" : "getMemberMpiRecords",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberMpi"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/authorizations-search" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Performs a search for the member authorizations",
        "description" : "${description/member-properties/postMemberAuthorizationSearch.html}",
        "operationId" : "searchMemberAuthorizations-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for member authorizations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberAuthorizationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberAuthorizationSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10163" : {
            "description" : "${LocationsNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/opt-out-preferences" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the contact opt-out preferences of the member",
        "description" : "${description/member-properties/getMemberOptOutPreferences.html}",
        "operationId" : "getMemberOptOutPreferences",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptOutPreference"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Creates a new opt-out preference for the member",
        "description" : "${description/member-properties/postMemberOptOutPreference.html}",
        "operationId" : "createMemberOptOutPreference",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new opt-out preference",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOptOutPreferenceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10965" : {
            "description" : "${DuplicateEntityMappingsMemberException}"
          }
        }
      }
    },
    "/members/{memberId}/contact-information" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member contact information",
        "description" : "${description/member-properties/getContactInformation.html}",
        "operationId" : "getContactInformation",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberContactInformation"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/attachments/{attachmentId}/void-info" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Void an attachment of a member",
        "description" : "${description/members/postVoidAttachment.html}",
        "operationId" : "voidDocumentAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/relationships" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the relationships of the member",
        "description" : "${description/member-properties/getMemberRelationships.html}",
        "operationId" : "getMemberRelationships",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Relationship"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/privacy-information" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member privacy information",
        "description" : "${description/member-properties/getMemberPrivacyInformation.html}",
        "operationId" : "getMemberPrivacyInformation",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberPrivacyInformation"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/opt-out-preferences/{preferenceId}" : {
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the contact opt-out preference of the member",
        "description" : "${description/member-properties/setMemberOptOutPreference.html}",
        "operationId" : "updateMemberOptOutPreference",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preferenceId",
          "in" : "path",
          "description" : "The opt-out preference id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new opt-out preference",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOptOutPreferenceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10913" : {
            "description" : "${OptOutPreferenceNotFoundException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "members" ],
        "summary" : "Removes the contact opt-out preference of the member",
        "description" : "${description/member-properties/deleteMemberOptOutPreference.html}",
        "operationId" : "deleteMemberOptOutPreference",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preferenceId",
          "in" : "path",
          "description" : "The internal preference ID, obtainable from the member opt-out-preferences API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10913" : {
            "description" : "${OptOutPreferenceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}" : {
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Updates the member demographics",
        "description" : "${description/member-properties/updateMemberDemographics.html}",
        "operationId" : "updateMembeDemographics-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated member demographics value",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMemberRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10007" : {
            "description" : "${NotMemberResourceException}"
          }
        }
      }
    },
    "/members/{memberId}/pcp-details" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the PCP information of the member",
        "description" : "${description/member-properties/getMemberPcp.html}",
        "operationId" : "getMemberPcp-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberPcp"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/available-teams" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieves list of teams for the member",
        "description" : "${description/member-properties/getMemberTeams.html}",
        "operationId" : "searchAvaliableTeams-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamInfo"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/task-for-screen" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets a task for a given screen type",
        "description" : "${description/member-properties/getTaskForScreen.html}",
        "operationId" : "getTaskForScreen-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "screenTypeName",
          "in" : "query",
          "description" : "The name of the screen",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactId",
          "in" : "query",
          "description" : "The id of the artifact",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "query",
          "description" : "The id of the instance",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskName",
          "in" : "query",
          "description" : "The name of the task",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDTO"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10171" : {
            "description" : "${ScreenNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members/{memberId}/coach-search" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Search for health coaches",
        "description" : "${description/coach/searchCoach.html}",
        "operationId" : "coachSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for health coaches",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CoachSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CoachSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/duplicate-candidates/{duplicateCandidateId}" : {
      "get" : {
        "tags" : [ "member-reconciliation-internal" ],
        "summary" : "View Duplicate MemberDetails",
        "description" : "${description/member-reconciliation/getDuplicateMember.html}",
        "operationId" : "getDuplicateCandidate-internal",
        "parameters" : [ {
          "name" : "duplicateCandidateId",
          "in" : "path",
          "description" : "Duplicate CandidateId retrieved from duplicateId search or duplicateId list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DuplicateCandidate"
                }
              }
            }
          },
          "404 - 10175" : {
            "description" : "${DuplicateCandidateNotFoundException}"
          }
        }
      }
    },
    "/duplicate-candidates/{duplicateCandidateId}/resolve" : {
      "post" : {
        "tags" : [ "member-reconciliation-internal" ],
        "summary" : "Resolve member by duplicate CandidateId",
        "description" : "${description/member-reconciliation/resolveDuplicateMember.html}",
        "operationId" : "resolveDuplicateMember-internal",
        "parameters" : [ {
          "name" : "duplicateCandidateId",
          "in" : "path",
          "description" : "Duplicate CandidateId retrieved from duplicateId search or duplicateId list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The match determination information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResolveDuplicateCandidateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10175" : {
            "description" : "${DuplicateCandidateNotFoundException}"
          }
        }
      }
    },
    "/duplicate-candidates/duplicate-member/{duplicateId}/target-member/{targetId}/merge" : {
      "post" : {
        "tags" : [ "member-reconciliation-internal" ],
        "summary" : "Manually merge member by duplicateId and targetId",
        "description" : "${description/member-reconciliation/postMergeMember.html}",
        "operationId" : "manuallyMergeMember-internal",
        "parameters" : [ {
          "name" : "duplicateId",
          "in" : "path",
          "description" : "Member details retrived from duplicateId ",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetId",
          "in" : "path",
          "description" : "Member details retrived from targetId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404 - 10177" : {
            "description" : "${MemberMergeOfflineStateException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10176" : {
            "description" : "${MemberMergeHcsEnrollmentConflictException}"
          }
        }
      }
    },
    "/member-reconciliation/duplicate-candidates" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Find list of duplicate candidates",
        "description" : "${description/members/getDuplicateCandidatesList.html}",
        "operationId" : "getDuplicateCandidates-internal",
        "parameters" : [ {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DuplicateCandidateResults"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/internal" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Create a Member",
        "description" : "${description/members/postMemberInternal.html}",
        "operationId" : "createMemberInternal-internal",
        "parameters" : [ {
          "name" : "bhpNodeNameFullPath",
          "in" : "query",
          "description" : "Bhp Node Name Full Path",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The object describing the properties of the new member",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Member"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/members" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Add a member",
        "description" : "${description/members/postMember.html}",
        "operationId" : "createMember",
        "requestBody" : {
          "description" : "The object describing the properties of the new member",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMemberRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberLite"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10050" : {
            "description" : "${OptionValueNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/members-search-configuration" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the configuration for creating a member search request",
        "description" : "${description/members/getMembersSearchConfiguration.html}",
        "operationId" : "getConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberSearchConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members-search" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Perform a member search",
        "description" : "${description/members/postMembersSearch.html}",
        "operationId" : "memberSearch",
        "requestBody" : {
          "description" : "The member search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members-search-v2" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Perform a member search with enhanced search criteria.",
        "description" : "${description/members/postMembersSearchV2.html}",
        "operationId" : "memberSearch_1",
        "requestBody" : {
          "description" : "The member search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberSearchCriteriaV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/coverage" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member coverage",
        "description" : "${description/member-summary/getMemberSummaryCoverage.html}",
        "operationId" : "getEligibilities",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Eligibility"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/summary/member-details" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member details.",
        "description" : "${description/member-summary/getMemberSummaryDetails.html}",
        "operationId" : "getMemberSummaryDetails-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberSummaryDetails"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/medications-v2" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member medications summary",
        "description" : "${description/member-summary/getMemberMedicationsDashboardPod.html}",
        "operationId" : "getMemberMedicationsDashboardPod-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "UPDATED_DATE",
            "enum" : [ "EXPECTED_REFILL_DATE", "UPDATED_DATE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MedicationPodResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/authorizations" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member authorizations summary",
        "description" : "${description/member-summary/getMemberSummaryAuthorizations.html}",
        "operationId" : "getMemberSummaryAuthorizations-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "AUTHORIZATION_NUM",
            "enum" : [ "AUTHORIZATION_ID", "AUTHORIZATION_NUM", "AUTHORIZATION_TYPE", "FACILITY", "REQUESTING_PROVIDER", "ADMIT_DIAGNOSIS", "START_DATE", "DISCHARGE", "END_DATE", "STATUS", "STATE", "DIAGNOSIS_TYPE", "SERVICING_PRESCRIBING_PROVIDER", "UPDATED_DATE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberSummaryAuthorizationSearchResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/programs" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Search for member enrollment programs",
        "description" : "${description/member-summary/getMemberSummaryEnrollmentPrograms.html}",
        "operationId" : "getMemberEnrollmentPrograms-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "includeClosed",
          "in" : "query",
          "description" : "If value is passed as true it returns both Open and Closed Programs records or else it returns only Open Programs",
          "schema" : {
            "type" : "boolean",
            "description" : "If value is passed as true it returns both Open and Closed Programs records or else it returns only Open Programs",
            "default" : false
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "START_DATE",
            "enum" : [ "PROGRAM", "SERVICE", "ENGAGEMENT", "START_DATE", "END_DATE", "STATUS", "SOURCE", "CASE_NUMBER", "CASE_NAME" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgramEnrollmentSearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/demographics" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member demographics",
        "description" : "${description/member-summary/getMemberSummaryDemographics.html}",
        "operationId" : "getMemberSummaryDemographics",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberSummaryDemographics"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/contacts" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member contacts",
        "description" : "${description/member-summary/getMemberSummaryContacts.html}",
        "operationId" : "getMemberContactsSummary",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInactive",
          "in" : "query",
          "description" : "Include inactive contact information",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimpleContactsSummary"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/medications" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member medications summary",
        "description" : "${description/member-summary/getMemberSummaryMedications.html}",
        "operationId" : "getMemberMedicationsScreen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The name of the screen",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "include-voided",
          "in" : "query",
          "description" : "Include or exclude voided medications. Empty param will return active medications only",
          "schema" : {
            "type" : "boolean",
            "description" : "Include or exclude voided medications. Empty param will return active medications only",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Medication"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/allergies" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member allergies summary",
        "description" : "${description/member-summary/getMemberSummaryAllergies.html}",
        "operationId" : "getMemberAllergiesScreen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Allergy"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        },
        "deprecated" : true
      }
    },
    "/members/{memberId}/summary/diagnoses" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member diagnosis summary",
        "description" : "${description/member-summary/getMemberSummaryDiagnoses.html}",
        "operationId" : "getMemberDiagnosesScreen",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Diagnosis"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/summary/clinical-diagnoses" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Gets the member diagnosis summary",
        "description" : "${description/member-summary/getMemberSummaryClinicalDiagnosis.html}",
        "operationId" : "getMemberDiagnoses-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "Sort Column",
            "default" : "DATE_REPORTED",
            "enum" : [ "DATE_REPORTED", "DIAGNOSIS_NAME", "DIAGNOSIS_CODE", "STATUS", "CLOSED_DATE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort type",
          "schema" : {
            "type" : "string",
            "description" : "Sort type",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "openDiagnosesOnly",
          "in" : "query",
          "description" : "Open Diagnoses Only",
          "schema" : {
            "type" : "boolean",
            "description" : "Open Diagnoses Only",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiagnosisLiteResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/summary/care-opportunities" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieve member's open care opportunities",
        "description" : "${description/member-summary/getMemberOpenCareOpportunities.html}",
        "operationId" : "getMemberOpenCareOpportunities-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "sortColumn",
            "default" : "STATUS_DATE",
            "enum" : [ "CATEGORY", "RISK_INDICATOR", "CONDITION", "ACUITY_RISK", "RISK_INDICATOR_VAL", "RISK_INDICATOR_DATE", "SOURCE", "STATUS", "STATUS_DATE" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "sortType",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "DESC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CareOpportunitySearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          }
        }
      }
    },
    "/members/{memberId}/locations/{memberLocationId}" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieve existing member location",
        "description" : "${description/member-locations/getMemberLocation.html}",
        "operationId" : "getMemberLocation-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberLocationId",
          "in" : "path",
          "description" : "The member location ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The member location ID",
            "default" : "memberLocationId"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "dateOfInterest",
          "in" : "query",
          "description" : "The date of interest, typically current date",
          "schema" : {
            "type" : "integer",
            "description" : "The date of interest, typically current date",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberLocation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10971" : {
            "description" : "${InvalidMemberLocationException}"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Update an existing member location",
        "description" : "${description/member-locations/putMemberLocation.html}",
        "operationId" : "updateMemberLocation-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberLocationId",
          "in" : "path",
          "description" : "The member location ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The member location ID",
            "default" : "memberLocationId"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Updated member location information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMemberLocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10971" : {
            "description" : "${InvalidMemberLocationException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/locations" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Create a new member location",
        "description" : "${description/member-locations/postMemberLocation.html}",
        "operationId" : "addMemberLocation-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Member location information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMemberLocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/locations/{memberLocationId}/void" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Void an existing member location",
        "description" : "${description/member-locations/voidMemberLocation.html}",
        "operationId" : "voidMemberLocation-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberLocationId",
          "in" : "path",
          "description" : "The member location ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The member location ID",
            "default" : "memberLocationId"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Voided Member location information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10971" : {
            "description" : "${InvalidMemberLocationException}"
          }
        }
      }
    },
    "/members/{memberId}/locations/date-ranges" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Retrieve list of occupied effective dates for member locations",
        "description" : "${description/member-locations/getDateRanges.html}",
        "operationId" : "getDateRanges-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "memberLocationIdToExclude",
          "in" : "query",
          "description" : "The member location ID to get excluded from date range list",
          "schema" : {
            "type" : "string",
            "description" : "The member location ID to get excluded from date range list"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberLocation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/locations/{memberLocationId}/verification" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Verify the address of an existing member location",
        "description" : "${description/member-locations/verifyMemberLocation.html}",
        "operationId" : "verifyAddress-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberLocationId",
          "in" : "path",
          "description" : "The member location ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The member location ID",
            "default" : "memberLocationId"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Verified Address information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberLocationVerificationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10970" : {
            "description" : "${AddressVerificationAlreadyExistsException}"
          },
          "400 - 10971" : {
            "description" : "${InvalidMemberLocationException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "members" ],
        "summary" : "UnVerify the already verified address of an existing member location",
        "description" : "${description/member-locations/unVerifyMemberLocation.html}",
        "operationId" : "unVerifyAddress-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberLocationId",
          "in" : "path",
          "description" : "The member location ID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The member location ID",
            "default" : "memberLocationId"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10972" : {
            "description" : "${AddressVerificationDoesNotExistException}"
          },
          "400 - 10971" : {
            "description" : "${InvalidMemberLocationException}"
          }
        }
      }
    },
    "/members/{memberId}/locations-search" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Search for Member Locations",
        "description" : "${description/member-locations/postMemberLocationSearch.html}",
        "operationId" : "memberLocationSearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The member location search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberLocationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberLocationSearchResults"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          }
        }
      }
    },
    "/menu-configuration" : {
      "get" : {
        "tags" : [ "menus-internal" ],
        "summary" : "Get menu configuration",
        "description" : "${description/menu/getMenuConfiguration.html}",
        "operationId" : "getMenuConfiguration-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path value, if not provided defaults to root",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MenuConfiguration"
                }
              }
            }
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/messages" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Creates a new message",
        "description" : "${description/message/postMessage.html}",
        "operationId" : "createMessage",
        "requestBody" : {
          "description" : "The message to save",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BoardMessageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10110" : {
            "description" : "${NoRecipientsException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10950" : {
            "description" : "${MemberFilterGroupNotFoundException}"
          },
          "400 - 10951" : {
            "description" : "${CompanyGroupNotFoundException}"
          },
          "400 - 10961" : {
            "description" : "${NoAccessToCompanyGroupForUserException}"
          }
        }
      }
    },
    "/messages/archive" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Archives select messages",
        "description" : "${description/message/archiveMessages.html}",
        "operationId" : "archiveBoardMessages-internal",
        "requestBody" : {
          "description" : "List of BoardMessages to archive",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BoardMessageArchivationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10954" : {
            "description" : "${BoardMessageNotFoundException}"
          }
        }
      }
    },
    "/users/{username}/message-search" : {
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Performs a search for messages",
        "description" : "${description/message/postMessageSearch.html}",
        "operationId" : "searchMessages-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for messages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BoardMessageSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BoardMessageSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/notes-configuration/member-notes-associations/{associationType}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the associations that can be made when creating notes for a member",
        "description" : "${description/notes/getMemberNotesAssociations.html}",
        "operationId" : "getMemberNotesAssociations",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associationType",
          "in" : "path",
          "description" : "The type of association",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberNotesAssociationType",
              "namespace" : "http://www.casenet.com/MemberNotesAssociationType"
            },
            "enum" : [ "CASE", "AUTH" ]
          }
        }, {
          "name" : "includeClosedCases",
          "in" : "query",
          "description" : "If set to true and the associationType is CASE, then closed cases will be part of the return set.",
          "schema" : {
            "type" : "boolean",
            "description" : "If set to true and the associationType is CASE, then closed cases will be part of the return set.",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberNotesAssociation"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/note-definitions/{type}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets lite form of note definitions by type.",
        "description" : "${description/notes/getNoteDefinitions.html}",
        "operationId" : "getNoteDefinitionsByType",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The note definition type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permission",
          "in" : "query",
          "description" : "Retieves notes definitions for Edit/Create Action, allowed values CREATE, EDIT",
          "schema" : {
            "type" : "string",
            "default" : "CREATE",
            "enum" : [ "CREATE", "EDIT" ]
          }
        }, {
          "name" : "includeVersioning",
          "in" : "query",
          "description" : "Determines if the response includes lineage of Note Definitions",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteDefinitionLite"
                  }
                }
              }
            }
          },
          "404 - 10062" : {
            "description" : "${NoteDefinitionTypeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/interqual-transition-plan" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Get transition plan checklist for note instance",
        "description" : "${description/notes/getTransitionPlanChecklistByNoteId.html}",
        "operationId" : "getTransitionPlanChecklistByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterqualTransitionPlanChecklistInfo"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/associated-notes" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Retrieves the associated notes for a given note",
        "description" : "${description/notes/getAssociatedNotes.html}",
        "operationId" : "getAssociatedNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/attachments" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Creates a new attachment for the note",
        "description" : "${description/notes/postAttachment.html}",
        "operationId" : "postNoteAttachment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/identity-verification" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Saves a new note for identity verification",
        "description" : "${description/notes/postNewNoteForIdentity.html}",
        "operationId" : "createIdVerificationNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10062" : {
            "description" : "${NoteDefinitionTypeNotFoundException}"
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/associated-member-centered-plan" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Get Member Centered Plan By Note ID",
        "description" : "${description/notes/getMemberCenteredPlansByNoteId.html}",
        "operationId" : "getMemberCenteredPlanByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberCenteredPlan"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/cost-savings" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets a cost savings by note id",
        "description" : "${description/notes/getCostSavingsInfo.html}",
        "operationId" : "getCostSavingsByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CostSavingsInstanceSummaryLite"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10981" : {
            "description" : "${NoteNotLinkedToCostSavingsException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/restricted-users" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Retrieve the list of users",
        "description" : "${description/notes/getRestrictedUsers.html}",
        "operationId" : "getRestrictedUsers-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to add the comment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Update/Remove multiple users for a note",
        "description" : "${description/notes/postRestrictedUsers.html}",
        "operationId" : "postRestrictedUsers-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request for user",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteRestrictedUsersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10160" : {
            "description" : "${InvalidUserForVoidNoteException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/attachments/{attachmentId}/void-info" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Void an attachment of a note",
        "description" : "${description/notes/postVoidAttachment.html}",
        "operationId" : "voidNoteAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10160" : {
            "description" : "${InvalidUserForVoidNoteException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/appeal-info" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets an appeal by note id",
        "description" : "${description/notes/getAppealNote.html}",
        "operationId" : "getAppealByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppealInfo"
                }
              }
            }
          },
          "404 - 10991" : {
            "description" : "${AppealNotFoundByNoteIdAndMemberIdException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/authorization-info" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets an authorization by note id",
        "description" : "${description/notes/getAuthorizationNote.html}",
        "operationId" : "getAuthorizationByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationInfo"
                }
              }
            }
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "404 - 10989" : {
            "description" : "${NoteNotLinkedToAuthorizationException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/noteType/{noteType}/artifact-info" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets an artifact info object by note id",
        "description" : "${description/notes/getArtifactByNoteId.html}",
        "operationId" : "getArtifactByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteType",
          "in" : "path",
          "description" : "The note definition type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteSourceArtifactLink"
                }
              }
            }
          },
          "400 - 10992" : {
            "description" : "${NoteLinkForNoteTypeNotSupportedException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10993" : {
            "description" : "${NoteLinkNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/service-requests" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets Service Request details by note ID",
        "description" : "${description/notes/getServiceRequestByNoteID.html}",
        "operationId" : "getServiceRequestByNoteID-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/copy" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "copy note for all types",
        "description" : "${description/notes/postCopyNote.html}",
        "operationId" : "postCopyNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CopyNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10113" : {
            "description" : "${InvalidNoteCategoryException}"
          },
          "400 - 10081" : {
            "description" : "${NoteAttributeMissingException}"
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/aag-info" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets an aag by note id",
        "description" : "${description/notes/getAagNote.html}",
        "operationId" : "getAagByNoteId-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AagInfo"
                }
              }
            }
          },
          "400 - 10015" : {
            "description" : "${NoteInstanceDoesNotBelongToMemberException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11007" : {
            "description" : "${NoteNotLinkedToAagException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/void-info" : {
      "put" : {
        "tags" : [ "notes" ],
        "summary" : "Voids an existing note",
        "description" : "${description/notes/putNoteVoidInfo.html}",
        "operationId" : "putNoteVoidInfo",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets an existing note data",
        "description" : "${description/notes/getViewNote.html}",
        "operationId" : "getNoteById",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteInstance"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "put" : {
        "tags" : [ "notes" ],
        "summary" : "Creates a link for an existing note",
        "description" : "${description/notes/editNote.html}",
        "operationId" : "editNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The link information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteLinkRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10075" : {
            "description" : "${InvalidNoteTypeException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/notes/{noteId}/comments" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Creates a new comment for a note",
        "description" : "${description/notes/postNoteComment.html}",
        "operationId" : "postNewComment",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "description" : "The note id to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Note comment",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteCommentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10958" : {
            "description" : "${NoteDefinitionDisableException}"
          }
        }
      }
    },
    "/members/{memberId}/notes" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Saves a new note",
        "description" : "${description/notes/postNewNote.html}",
        "operationId" : "postNewNote",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          },
          "400 - 10113" : {
            "description" : "${InvalidNoteCategoryException}"
          },
          "400 - 10081" : {
            "description" : "${NoteAttributeMissingException}"
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "403 - 10966" : {
            "description" : "${NotFaxDocumentException}"
          },
          "409 - 10947" : {
            "description" : "${FaxAlreadyAttachedException}"
          }
        }
      }
    },
    "/notes-configuration/creatable-note-definitions" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the list names and ids of creatable Note Definitions",
        "description" : "${description/notes/getCreatableNoteDefinitionList.html}",
        "operationId" : "getCreatableNoteDefinitionsForBhpNode",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed full path ID, obtainable from the member header or member details.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/notes-configuration/contact-reasons" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the configuration for contact reasons for Inbound/Outbound note",
        "description" : "${description/notes/getContactReasons.html}",
        "operationId" : "getContactReasons",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes-configuration/contact-outcome-reasons" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the configuration for contact outcomes for Outbound note",
        "description" : "${description/notes/getContactOutcomeReasons.html}",
        "operationId" : "getContactOutcomeReasons",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes-configuration/void-config" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the configuration for voiding an existing note",
        "description" : "${description/notes/getVoidConfiguration.html}",
        "operationId" : "getVoidConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VoidConfig"
                }
              }
            }
          }
        }
      }
    },
    "/notes-configuration/note-definition-v2/{noteDefinitionId}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets a detailed Note Definition",
        "description" : "${description/notes/getNoteDefinitionV2.html}",
        "operationId" : "getNoteDefinitionVersionTwo",
        "parameters" : [ {
          "name" : "noteDefinitionId",
          "in" : "path",
          "description" : "The Note Definition ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteDefinition"
                }
              }
            }
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        }
      }
    },
    "/notes-configuration/note-definition/{noteDefinitionVisibleId}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets a detailed Note Definition",
        "description" : "${description/notes/getNoteDefinition.html}",
        "operationId" : "getNoteDefinition",
        "parameters" : [ {
          "name" : "noteDefinitionVisibleId",
          "in" : "path",
          "description" : "The Note Definition visible ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteDefinition"
                }
              }
            }
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          }
        },
        "deprecated" : true
      }
    },
    "/notes-configuration/note-categories" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the valid note categories",
        "description" : "${description/notes/getNoteCategories.html}",
        "operationId" : "getNoteCategories",
        "parameters" : [ {
          "name" : "noteDefinitionType",
          "in" : "query",
          "description" : "The Note Definition Type",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "NoteDefinitionTypeEnum",
              "namespace" : "http://www.casenet.com/NoteDefinitionTypeEnum"
            },
            "enum" : [ "AAG", "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "MEDICATION" ]
          }
        }, {
          "name" : "noteDefinitionVisibleId",
          "in" : "query",
          "description" : "The Note Definition visible ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "xml" : {
                      "name" : "NoteCategory",
                      "namespace" : "http://www.casenet.com/NoteCategory"
                    },
                    "enum" : [ "ADMIN", "INBOUND", "OUTBOUND" ]
                  }
                }
              }
            }
          },
          "404 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10062" : {
            "description" : "${NoteDefinitionTypeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes-search-configuration" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the configuration for the notes search",
        "description" : "${description/notes/getNotesSearchConfiguration.html}",
        "operationId" : "getNotesSearchConfiguration",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotesSearchConfiguration"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes-search-configuration-v2" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the configuration for the notes search",
        "description" : "${description/notes/getNotesSearchConfigurationV2.html}",
        "operationId" : "getNotesSearchConfiguration-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotesSearchConfiguration"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/notes-search" : {
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Performs a search for notes",
        "description" : "${description/notes/postNotesSearch.html}",
        "operationId" : "searchNotesSummary",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for notes",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/offline/offline-lock-internal" : {
      "delete" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Sets the current user back online",
        "description" : "${description/offline/setUserOnlineInternal.html}",
        "operationId" : "internalSetUserOnline-internal",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/offline/devices/{deviceId}" : {
      "get" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Return list of members which can be synced back to online",
        "description" : "${description/offline/getMembersOffline.html}",
        "operationId" : "getMemberOfflineByDeviceId-internal",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "The device ID, the token for the device generated by the server",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberLiteList"
                }
              }
            }
          },
          "403 - 10919" : {
            "description" : "${DeviceNotFoundException}"
          }
        }
      }
    },
    "/offline/general-configuration-batch" : {
      "get" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Retrieves a stream with the configuration data",
        "description" : "${description/members/getBatchConfiguration.html}",
        "operationId" : "getBatchConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/offline/offline-metadata" : {
      "get" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Retrieves a stream with the general offline information",
        "description" : "${description/offline/getOfflineMetadata.html}",
        "operationId" : "getOfflineMetadata-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OfflineMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/offline/offline-lock" : {
      "post" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Add User and Member Offline Lock",
        "description" : "${description/offline/addOfflineLock.html}",
        "operationId" : "addOfflineLock-internal",
        "requestBody" : {
          "description" : "Member ID list to set offline",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          },
          "409 - 10922" : {
            "description" : "${UserOfflineException}"
          },
          "403 - 10924" : {
            "description" : "${MaximumMembersOfflineExceededException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Sets the current user back online",
        "description" : "${description/offline/setUserOnline.html}",
        "operationId" : "setUserOnline-internal",
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "query",
          "description" : "The device ID, the token for the device generated by the server",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "403 - 10918" : {
            "description" : "${WrongOfflineDeviceException}"
          },
          "409 - 10923" : {
            "description" : "${UserOnlineException}"
          },
          "409 - 10920" : {
            "description" : "${MemberOfflineException}"
          }
        }
      }
    },
    "/create-pdf-file" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Creates PDF files",
        "description" : "${description/pdf-file/createPdfFile.html}",
        "operationId" : "createPdfFile-internal",
        "requestBody" : {
          "description" : "Information to create PDF",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePdfRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/octet-stream" : { }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 10101" : {
            "description" : "${ClaimRequestNotFoundException}"
          },
          "404 - 10099" : {
            "description" : "${CostSavingNotFoundException}"
          },
          "404 - 10603" : {
            "description" : "${MemberCenteredPlanNotFoundException}"
          },
          "404 - 10051" : {
            "description" : "${KeyMetricNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "400 - 10100" : {
            "description" : "${TimeZoneNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10052" : {
            "description" : "${KeyMetricDefinitionNotFoundException}"
          },
          "400 - 11102" : {
            "description" : "${CarePlanDoesNotBelongToMemberException}"
          },
          "400 - 10106" : {
            "description" : "${ClaimRequestDoesNotBelongToMemberException}"
          },
          "400 - 10107" : {
            "description" : "${ClaimTypeNotSupportedException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          },
          "400 - 10602" : {
            "description" : "${MemberCenteredPlanDoesNotBelongToMemberException}"
          },
          "400 - 10015" : {
            "description" : "${NoteInstanceDoesNotBelongToMemberException}"
          },
          "400 - 10802" : {
            "description" : "${ServiceRequestDoesNotBelongToMemberException}"
          },
          "400 - 10301" : {
            "description" : "${AssessmentDoesNotBelongToMemberException}"
          },
          "400 - 10938" : {
            "description" : "${PdfCreationException}"
          },
          "404 - 10209" : {
            "description" : "${AppealNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 11001" : {
            "description" : "${AagNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11008" : {
            "description" : "${AagDoesNotBelongToMemberException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "400 - 10236" : {
            "description" : "${LineItemDoesNotBelongToMemberException}"
          }
        }
      }
    },
    "/create-pdf" : {
      "post" : {
        "tags" : [ "documents" ],
        "summary" : "Creates PDF files",
        "description" : "${description/pdf/createPdf.html}",
        "operationId" : "createPdf-internal",
        "requestBody" : {
          "description" : "Information to create PDF",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePdfRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10102" : {
            "description" : "${AssessmentNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "404 - 10033" : {
            "description" : "${NoteInstanceNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 11101" : {
            "description" : "${CarePlanNotFoundException}"
          },
          "404 - 10101" : {
            "description" : "${ClaimRequestNotFoundException}"
          },
          "404 - 10099" : {
            "description" : "${CostSavingNotFoundException}"
          },
          "404 - 10603" : {
            "description" : "${MemberCenteredPlanNotFoundException}"
          },
          "404 - 10051" : {
            "description" : "${KeyMetricNotFoundException}"
          },
          "400 - 10221" : {
            "description" : "${InvalidAuthorizationTypeException}"
          },
          "400 - 10100" : {
            "description" : "${TimeZoneNotFoundException}"
          },
          "400 - 10229" : {
            "description" : "${AuthorizationDoesNotBelongToMemberException}"
          },
          "400 - 10052" : {
            "description" : "${KeyMetricDefinitionNotFoundException}"
          },
          "400 - 11102" : {
            "description" : "${CarePlanDoesNotBelongToMemberException}"
          },
          "400 - 10106" : {
            "description" : "${ClaimRequestDoesNotBelongToMemberException}"
          },
          "400 - 10107" : {
            "description" : "${ClaimTypeNotSupportedException}"
          },
          "400 - 10023" : {
            "description" : "${CostSavingDoesNotBelongToMemberException}"
          },
          "400 - 10602" : {
            "description" : "${MemberCenteredPlanDoesNotBelongToMemberException}"
          },
          "400 - 10015" : {
            "description" : "${NoteInstanceDoesNotBelongToMemberException}"
          },
          "400 - 10802" : {
            "description" : "${ServiceRequestDoesNotBelongToMemberException}"
          },
          "400 - 10301" : {
            "description" : "${AssessmentDoesNotBelongToMemberException}"
          },
          "400 - 10938" : {
            "description" : "${PdfCreationException}"
          }
        }
      }
    },
    "/members/{memberId}/product-features-search" : {
      "post" : {
        "tags" : [ "product-features" ],
        "summary" : "Search product features available to the member",
        "description" : "${description/product-features-search/postProductFeaturesSearch.html}",
        "operationId" : "memberProductFeatureItemSearch",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for product feature",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberProductFeatureSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MemberProductFeatureItem"
                  }
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10968" : {
            "description" : "${ProductFeaturesDisabledException}"
          }
        }
      }
    },
    "/members/{memberId}/product-features-search/lite-v2" : {
      "post" : {
        "tags" : [ "product-features" ],
        "summary" : "Search product features names and ids available to the member",
        "description" : "${description/product-features-search/postProductFeaturesSearchLiteV2.html}",
        "operationId" : "getFeaturesNamesV2",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for product feature",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductFeatureSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductFeatureId"
                  }
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/product-features-search/lite" : {
      "post" : {
        "tags" : [ "product-features" ],
        "summary" : "Search product features names and ids available to the member",
        "description" : "${description/product-features-search/postProductFeaturesSearchLite.html}",
        "operationId" : "getFeaturesNames",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for product feature",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductFeatureSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductFeatureId"
                  }
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        },
        "deprecated" : true
      }
    },
    "/product-features-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "product-features" ],
        "summary" : "Get configuration of Product Features for BHP node",
        "description" : "${description/product-features/getProductFeatureBhpConfiguration.html}",
        "operationId" : "getProductFeatureBhpConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductFeatureBhpConfiguration"
                }
              }
            }
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/product-features/product-feature-definitions/{externalProductFeatureDefinitionId}/special-instructions" : {
      "get" : {
        "tags" : [ "product-features" ],
        "summary" : "Get special instructions for the product feature definition",
        "description" : "${description/product-features/getProductFeatureSpecialInstructions.html}",
        "operationId" : "getProductFeatureSpecialInstructions",
        "parameters" : [ {
          "name" : "externalProductFeatureDefinitionId",
          "in" : "path",
          "description" : "Product feature definition Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecialInstructions"
                }
              }
            }
          },
          "404 - 10909" : {
            "description" : "${ProductFeatureDefinitionNotFoundException}"
          }
        }
      }
    },
    "/product-features/feature-service-definitions/{externalFeatureServiceDefinitionId}/special-instructions" : {
      "get" : {
        "tags" : [ "product-features" ],
        "summary" : "Get special instructions for the feature service definition",
        "description" : "${description/product-features/getFeatureServiceSpecialInstructions.html}",
        "operationId" : "getFeatureServiceSpecialInstructions",
        "parameters" : [ {
          "name" : "externalFeatureServiceDefinitionId",
          "in" : "path",
          "description" : "Feature service definition Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpecialInstructions"
                }
              }
            }
          },
          "404 - 10910" : {
            "description" : "${FeatureServiceDefinitionNotFoundException}"
          }
        }
      }
    },
    "/locations/{locationId}" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Finds location by ID",
        "description" : "${description/providers/getLocation.html}",
        "operationId" : "getProviderLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The location ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationIdType",
          "in" : "query",
          "description" : "Type of the location ID",
          "schema" : {
            "type" : "string",
            "description" : "Type of the location ID",
            "xml" : {
              "name" : "LocationIdType",
              "namespace" : "http://www.casenet.com/LocationIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          }
        },
        "deprecated" : true
      }
    },
    "/portal-providers-search" : {
      "post" : {
        "tags" : [ "portal-authorizations-internal" ],
        "summary" : "Performs a search for providers",
        "description" : "${description/providers/postPortalProviderSearch.html}",
        "operationId" : "portalSearchProvider-internal",
        "requestBody" : {
          "description" : "The search criteria for providers",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProviderSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          }
        }
      }
    },
    "/providers-details-search" : {
      "post" : {
        "tags" : [ "providers" ],
        "summary" : "Performs a search for providers",
        "description" : "${description/providers/postProviderDetailsSearch.html}",
        "operationId" : "searchProviderLimitedResults-internal",
        "requestBody" : {
          "description" : "The search criteria for providers",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProviderSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderDetailsResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          }
        }
      }
    },
    "/provider-locations/{providerLocationId}" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Finds provider location by ID",
        "description" : "${description/providers/getProviderLocation.html}",
        "operationId" : "getProviderLocation_1",
        "parameters" : [ {
          "name" : "providerLocationId",
          "in" : "path",
          "description" : "The provider location ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerLocationIdType",
          "in" : "query",
          "description" : "Type of the provider location ID",
          "schema" : {
            "type" : "string",
            "description" : "Type of the provider location ID",
            "xml" : {
              "name" : "LocationIdType",
              "namespace" : "http://www.casenet.com/LocationIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          }
        }
      }
    },
    "/provider-locations-search" : {
      "post" : {
        "tags" : [ "providers" ],
        "summary" : "Performs a search for provider locations",
        "description" : "${description/providers/postProviderLocationSearch.html}",
        "operationId" : "searchProviderLocations-internal",
        "requestBody" : {
          "description" : "The search criteria for provider locations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10128" : {
            "description" : "${ObsoleteProviderException}"
          }
        }
      }
    },
    "/provider-locations-search-v2" : {
      "post" : {
        "tags" : [ "providers" ],
        "summary" : "Performs a search for provider locations",
        "description" : "${description/providers/postProviderLocationSearchV2.html}",
        "operationId" : "searchProviderLocationsv2-internal",
        "requestBody" : {
          "description" : "The search criteria for provider locations",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProviderLocationSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10128" : {
            "description" : "${ObsoleteProviderException}"
          }
        }
      }
    },
    "/provider-networks/{providerLocationId}/in-network" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Return boolean value if provider is in network or not",
        "description" : "${description/providers/isInNetwork.html}",
        "operationId" : "isInNetwork",
        "parameters" : [ {
          "name" : "providerLocationId",
          "in" : "path",
          "description" : "The provider location ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerLocationIdType",
          "in" : "query",
          "description" : "Type of the provider location ID",
          "schema" : {
            "type" : "string",
            "description" : "Type of the provider location ID",
            "xml" : {
              "name" : "LocationIdType",
              "namespace" : "http://www.casenet.com/LocationIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "memberId",
          "in" : "query",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "authStartDate",
          "in" : "query",
          "description" : "Authorization start date",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "The product ID",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productIdType",
          "in" : "query",
          "description" : "Type of the product ID",
          "schema" : {
            "type" : "string",
            "description" : "Type of the product ID",
            "xml" : {
              "name" : "ProductIdType",
              "namespace" : "http://www.casenet.com/ProductIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "NAME", "EXTERNAL_ID", "INTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InNetworkResponse"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          }
        }
      }
    },
    "/provider-networks/{providerLocationId}" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Finds provider networks by location ID",
        "description" : "${description/providers/getProviderNetworks.html}",
        "operationId" : "getProviderNetworks",
        "parameters" : [ {
          "name" : "providerLocationId",
          "in" : "path",
          "description" : "The provider location ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Starting offset for networks to be loaded. Offset numbering starts with zero.",
          "schema" : {
            "type" : "integer",
            "description" : "Starting offset for networks to be loaded. Offset numbering starts with zero.",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of networks to be loaded. Fewer than the specified limit will be loaded if the end of the list of networks is reached.",
          "schema" : {
            "type" : "integer",
            "description" : "Maximum number of networks to be loaded. Fewer than the specified limit will be loaded if the end of the list of networks is reached.",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderProductSearchResults"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          }
        }
      }
    },
    "/providers" : {
      "post" : {
        "tags" : [ "providers" ],
        "summary" : "Creates a new provider",
        "description" : "${description/providers/postCreateProvider.html}",
        "operationId" : "createProvider-internal",
        "requestBody" : {
          "description" : "The Provider Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProviderRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderLite"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{providerId}/specialties" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Get the specialties for a provider",
        "description" : "${description/providers/getProviderSpecialties.html}",
        "operationId" : "getProviderSpecialties-internal",
        "parameters" : [ {
          "name" : "providerId",
          "in" : "path",
          "description" : "Provider ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProviderSpecialty"
                  }
                }
              }
            }
          },
          "404 - 10056" : {
            "description" : "${InvalidProviderException}"
          },
          "400 - 10128" : {
            "description" : "${ObsoleteProviderException}"
          }
        }
      }
    },
    "/providers/{providerId}" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Get Provider by ID",
        "description" : "${description/providers/getProviderNetworks2.html}",
        "operationId" : "getProviderById-internal",
        "parameters" : [ {
          "name" : "providerId",
          "in" : "path",
          "description" : "Provider ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Provider"
                }
              }
            }
          },
          "400 - 10111" : {
            "description" : "${InvalidProviderException}"
          }
        }
      }
    },
    "/providers-v2" : {
      "post" : {
        "tags" : [ "providers" ],
        "summary" : "Creates a new Provider",
        "description" : "${description/providers/postProvider.html}",
        "operationId" : "createProviderv2-internal",
        "requestBody" : {
          "description" : "The Provider Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProviderRequestV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10173" : {
            "description" : "${ProviderCreationException}"
          }
        }
      }
    },
    "/providers-search-configuration" : {
      "get" : {
        "tags" : [ "providers" ],
        "summary" : "Returns the configuration to search providers",
        "description" : "${description/providers-search/getProviderSearchConfiguration.html}",
        "operationId" : "getProviderSearchConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderSearchConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/providers-search" : {
      "post" : {
        "tags" : [ "providers" ],
        "summary" : "Performs a search for providers",
        "description" : "${description/providers/postProviderSearch.html}",
        "operationId" : "searchProvider",
        "requestBody" : {
          "description" : "The search criteria for providers",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProviderSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          }
        }
      }
    },
    "/queues" : {
      "get" : {
        "tags" : [ "queues" ],
        "summary" : "Get a list of queues",
        "description" : "${description/queues/getQueues.html}",
        "operationId" : "getQueues",
        "parameters" : [ {
          "name" : "queuePermission",
          "in" : "query",
          "description" : "The type of the queue",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "QueuePermission",
              "namespace" : "http://www.casenet.com/QueuePermission"
            },
            "enum" : [ "ASSIGNABLE", "CLAIMABLE", "VIEWABLE" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Queue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-search" : {
      "post" : {
        "tags" : [ "queues" ],
        "summary" : "Search for queues",
        "description" : "${description/queues/searchQueues.html}",
        "operationId" : "queueSearch-internal",
        "requestBody" : {
          "description" : "The Queue search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 11222" : {
            "description" : "${DuplicateSortColumnException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-referrals" : {
      "post" : {
        "tags" : [ "referrals" ],
        "summary" : "Creates a draft of a member referral",
        "description" : "${description/referrals/postReferralDraft.html}",
        "operationId" : "saveReferralDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "option",
          "in" : "query",
          "description" : "The option of which referral related screen configuration to validate against",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralConfigurationOption",
              "namespace" : "http://www.casenet.com/ReferralConfigurationOption"
            },
            "enum" : [ "SUBMITANDVIEW", "DECISION", "EVALUATION" ]
          }
        } ],
        "requestBody" : {
          "description" : "The new referral draft information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SaveReferralDraftRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralResponseLite"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-referrals/{draftReferralId}" : {
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Updates a draft of a member referral",
        "description" : "${description/referrals/updateReferralDraft.html}",
        "operationId" : "updateReferralDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftReferralId",
          "in" : "path",
          "description" : "The ID of the referral draft to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "description" : "The option of which referral related screen configuration to validate against",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralConfigurationOption",
              "namespace" : "http://www.casenet.com/ReferralConfigurationOption"
            },
            "enum" : [ "SUBMITANDVIEW", "DECISION", "EVALUATION" ]
          }
        } ],
        "requestBody" : {
          "description" : "The updated referral draft information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateReferralDraftRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10936" : {
            "description" : "${DraftViolatesDatabaseConstraint}"
          },
          "400 - 10904" : {
            "description" : "${NotEditableDraftReferralException}"
          }
        }
      },
      "post" : {
        "tags" : [ "referrals" ],
        "summary" : "Submits an existing referral draft",
        "description" : "${description/referrals/postSubmitReferralDraft.html}",
        "operationId" : "submitReferralDraft-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftReferralId",
          "in" : "path",
          "description" : "Referral ID of the draft",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "option",
          "in" : "query",
          "description" : "The option of which referral related screen configuration to validate against",
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralConfigurationOption",
              "namespace" : "http://www.casenet.com/ReferralConfigurationOption"
            },
            "enum" : [ "SUBMITANDVIEW", "DECISION", "EVALUATION" ]
          }
        } ],
        "requestBody" : {
          "description" : "The new referral draft information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateReferralRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralResponseLite"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10943" : {
            "description" : "${NotEditableReferralException}"
          }
        }
      }
    },
    "/referral-configuration" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Gets the configuration for a referral",
        "description" : "${description/referrals/getReferralConfiguration.html}",
        "operationId" : "getReferralConfiguration",
        "parameters" : [ {
          "name" : "option",
          "in" : "query",
          "description" : "The option of which referral related screen configuration to get",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralConfigurationOption",
              "namespace" : "http://www.casenet.com/ReferralConfigurationOption"
            },
            "enum" : [ "SUBMITANDVIEW", "DECISION", "EVALUATION" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralConfiguration"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/referral-configuration-v2" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Gets the configuration for a referral",
        "description" : "${description/referrals/getReferralConfiguration2.html}",
        "operationId" : "getReferralConfig",
        "parameters" : [ {
          "name" : "option",
          "in" : "query",
          "description" : "The option of which referral related screen configuration to get",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralConfigurationOption",
              "namespace" : "http://www.casenet.com/ReferralConfigurationOption"
            },
            "enum" : [ "SUBMITANDVIEW", "DECISION", "EVALUATION" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/referral-configuration-v3" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Gets the configuration for a referral",
        "description" : "${description/referrals/getReferralConfiguration3.html}",
        "operationId" : "getReferralConfig-internal",
        "parameters" : [ {
          "name" : "option",
          "in" : "query",
          "description" : "The option of which referral related screen configuration to get",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralConfigurationOption",
              "namespace" : "http://www.casenet.com/ReferralConfigurationOption"
            },
            "enum" : [ "SUBMITANDVIEW", "DECISION", "EVALUATION" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralConfiguration3"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/referrals" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Get summary of referral requests for a member",
        "description" : "${description/referrals/getReferralSummary.html}",
        "operationId" : "getReferralSummary",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReferralLite"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "referrals" ],
        "summary" : "Submit a member referral",
        "description" : "${description/referrals/postReferral.html}",
        "operationId" : "submitReferral",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new referral information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitReferralRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralResponseLite"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals/{referralId}/case" : {
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Link a member referral to a case",
        "description" : "${description/referrals/linkReferralToCase.html}",
        "operationId" : "linkReferralToCase",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The case ID to be linked",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CaseId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 11209" : {
            "description" : "${InitialAssessmentSetupNotFoundException}"
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "referrals" ],
        "summary" : "Un assign case from referral",
        "description" : "${description/referrals/removeCaseFromReferral.html}",
        "operationId" : "removeCaseFromReferral-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referralVersion",
          "in" : "query",
          "description" : "Version of the authorization",
          "required" : true,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "Version of the authorization",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "404 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10953" : {
            "description" : "${NoCaseAssociatedWithReferralException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals/{referralId}/draft-notifications" : {
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Updates a draft referral notification",
        "description" : "${description/referrals/updateDraftReferralNotification.html}",
        "operationId" : "updateDraftReferralNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "updateDraftReferralNotificationRequest" : {
                    "$ref" : "#/components/schemas/UpdateReferralNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      },
      "post" : {
        "tags" : [ "referrals" ],
        "summary" : "Saves a referral notification",
        "description" : "${description/referrals/saveReferralNotification.html}",
        "operationId" : "saveReferralNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "saveDraftReferralNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateReferralNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals/{referralId}/notifications" : {
      "post" : {
        "tags" : [ "referrals" ],
        "summary" : "Submits a referral notification",
        "description" : "${description/referrals/submitReferralNotification.html}",
        "operationId" : "submitReferralNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "submitReferralNotificationRequest" : {
                    "$ref" : "#/components/schemas/CreateReferralNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals/{referralId}/draft-notifications/{draftNotificationId}" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Get a referral draft notification",
        "description" : "${description/referrals/getDraftReferralNotification.html}",
        "operationId" : "getDraftReferralNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "draftNotificationId",
          "in" : "path",
          "description" : "The ID of the draft notification that we want to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralNotificationDetails"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 11510" : {
            "description" : "${InternalLetterArtifactException}"
          },
          "404 - 10518" : {
            "description" : "${DraftNotificationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals/{referralId}" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Retrieve a member referral",
        "description" : "${description/referrals/getReferral.html}",
        "operationId" : "getReferral",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Referral"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Update a member referral",
        "description" : "${description/referrals/updateReferral.html}",
        "operationId" : "updateReferral",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new referral information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateReferralRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10943" : {
            "description" : "${NotEditableReferralException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals/{referralId}/further-evaluation" : {
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Evaluate a member referral",
        "description" : "${description/referrals/evaluateReferral.html}",
        "operationId" : "evaluateReferral-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new referral information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FurtherReferralEvaluationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10943" : {
            "description" : "${NotEditableReferralException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals-v2" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Get summary of referral requests for a member",
        "description" : "${description/referrals/getReferralSummary2.html}",
        "operationId" : "getReferralSummary-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Start Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "length",
          "in" : "query",
          "description" : "Number of returned values",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "gotoLastPage",
          "in" : "query",
          "description" : "Indicates whether the endpoint returns the last page of results",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether the endpoint returns the last page of results",
            "default" : false
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Sort Column",
          "schema" : {
            "type" : "string",
            "description" : "Sort Column",
            "default" : "REFERRAL_REQUEST_DATE",
            "enum" : [ "REFERRAL_REQUEST_DATE", "REFERRAL_SOURCE", "REFERRAL_DECISION" ]
          }
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "Sort Type",
          "schema" : {
            "type" : "string",
            "description" : "Sort Type",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "default" : "ASC",
            "enum" : [ "ASC", "DESC" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReferralLiteSearchResults"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "referrals" ],
        "summary" : "Submit a member referral",
        "description" : "${description/referrals/postReferral2.html}",
        "operationId" : "submitReferral-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "draftReferralId",
          "in" : "query",
          "description" : "Existing draft-referral Id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new referral information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubmitReferralRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferralResponseLite"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10943" : {
            "description" : "${NotEditableReferralException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals-v2/{referralId}/case" : {
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Link a member referral to a case",
        "description" : "${description/referrals/linkReferralToCase2.html}",
        "operationId" : "linkReferralToCase_1",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request object made up of the case ID to be linked together with the next task",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkReferralToCaseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10066" : {
            "description" : "${CaseNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10601" : {
            "description" : "${CaseClosedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 11209" : {
            "description" : "${InitialAssessmentSetupNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/referrals-v2/{referralId}" : {
      "get" : {
        "tags" : [ "referrals" ],
        "summary" : "Retrieve a member referral",
        "description" : "${description/referrals/getReferral2.html}",
        "operationId" : "getReferral-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Referral2"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "referrals" ],
        "summary" : "Update a member referral",
        "description" : "${description/referrals/updateReferral2.html}",
        "operationId" : "updateReferral-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "referralId",
          "in" : "path",
          "description" : "The referral ID, obtainable from the get member referrals service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "completeReferralTask",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "description" : "Complete Referral Task",
            "default" : true
          }
        } ],
        "requestBody" : {
          "description" : "The new referral information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateReferralRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10008" : {
            "description" : "${UserNotOwnerOfTaskException}"
          },
          "400 - 10906" : {
            "description" : "${PhoneConfigurationNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10086" : {
            "description" : "${ReferralNotFoundException}"
          },
          "400 - 10943" : {
            "description" : "${NotEditableReferralException}"
          }
        }
      }
    },
    "/request-for-information-configuration" : {
      "get" : {
        "tags" : [ "requests-for-information" ],
        "summary" : "Gets the configuration to create and void requests for information",
        "description" : "${description/rfi/getRFIConfiguration.html}",
        "operationId" : "getRFIConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestForInformationConfiguration"
                }
              }
            }
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/request-for-information/{requestForInformationId}" : {
      "put" : {
        "tags" : [ "requests-for-information" ],
        "summary" : "Update a request for information (RFI)",
        "description" : "${description/rfi/editRfi.html}",
        "operationId" : "editRFI",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "requestForInformationId",
          "in" : "path",
          "description" : "The ID of the request for information to edit",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "allowForLockedAuth",
          "in" : "query",
          "description" : "Edit an RFI even for locked authorizations",
          "schema" : {
            "type" : "boolean",
            "description" : "Edit an RFI even for locked authorizations",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The edit request for the request for information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditRequestForInformationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11303" : {
            "description" : "${RequestForInformationNotFoundException}"
          },
          "400 - 11304" : {
            "description" : "${RequestForInformationAlreadyReceivedException}"
          },
          "400 - 11302" : {
            "description" : "${InvalidReceivedDateException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          }
        }
      }
    },
    "/members/{memberId}/request-for-information/{requestForInformationId}/attempts/void-info" : {
      "post" : {
        "tags" : [ "requests-for-information" ],
        "summary" : "Void an attempt on a request for information (RFIs)",
        "description" : "${description/rfi/voidRfiAttempt.html}",
        "operationId" : "voidRFIAttempt",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "requestForInformationId",
          "in" : "path",
          "description" : "The ID of the request for information",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowForLockedAuth",
          "in" : "query",
          "description" : "Create an RFI void attempt even for locked authorizations",
          "schema" : {
            "type" : "boolean",
            "description" : "Create an RFI void attempt even for locked authorizations",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Void RFI attempt request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequestBase"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11303" : {
            "description" : "${RequestForInformationNotFoundException}"
          },
          "400 - 11304" : {
            "description" : "${RequestForInformationAlreadyReceivedException}"
          },
          "400 - 11302" : {
            "description" : "${InvalidReceivedDateException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          }
        }
      }
    },
    "/members/{memberId}/request-for-information/{requestForInformationId}/attempt" : {
      "post" : {
        "tags" : [ "requests-for-information" ],
        "summary" : "Create an attempt on a request for information (RFI)",
        "description" : "${description/rfi/postRfiAttempt.html}",
        "operationId" : "createRFIAttempt",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "requestForInformationId",
          "in" : "path",
          "description" : "The ID of the request for information",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "allowForLockedAuth",
          "in" : "query",
          "description" : "Create an RFI attempt even for locked authorizations",
          "schema" : {
            "type" : "boolean",
            "description" : "Create an RFI attempt even for locked authorizations",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The new RFI attempt information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestForInformationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 11303" : {
            "description" : "${RequestForInformationNotFoundException}"
          },
          "400 - 11304" : {
            "description" : "${RequestForInformationAlreadyReceivedException}"
          },
          "400 - 11302" : {
            "description" : "${InvalidReceivedDateException}"
          },
          "400 - 10053" : {
            "description" : "${InstanceVoidedException}"
          },
          "400 - 10121" : {
            "description" : "${NotEditableLineItemException}"
          },
          "400 - 10120" : {
            "description" : "${NotEditableAuthorizationException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          }
        }
      }
    },
    "/screen-configuration/{screenName}" : {
      "get" : {
        "tags" : [ "screens" ],
        "summary" : "Get screen's configurations",
        "description" : "${description/screen-configuration/getScreenConfiguration.html}",
        "operationId" : "getScreenConfig-internal",
        "parameters" : [ {
          "name" : "screenName",
          "in" : "path",
          "description" : "The name of the screen",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScreenConfigDto"
                }
              }
            }
          },
          "404 - 10171" : {
            "description" : "${ScreenNotFoundException}"
          }
        }
      }
    },
    "/screen-configuration/option-value-sets/{optionValueSetName}" : {
      "get" : {
        "tags" : [ "screens" ],
        "summary" : "Retrieves the OptionValueSet by name",
        "description" : "${description/option-value-sets/getOptionValueSetByName.html}",
        "operationId" : "getOptionValueSetByName",
        "parameters" : [ {
          "name" : "optionValueSetName",
          "in" : "path",
          "description" : "OptionValueSet name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OptionValueSet"
                }
              }
            }
          },
          "404 - 10207" : {
            "description" : "${OptionValueSetNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-service-requests/{draftServiceRequestId}" : {
      "put" : {
        "tags" : [ "service-requests" ],
        "summary" : "Update and Save a service request request",
        "description" : "${description/service-requests/updateDraftServiceRequest.html}",
        "operationId" : "updateDraftServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftServiceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "needsReview",
          "in" : "query",
          "description" : "Indicates whether review is required and to create review task",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether review is required and to create review task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The UpdateServiceRequestRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10805" : {
            "description" : "${ServiceRequestIsNotDraftException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Submit a Service Request which is in DRAFT state for a member",
        "description" : "${description/service-requests/submitDraftServiceRequest.html}",
        "operationId" : "submitDraftServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "draftServiceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort service request submission process  in case warning message(s) is generated while validating the service request/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort service request submission process  in case warning message(s) is generated while validating the service request/line-item limits",
            "default" : false
          }
        }, {
          "name" : "needsReview",
          "in" : "query",
          "description" : "Indicates whether review is required and to create review task",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether review is required and to create review task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The UpdateServiceRequestRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10114" : {
            "description" : "${DuplicateServiceRequestException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10116" : {
            "description" : "${InvalidServiceOfferNegotiateRateException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          },
          "400 - 10115" : {
            "description" : "${InvalidModifierCodeException}"
          },
          "400 - 10119" : {
            "description" : "${InvalidServiceOfferException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10138" : {
            "description" : "${InvalidServiceRequestStatusException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10801" : {
            "description" : "${InvalidServiceRequestQuantityException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10805" : {
            "description" : "${ServiceRequestIsNotDraftException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/draft-service-requests" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Save a service request request",
        "description" : "${description/service-requests/postSaveServiceRequest.html}",
        "operationId" : "saveServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "needsReview",
          "in" : "query",
          "description" : "Indicates whether review is required and to create review task",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether review is required and to create review task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The CreateServiceRequestRequest Requesting Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          }
        }
      }
    },
    "/members/{memberId}/waiver-types" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Retrieve the waiver types for the member based on the given date",
        "description" : "${description/service-requests/getMemberWaiverTypes.html}",
        "operationId" : "getMemberWaiverTypes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "Waiver Local date: all member waiver types will be returned which are effective on this date",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OptionValue"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10164" : {
            "description" : "${InvalidLocalDateException}"
          }
        }
      }
    },
    "/members/{memberId}/service-offers/{serviceOfferId}" : {
      "get" : {
        "tags" : [ "service-offers" ],
        "summary" : "Gets the service offer by service offer id",
        "description" : "${description/service-requests/getServiceOffer.html}",
        "operationId" : "getServiceOfferByServiceOfferId",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceOfferId",
          "in" : "path",
          "description" : "The service offer Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceOffer"
                }
              }
            }
          },
          "404 - 10119" : {
            "description" : "${InvalidServiceOfferException}"
          }
        }
      }
    },
    "/service-offer-search-configuration" : {
      "get" : {
        "tags" : [ "service-offers" ],
        "summary" : "Gets the service offer search configuration",
        "description" : "${description/service-requests/getServiceOfferConfiguration.html}",
        "operationId" : "getServiceOfferConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortableConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/service-offers/search" : {
      "post" : {
        "tags" : [ "service-offers" ],
        "summary" : "Perform Service Offers Search",
        "description" : "${description/service-requests/postServiceOfferSearch.html}",
        "operationId" : "searchServiceOffers",
        "requestBody" : {
          "description" : "The search criteria for service offers",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceOfferSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceOfferSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          }
        }
      }
    },
    "/service-offers-by-location/search" : {
      "post" : {
        "tags" : [ "service-offers" ],
        "summary" : "Returns paginated services offered based on location id",
        "description" : "${description/service-requests/postServiceOfferSearchByLocationId.html}",
        "operationId" : "servicesOfferedByLocation-internal",
        "requestBody" : {
          "description" : "Location offered services request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceOffersByLocationSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceOffersByLocationPaginatedSearchResults"
                }
              }
            }
          },
          "404 - 10074" : {
            "description" : "${NotFoundException}"
          },
          "400 - 11222" : {
            "description" : "${DuplicateSortColumnException}"
          }
        }
      }
    },
    "/service-request-configuration" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the service request configuration",
        "description" : "${description/service-requests/getServiceRequestConfiguration.html}",
        "operationId" : "getServiceRequestConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/service-request-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the member's service request BHP configuration",
        "description" : "${description/service-requests/getServiceRequestBHPConfiguration.html}",
        "operationId" : "getServiceRequestBHPConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeId",
          "in" : "query",
          "description" : "The member BHP node ID, obtainable from the member header or member details. Root (parent) bhp level data displayed if null.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestBHPConfiguration"
                }
              }
            }
          },
          "404 - 10013" : {
            "description" : "${InstanceNotFoundException}"
          }
        }
      }
    },
    "/service-request-configuration/statuses" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets enabled service request determination status",
        "description" : "${description/service-requests/getEnabledSRDetermination.html}",
        "operationId" : "getEnabledServiceRequestDeterminationStatus-internal",
        "parameters" : [ {
          "name" : "requestedQuantity",
          "in" : "query",
          "description" : "The service request line item requestedQuantity",
          "required" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceRequestStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service-request-global-search" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the summary of service requests",
        "description" : "${description/service-requests/postServiceRequestGlobalSearch.html}",
        "operationId" : "serviceRequestGlobalSearch-internal",
        "requestBody" : {
          "description" : "The search criteria for service request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceRequestGlobalSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceRequestGlobalSearchResults"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service-request-header-configuration" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the service request header configuration",
        "description" : "${description/service-requests/getServiceRequestHeaderConfiguration.html}",
        "operationId" : "getServiceRequestHeaderConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestHeaderConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/service-request-lineitem-configuration" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the service request line item configuration",
        "description" : "${description/service-requests/getServiceRequestLineItemConfiguration.html}",
        "operationId" : "getServiceRequestLineItemConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node feed ID full path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestLineItemConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/service-request-provider-configuration" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Retrieves service request servicing provider",
        "description" : "${description/service-requests/getServiceRequestProviderConfiguration.html}",
        "operationId" : "getServiceRequestProviderConfiguration-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OptionValue"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Retrieves a service request",
        "description" : "${description/service-requests/getServiceRequest.html}",
        "operationId" : "getServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "service-requests" ],
        "summary" : "Submit a Service Request which is already submitted for a member",
        "description" : "${description/service-requests/updateServiceRequestSubmitted.html}",
        "operationId" : "updateServiceRequestSubmitted-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort service request submission process  in case warning message(s) is generated while validating the service request/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort service request submission process  in case warning message(s) is generated while validating the service request/line-item limits",
            "default" : false
          }
        }, {
          "name" : "needsReview",
          "in" : "query",
          "description" : "Indicates whether review is required and to create review task",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether review is required and to create review task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The UpdateServiceRequestRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10114" : {
            "description" : "${DuplicateServiceRequestException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10116" : {
            "description" : "${InvalidServiceOfferNegotiateRateException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          },
          "400 - 10115" : {
            "description" : "${InvalidModifierCodeException}"
          },
          "400 - 10119" : {
            "description" : "${InvalidServiceOfferException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10138" : {
            "description" : "${InvalidServiceRequestStatusException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10801" : {
            "description" : "${InvalidServiceRequestQuantityException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10401" : {
            "description" : "${OwnerMissingMemberPermissionException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/header" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the header of a service request",
        "description" : "${description/service-requests/getServiceRequestHeader.html}",
        "operationId" : "getServiceRequestHeader-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestHeader"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/line-items" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the line items of a service request",
        "description" : "${description/service-requests/getServiceRequestLineItems.html}",
        "operationId" : "getServiceRequestLineItems-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceRequestLineItem"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/notifications" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Retrieves service request Notifications",
        "description" : "${description/service-requests/getServiceRequestNotification.html}",
        "operationId" : "getServiceRequestNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestNotification"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Submit a service request notification",
        "description" : "${description/service-requests/postSubmitServiceReqNotification.html}",
        "operationId" : "submitServiceRequestNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "claimNotificationTask",
          "in" : "query",
          "description" : "Claims the notification task",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the notification task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "submitServiceRequestNotification" : {
                    "$ref" : "#/components/schemas/CreateServiceRequestNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10506" : {
            "description" : "${UnsupportedDeliveryMethodException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/line-items/{lineItemNumber}/void" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Voiding a service line item in service request line item",
        "description" : "${description/service-requests/postVoidServiceRequestLineItem.html}",
        "operationId" : "voidServiceRequestLineItem-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The line item version and authorization version object request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/attachments/{attachmentId}/void" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Void an attachment of the Service Request",
        "description" : "${description/service-requests/postVoidServiceRequestAttachment.html}",
        "operationId" : "voidServiceRequestAttachment-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The attachment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Void metadata",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10932" : {
            "description" : "${AttachmentNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10042" : {
            "description" : "${ServiceRequestNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/case" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Associating service request with CaseID",
        "description" : "${description/service-requests/postAssignCaseToServiceRequest.html}",
        "operationId" : "assignCaseToServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "Service Request IDs",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AssignCaseToServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10066" : {
            "description" : "${CaseNotFoundExceptionException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "service-requests" ],
        "summary" : "Remove associated case from service request",
        "description" : "${description/service-requests/deleteCaseFromServiceRequest.html}",
        "operationId" : "removeCaseFromServiceRequestRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "versionId",
          "in" : "query",
          "description" : "Version of Service Request. If no value is passed, the type will be defaulted to '0'",
          "schema" : {
            "type" : "integer",
            "description" : "Version of Service Request. If no value is passed, the type will be defaulted to '0'",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10803" : {
            "description" : "${NoCaseAssociatedWithServiceRequestException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/draft-notifications" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Save a service request notification",
        "description" : "${description/service-requests/postSaveServiceReqNotification.html}",
        "operationId" : "saveServiceRequestNotification-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "saveServiceRequestNotification" : {
                    "$ref" : "#/components/schemas/CreateServiceRequestNotificationRequest"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalLetterInfo"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "400 - 10504" : {
            "description" : "${InternalLetterRecipientCreationException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/check-procedure-codes-used" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Check if service requests procedure codes already exists for the member",
        "description" : "${description/service-requests/postCheckProcedureCodesUsed.html}",
        "operationId" : "checkProcedureCodesUsed-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The CheckProcedureCodesRequest request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckProcedureCodesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/notes" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the notes of a service request",
        "description" : "${description/service-requests/getServiceRequestNotes.html}",
        "operationId" : "getServiceRequestAuthorizationNotes-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NoteInstance"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Creates a new note for an authorization",
        "description" : "${description/service-requests/postServiceRequestNote.html}",
        "operationId" : "postServiceRequestNote-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "servicerequestVersion",
          "in" : "query",
          "description" : "The Service Request current version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "description" : "The Service Request current version",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Note request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminNoteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewNoteResponse"
                }
              }
            }
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10914" : {
            "description" : "${InvalidUriParamException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/void-info" : {
      "put" : {
        "tags" : [ "service-requests" ],
        "summary" : "Void a service request",
        "description" : "${description/service-requests/voidServiceRequest.html}",
        "operationId" : "voidServiceRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The void information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VoidRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/close-request" : {
      "put" : {
        "tags" : [ "service-requests" ],
        "summary" : "Close a service request",
        "description" : "${description/service-requests/closeServiceRequest.html}",
        "operationId" : "closeServiceRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The close request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloseServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/attachments" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the attachments of a service request",
        "description" : "${description/service-requests/getServiceRequestAttachments.html}",
        "operationId" : "getServiceRequestAttachments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The service request instance ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DocumentInfo"
                  }
                }
              }
            }
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Creates a new attachment for a service request",
        "description" : "${description/service-requests/postServiceRequestAttachments.html}",
        "operationId" : "postServiceRequestAttachments-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "metadata" : {
                    "$ref" : "#/components/schemas/DocumentInfoRequest"
                  },
                  "file" : {
                    "type" : "string",
                    "description" : "Attachment file",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "integer"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "integer"
                }
              }
            }
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10054" : {
            "description" : "${AttachmentFileException}"
          },
          "400 - 10094" : {
            "description" : "${AttachmentFileSizeException}"
          },
          "400 - 10096" : {
            "description" : "${AttachmentFileNamePatternException}"
          },
          "400 - 10095" : {
            "description" : "${AttachmentFileNameExtensionException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "400 - 10029" : {
            "description" : "${AlreadyClosedException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/reopen" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Reopen a service request",
        "description" : "${description/service-requests/postReopenServiceRequest.html}",
        "operationId" : "reopenServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "400 - 10034" : {
            "description" : "${AlreadyOpenException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Submit a service request request",
        "description" : "${description/service-requests/postServiceRequest.html}",
        "operationId" : "postServiceRequest",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort auth submission process  in case warning message(s) is generated while validating the authorization/line-item limits",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The ServiceRequest Requesting Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10114" : {
            "description" : "${DuplicateServiceRequestException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10116" : {
            "description" : "${InvalidServiceOfferNegotiateRateException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          },
          "400 - 10115" : {
            "description" : "${InvalidModifierCodeException}"
          },
          "400 - 10119" : {
            "description" : "${InvalidServiceOfferException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10138" : {
            "description" : "${InvalidServiceRequestStatusException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10801" : {
            "description" : "${InvalidServiceRequestQuantityException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/acknowledge" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Acknowledges a service request",
        "description" : "${description/service-requests/postServiceRequestAcknowledge.html}",
        "operationId" : "acknowledgeServiceRequestServicingProvider-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The List of Service Request IDs",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10903" : {
            "description" : "${AuthorizationProcessingFailedException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/servicing-provider" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the servicing provider of a service request",
        "description" : "${description/service-requests/getServiceRequestServicingProvider.html}",
        "operationId" : "getServiceRequestServicingProvider-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/line-items/{lineItemNumber}/determination-history" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets all the determination information of a service request line item",
        "description" : "${description/service-requests/getAllDetermination.html}",
        "operationId" : "getAllServiceRequestLineItemDetermination-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestDetermination"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/line-items/{lineItemNumber}/determination" : {
      "get" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the determination information of a service request line item",
        "description" : "${description/service-requests/getDetermination.html}",
        "operationId" : "getServiceRequestLineItemDetermination-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestDetermination"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          },
          "404 - 10072" : {
            "description" : "${DeterminationNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Submit determination for service request",
        "description" : "${description/service-requests/submitServiceRequestDetermination.html}",
        "operationId" : "submitServiceRequestDetermination-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lineItemNumber",
          "in" : "path",
          "description" : "The line item number",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "claimDeterminationTask",
          "in" : "query",
          "description" : "Claims the determination task if not assigned to the user",
          "schema" : {
            "type" : "boolean",
            "description" : "Claims the determination task if not assigned to the user",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Submit service request determination request detail",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceRequestDeterminationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10071" : {
            "description" : "${LineItemNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/duplicate-check" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Checks for duplicate service request",
        "description" : "${description/service-requests/postDuplicateCheck.html}",
        "operationId" : "duplicateCheck-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestToExclude",
          "in" : "query",
          "description" : "The member service request ID",
          "schema" : {
            "type" : "string",
            "description" : "The member service request ID",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The ServiceRequestDuplicateCheckRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceRequestDuplicateCheckRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRequestDuplicationCheckResult"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10119" : {
            "description" : "${InvalidServiceOfferException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/{serviceRequestId}/review/complete" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Complete the review of service request",
        "description" : "${description/service-requests/postSubmitReview.html}",
        "operationId" : "completeReview-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list or 'DEFAULT'",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "serviceRequestId",
          "in" : "path",
          "description" : "The member service request ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The CompleteServiceRequestReviewRequest object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompleteServiceRequestReviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests/total-cost" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Get the total cost of service requests",
        "description" : "${description/service-requests/postTotalCost.html}",
        "operationId" : "totalServiceCost-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The List of Service Request IDs",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TotalCostRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TotalCostResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10139" : {
            "description" : "${ServiceRequestNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests-v2" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Submit a service request request",
        "description" : "${description/service-requests/postSubmitServiceRequest.html}",
        "operationId" : "submitServiceRequest-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "rejectLimitIfWarning",
          "in" : "query",
          "description" : "Indicates whether to abort service request submission process  in case warning message(s) is generated while validating the service request/line-item limits",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether to abort service request submission process  in case warning message(s) is generated while validating the service request/line-item limits",
            "default" : false
          }
        }, {
          "name" : "needsReview",
          "in" : "query",
          "description" : "Indicates whether review is required and to create review task",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether review is required and to create review task",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The CreateServiceRequestRequest Requesting Data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateServiceRequestRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10058" : {
            "description" : "${InvalidProcedureCodeException}"
          },
          "400 - 10114" : {
            "description" : "${DuplicateServiceRequestException}"
          },
          "400 - 10150" : {
            "description" : "${InvalidRequestDateException}"
          },
          "400 - 10059" : {
            "description" : "${InvalidProviderLocationException}"
          },
          "400 - 10116" : {
            "description" : "${InvalidServiceOfferNegotiateRateException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          },
          "400 - 10115" : {
            "description" : "${InvalidModifierCodeException}"
          },
          "400 - 10119" : {
            "description" : "${InvalidServiceOfferException}"
          },
          "400 - 10068" : {
            "description" : "${EligibilityInvalidException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10138" : {
            "description" : "${InvalidServiceRequestStatusException}"
          },
          "400 - 10137" : {
            "description" : "${HCSFeatureNotAvailableForBHPException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10801" : {
            "description" : "${InvalidServiceRequestQuantityException}"
          },
          "400 - 10205" : {
            "description" : "${AuthorizationLimitExceededException}"
          },
          "400 - 10206" : {
            "description" : "${LineItemLimitExceededException}"
          }
        }
      }
    },
    "/members/{memberId}/service-requests-search" : {
      "post" : {
        "tags" : [ "service-requests" ],
        "summary" : "Gets the summary of service requests",
        "description" : "${description/service-requests/postServiceRequestSummarySearch.html}",
        "operationId" : "serviceRequestSummarySearch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list",
            "default" : "DEFAULT"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for service request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceRequestSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceRequestSearchResults"
                  }
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10118" : {
            "description" : "${InvalidServiceCodeException}"
          },
          "404 - 10138" : {
            "description" : "${InvalidServiceRequestStatusException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/portal-service-requests-search" : {
      "post" : {
        "tags" : [ "portal-service-requests-internal" ],
        "summary" : "Performs a search for service requests",
        "description" : "${description/service-requests/postServiceRequestSearch.html}",
        "operationId" : "searchServiceRequests-internal",
        "requestBody" : {
          "description" : "The search criteria for service requests",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortalServiceRequestSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalServiceRequestSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "404 - 10163" : {
            "description" : "${LocationsNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/task-search/artifacts" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Search for artifacts that can be associated with a manual task",
        "description" : "${description/tasks/searchTaskArtifacts.html}",
        "operationId" : "searchManualTaskArtifacts-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "includeClosed",
          "in" : "query",
          "description" : "Indicates whether closed artifacts are included in the results. Closed artifacts are not returned by default",
          "schema" : {
            "type" : "boolean",
            "description" : "Indicates whether closed artifacts are included in the results. Closed artifacts are not returned by default",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for tasks",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualTaskArtifactSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualTaskArtifactSearchResults"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/task-search" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Search for member's tasks",
        "description" : "${description/tasks/memberSearchTask.html}",
        "operationId" : "searchMemberTasks",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The internal member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for tasks",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberTaskSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberTaskSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          }
        }
      }
    },
    "/next-task-configuration" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Gets the next task configuration for a TC UI context",
        "description" : "${description/tasks/getNextTaskConfiguration.html}",
        "operationId" : "getNextTaskConfigurationForCurrentUser-internal",
        "parameters" : [ {
          "name" : "context",
          "in" : "query",
          "description" : "TC UI context",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "TC UI context",
            "enum" : [ "INPATIENT_AUTHORIZATION_CREATE", "SERVICE_AUTHORIZATION_CREATE", "RX_AUTHORIZATION_CREATE", "CLINICAL_REVIEW_CREATE", "ADVISOR_REVIEW_CREATE", "DETERMINATION_SUBMIT", "SERVICE_REQUEST_CREATE", "APPEAL_CREATE", "APPEAl_ADVISOR_REVIEW_CREATE", "APPEAL_CLINICAL_REVIEW_CREATE", "APPEAL_OUTCOME_CREATE", "AAG_CREATE", "AAG_CLINICAL_REVIEW_CREATE", "AAG_ADVISOR_REVIEW_CREATE", "AAG_OUTCOME_CREATE" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NextTaskConfigurationResponse"
                }
              }
            }
          },
          "400 - 11203" : {
            "description" : "${NextTaskContextNotFoundException}"
          }
        }
      }
    },
    "/next-task-configuration-v2" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Gets the next task configuration for a TC UI context",
        "description" : "${description/tasks/getNextTaskConfigurationV2.html}",
        "operationId" : "getNextTaskConfigurationForCurrentUserv2-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "TC UI context",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "TC UI context",
            "enum" : [ "ADD_REFERRAL", "EDIT_REFERRAL", "ADD_DETERMINATION", "ADD_RFI", "ADD_ATTEMPT", "ADD_INPATIENT_AUTHORIZATION", "ADD_SERVICE_AUTHORIZATION", "ADD_RX_AUTHORIZATION", "EDIT_INPATIENT_AUTHORIZATION", "EDIT_SERVICE_AUTHORIZATION", "EDIT_RX_AUTHORIZATION", "VIEW_INPATIENT_AUTHORIZATION", "VIEW_SERVICE_AUTHORIZATION", "VIEW_RX_AUTHORIZATION", "ADD_CLINICAL_REVIEW", "EDIT_CLINICAL_REVIEW", "VIEW_CLINICAL_REVIEW", "ADD_ADVISOR_REVIEW", "EDIT_ADVISOR_REVIEW", "VIEW_ADVISOR_REVIEW", "ADD_APPEAL", "EDIT_APPEAL", "VIEW_APPEAL", "ADD_APPEAL_CLINICAL_REVIEW", "EDIT_APPEAL_CLINICAL_REVIEW", "VIEW_APPEAL_CLINICAL_REVIEW", "ADD_APPEAl_ADVISOR_REVIEW", "EDIT_APPEAl_ADVISOR_REVIEW", "VIEW_APPEAl_ADVISOR_REVIEW", "ADD_APPEAl_OUTCOME", "ADD_AAG", "EDIT_AAG", "ADD_AAG_CLINICAL_REVIEW", "EDIT_AAG_CLINICAL_REVIEW", "ADD_AAG_ADVISOR_REVIEW", "EDIT_AAG_ADVISOR_REVIEW", "ADD_AAG_OUTCOME", "ADD_SERVICE_REQUEST", "EDIT_SERVICE_REQUEST", "ADD_SERVICE_REQUEST_DETERMINATION" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NextTaskConfigurationResponseV2"
                }
              }
            }
          },
          "400 - 11203" : {
            "description" : "${NextTaskContextNotFoundException}"
          }
        }
      }
    },
    "/task-configuration/queue-configuration/{queueName}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Gets the queue configuration for a task by queue name",
        "description" : "${description/tasks/getTaskQueueConfiguration.html}",
        "operationId" : "getTaskQueueConfiguration-internal",
        "parameters" : [ {
          "name" : "queueName",
          "in" : "path",
          "description" : "The queue name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueTaskBrowserConfiguration"
                }
              }
            }
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          }
        }
      }
    },
    "/task-configuration/attempt-configuration/{letterLicenseType}/{bhpNodeFeedIdFullPath}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Gets the task attempt setup information by bhp node feed full path",
        "description" : "${description/tasks/getTaskAttemptsBhpSetup.html}",
        "operationId" : "getTaskAttemptSetup-internal",
        "parameters" : [ {
          "name" : "letterLicenseType",
          "in" : "path",
          "description" : "The letter license type.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The letter license type.",
            "enum" : [ "UM", "CM" ]
          }
        }, {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "path",
          "description" : "The BHP node feed ID full path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskAttemptsBhpSetup"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/task-configuration/attempt-configuration/campaign-types" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get Campaign Types",
        "description" : "${description/tasks/getCampaignTypes.html}",
        "operationId" : "getCampaignTypeConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OptionValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task-configuration/attempt-configuration/task-attempt-types" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task Attempt types configuration",
        "description" : "${description/tasks/getTaskAttemptTypes.html}",
        "operationId" : "getTaskAttemptTypes",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskAttemptBehavior"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task-configuration/browser-configuration/{browserType}" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Gets the browser configuration for a task by browser type",
        "description" : "${description/tasks/getTaskBrowserConfiguration.html}",
        "operationId" : "getTaskBrowserConfiguration-internal",
        "parameters" : [ {
          "name" : "browserType",
          "in" : "path",
          "description" : "The task browser type.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "The task browser type",
            "enum" : [ "DEFAULT", "USER", "TEAM", "PERSONAL_QUEUE" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskBrowserConfiguration"
                }
              }
            }
          },
          "404 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/task-configuration" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get the configuration for a tasks",
        "description" : "${description/tasks/getTaskConfiguration.html}",
        "operationId" : "getTaskConfiguration_1",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/task-configuration/artifact-link-types" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get available artifact link types based on member bhp node",
        "description" : "${description/tasks/getArtifactLinkTypes.html}",
        "operationId" : "getArtifactLinkTypes-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The member BHP node Feed ID Full Path, obtainable from the member header or member details. If value is not provided, it defaults to the root node.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "xml" : {
                      "name" : "TaskLinkArtifactType",
                      "namespace" : "http://www.casenet.com/TaskLinkArtifactType"
                    },
                    "enum" : [ "INPATIENT", "SP", "RX", "CASE", "MEDICATION", "ASSESSMENT", "CARE_PLAN" ]
                  }
                }
              }
            }
          },
          "404 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/task-packages" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Returns all the active and published task packages",
        "description" : "${description/tasks/getActivePublishedTaskPackagesForCategory.html}",
        "operationId" : "getActivePublishedTaskPackagesForTaskCategory",
        "parameters" : [ {
          "name" : "taskPackageCategory",
          "in" : "query",
          "description" : "Task package search criteria",
          "required" : true,
          "schema" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPackageCategory",
              "namespace" : "http://www.casenet.com/TaskPackageCategory"
            },
            "enum" : [ "GENERIC", "HCS_ENROLLMENT_CREATE", "HCS_ENROLLMENT_EDIT", "HCS_ENROLLMENT_CLOSE", "HCS_ENROLLMENT_VOID" ]
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskPackageInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/taskdetails" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task details",
        "description" : "${description/tasks/getTasksDetails.html}",
        "operationId" : "getTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDetails"
                }
              }
            }
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Update task details",
        "description" : "${description/tasks/updateTask.html}",
        "operationId" : "updateTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The data to update the task",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Create a new task instance",
        "description" : "${description/tasks/createTask.html}",
        "operationId" : "createTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The new task data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10104" : {
            "description" : "${InvalidTaskRecurrenceLimitException}"
          },
          "400 - 10103" : {
            "description" : "${InvalidTaskRecurrenceException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10161" : {
            "description" : "${NonUniqueResultException}"
          },
          "400 - 10042" : {
            "description" : "${AuthorizationNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10025" : {
            "description" : "${AlreadyVoidedException}"
          },
          "404 - 11503" : {
            "description" : "${MedicationNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/comments" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task comments",
        "description" : "${description/tasks/getTaskComments.html}",
        "operationId" : "getTaskComments",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TaskComment"
                  }
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Create task comments",
        "description" : "${description/tasks/createTaskComments.html}",
        "operationId" : "createTaskComments",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "comments",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTaskCommentsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/completion" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Complete (close) a generic task",
        "description" : "${description/tasks/completeTask.html}",
        "operationId" : "completeGenericTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 11000" : {
            "description" : "${TaskCannotBeCompletedException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/cancellation" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Cancel a workflow task",
        "description" : "${description/tasks/cancelWorkflowTask.html}",
        "operationId" : "cancelWorkflowTask",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 11201" : {
            "description" : "${TaskCannotBeCancelledException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/taskdetails-v2" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task details",
        "description" : "${description/tasks/getTasksDetails-v2.html}",
        "operationId" : "getTaskDetailsWithManualTasks-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MemberTaskDetails"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/attempt" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Create task attempt",
        "description" : "${description/tasks/createTaskAttempt.html}",
        "operationId" : "createTaskAttempt",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "attempt",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskAttemptRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10012" : {
            "description" : "${NoteDefinitionNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "412 - 11202" : {
            "description" : "${TaskAttemptMaxAttemptsReachedException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/task-attempts-configuration" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Get task attempts configuration",
        "description" : "${description/tasks/getTaskAttemptsConfiguration.html}",
        "operationId" : "getTaskAttemptConfiguration-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Member ID retrieved from member search or member list"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskAttemptsBhpSetup"
                }
              }
            }
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/attempts" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Returns task attempts",
        "description" : "${description/tasks/getTaskAttempts.html}",
        "operationId" : "getTaskAttempts-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskAttemptResponse"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}" : {
      "put" : {
        "tags" : [ "tasks" ],
        "summary" : "Update existing task ",
        "description" : "${description/tasks/updateFullTask.html}",
        "operationId" : "updateTask-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new task data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateFullTaskRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "400 - 10104" : {
            "description" : "${InvalidTaskRecurrenceLimitException}"
          },
          "400 - 10103" : {
            "description" : "${InvalidTaskRecurrenceException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "400 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/members/{memberId}/tasks/{taskId}/history" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Returns task history",
        "description" : "${description/tasks/getTaskHistory.html}",
        "operationId" : "getTaskHistory-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "Member ID retrieved from member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "The task instance ID, obtainable from the task search",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for task history",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskLogSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskLogSearchResults"
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10046" : {
            "description" : "${TaskNotFoundException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/tasks-search-configuration" : {
      "get" : {
        "tags" : [ "tasks" ],
        "summary" : "Gets the configuration for creating a task search request",
        "description" : "${description/tasks/getTaskSearchConfiguration.html}",
        "operationId" : "getConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskSearchConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/task-search" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Search for tasks",
        "description" : "${description/tasks/searchTask.html}",
        "operationId" : "searchTasks-internal",
        "requestBody" : {
          "description" : "The Task search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/tasks-batch-action" : {
      "post" : {
        "tags" : [ "tasks" ],
        "summary" : "Update tasks with batch action",
        "description" : "${description/tasks/tasksBatchAction.html}",
        "operationId" : "tasksBatchAction-internal",
        "requestBody" : {
          "description" : "The Task Batch Action Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TasksBatchActionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TasksBatchActionResults"
                }
              }
            }
          },
          "404 - 10112" : {
            "description" : "${NoOpenTaskFoundException}"
          },
          "403 - 10003" : {
            "description" : "${UserNotInTeamException}"
          },
          "403 - 10001" : {
            "description" : "${TaskAssignmentClaimException}"
          },
          "403 - 10002" : {
            "description" : "${DcmTaskAssignmentException}"
          },
          "403 - 10000" : {
            "description" : "${TaskAlreadyAssignedException}"
          },
          "400 - 10126" : {
            "description" : "${AuthorizationLockedException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 11205" : {
            "description" : "${NoQueueOrTeamWhenTaskUnclaimedException}"
          },
          "400 - 10934" : {
            "description" : "${QueueDisabledException}"
          },
          "400 - 11207" : {
            "description" : "${TeamDisabledException}"
          },
          "400 - 11000" : {
            "description" : "${TaskCannotBeCompletedException}"
          },
          "400 - 11201" : {
            "description" : "${TaskCannotBeCancelledException}"
          },
          "400 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "400 - 11206" : {
            "description" : "${TaskCannotBeAssignedException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/teams" : {
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Returns all the teams who can access BHP node",
        "description" : "${description/teams/getTeamsWhoCanAccessBhpNode.html}",
        "operationId" : "getTeamsWhoCanAccessBhpNode",
        "parameters" : [ {
          "name" : "bhpNodeId",
          "in" : "query",
          "description" : "The BHP Node id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TeamInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/teams/{teamId}/users" : {
      "put" : {
        "tags" : [ "teams" ],
        "summary" : "Update Team users",
        "description" : "${description/teams/updateTeam.html}",
        "operationId" : "updateTeamUsers-internal",
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "Team ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Team Users Request Object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateTeamUsersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/teams/{teamId}" : {
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Return team By team Id",
        "description" : "${description/teams/getTeamByTeamId.html}",
        "operationId" : "findTeamById-internal",
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "Team ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Team"
                }
              }
            }
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          }
        }
      }
    },
    "/team-search" : {
      "post" : {
        "tags" : [ "teams" ],
        "summary" : "Search for teams",
        "description" : "${description/teams/searchTeam.html}",
        "operationId" : "searchTeams-internal",
        "requestBody" : {
          "description" : "The Team search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TeamSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/telephony/call-status/{sourcePhoneExtension}/{destinationPhoneNumber}" : {
      "get" : {
        "tags" : [ "telephony-internal" ],
        "summary" : "Retrieves the telephony call status using source phone extension and destination phone number",
        "description" : "${description/telephony/callStatus.html}",
        "operationId" : "callStatus-internal",
        "parameters" : [ {
          "name" : "sourcePhoneExtension",
          "in" : "path",
          "description" : "The source phone extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destinationPhoneNumber",
          "in" : "path",
          "description" : "The destination phone number",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephonyCallStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/telephony/hang-up" : {
      "post" : {
        "tags" : [ "telephony-internal" ],
        "summary" : "Hangs up the specified member phone number",
        "description" : "${description/telephony/telephonyHangUp.html}",
        "operationId" : "telephonyHangUp-internal",
        "requestBody" : {
          "description" : "The MemberPhoneRequest containing member ID and contact phone number ID",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberPhoneRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10026" : {
            "description" : "${ContactPhoneNumberNotFoundException}"
          }
        }
      }
    },
    "/telephony/dial" : {
      "post" : {
        "tags" : [ "telephony-internal" ],
        "summary" : "Dials the specified member phone number",
        "description" : "${description/telephony/telephonyDial.html}",
        "operationId" : "telephonyDial-internal",
        "requestBody" : {
          "description" : "The MemberPhoneRequest containing member ID and contact phone number ID",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberPhoneRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DialResponse"
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10963" : {
            "description" : "${TelephonyServiceInvalidUserPhoneException}"
          },
          "503 - 10964" : {
            "description" : "${TelephonyServiceNotAvailableException}"
          },
          "404 - 10026" : {
            "description" : "${ContactPhoneNumberNotFoundException}"
          }
        }
      }
    },
    "/time-tracking-configuration/bhp-configuration" : {
      "get" : {
        "tags" : [ "time-tracking-internal" ],
        "summary" : "Get time bhp configuration",
        "description" : "${description/timetracking/configurationBhp.html}",
        "operationId" : "ConfigurationBhp-internal",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The bhpNodeFeedIdFullPath",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeTrackingConfiguration"
                }
              }
            }
          },
          "404 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          }
        }
      }
    },
    "/time-tracking" : {
      "post" : {
        "tags" : [ "time-tracking-internal" ],
        "summary" : "Submit the Time Tracking request",
        "description" : "${description/timetracking/postTimeTracking.html}",
        "operationId" : "postTimeTracking-internal",
        "requestBody" : {
          "description" : "Time Tracking request information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTimeTrackingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/tools/resource-links/{menuId}" : {
      "get" : {
        "tags" : [ "tools-resource-links-internal" ],
        "summary" : "Redirects to a resource menu item",
        "description" : "${description/tools/redirectURIResourceLink.html}",
        "operationId" : "redirectToResourceMenu-internal",
        "parameters" : [ {
          "name" : "menuId",
          "in" : "path",
          "description" : "The menu id.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        }, {
          "name" : "memberId",
          "in" : "query",
          "description" : "Member ID retrieved from member search or member list",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "length" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "language" : {
                      "type" : "object",
                      "properties" : {
                        "language" : {
                          "type" : "string"
                        },
                        "country" : {
                          "type" : "string"
                        },
                        "displayCountry" : {
                          "type" : "string"
                        },
                        "displayLanguage" : {
                          "type" : "string"
                        },
                        "displayName" : {
                          "type" : "string"
                        },
                        "displayScript" : {
                          "type" : "string"
                        },
                        "displayVariant" : {
                          "type" : "string"
                        },
                        "extensionKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "script" : {
                          "type" : "string"
                        },
                        "unicodeLocaleAttributes" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "unicodeLocaleKeys" : {
                          "uniqueItems" : true,
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "variant" : {
                          "type" : "string"
                        }
                      }
                    },
                    "location" : {
                      "type" : "string",
                      "format" : "uri"
                    },
                    "lastModified" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "date" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "headers" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "cookies" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string"
                          },
                          "value" : {
                            "type" : "string"
                          },
                          "version" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "path" : {
                            "type" : "string"
                          },
                          "domain" : {
                            "type" : "string"
                          },
                          "comment" : {
                            "type" : "string"
                          },
                          "maxAge" : {
                            "type" : "integer",
                            "format" : "int32"
                          },
                          "expiry" : {
                            "type" : "string",
                            "format" : "date-time"
                          },
                          "secure" : {
                            "type" : "boolean"
                          },
                          "httpOnly" : {
                            "type" : "boolean"
                          }
                        }
                      }
                    },
                    "allowedMethods" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "metadata" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    },
                    "status" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "entity" : {
                      "type" : "object"
                    },
                    "links" : {
                      "uniqueItems" : true,
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string"
                          },
                          "uri" : {
                            "type" : "string",
                            "format" : "uri"
                          },
                          "params" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            }
                          },
                          "title" : {
                            "type" : "string"
                          },
                          "rel" : {
                            "type" : "string"
                          },
                          "uriBuilder" : {
                            "type" : "object"
                          },
                          "rels" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    },
                    "mediaType" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string"
                        },
                        "subtype" : {
                          "type" : "string"
                        },
                        "parameters" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          }
                        },
                        "wildcardType" : {
                          "type" : "boolean"
                        },
                        "wildcardSubtype" : {
                          "type" : "boolean"
                        }
                      }
                    },
                    "stringHeaders" : {
                      "type" : "object",
                      "properties" : {
                        "empty" : {
                          "type" : "boolean"
                        }
                      },
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "statusInfo" : {
                      "type" : "object",
                      "properties" : {
                        "statusCode" : {
                          "type" : "integer",
                          "format" : "int32"
                        },
                        "reasonPhrase" : {
                          "type" : "string"
                        },
                        "family" : {
                          "type" : "string",
                          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ]
                        }
                      }
                    },
                    "entityTag" : {
                      "type" : "object",
                      "properties" : {
                        "value" : {
                          "type" : "string"
                        },
                        "weak" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "500 - 10935" : {
            "description" : "${InvalidURIException}"
          }
        }
      }
    },
    "/tools/resource-links" : {
      "get" : {
        "tags" : [ "tools-resource-links-internal" ],
        "summary" : "Returns a list of menu links",
        "description" : "${description/tools/getResourceLinks.html}",
        "operationId" : "getResourceLinks-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ResourceLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/coach-candidate-ids-search" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Performs Coach Candidate Users Search",
        "description" : "${description/user-appointments/postCoachCandidateUsersSearch.html}",
        "operationId" : "searchCoachCandidateUsers-internal",
        "requestBody" : {
          "description" : "The Coach Candidate Users Search Criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CoachCandidateUsersSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/company-group-search" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Perform a company group search",
        "description" : "${description/users/postCompanyGroupSearch.html}",
        "operationId" : "companyGroupSearch-internal",
        "requestBody" : {
          "description" : "The company group search criteria",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanyGroupSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyGroupSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10961" : {
            "description" : "${NoAccessToCompanyGroupForUserException}"
          }
        }
      }
    },
    "/session" : {
      "put" : {
        "tags" : [ "session" ],
        "summary" : "Keep alive",
        "description" : "${description/users/putSession.html}",
        "operationId" : "keepAlive",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "session" ],
        "summary" : "Log in",
        "description" : "${description/users/postSession.html}",
        "operationId" : "login",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "session" ],
        "summary" : "Log out",
        "description" : "${description/users/deleteSession.html}",
        "operationId" : "logout",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/members/{memberId}/offline/devices/{deviceId}/offline-lock" : {
      "delete" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Remove Member Offline Lock",
        "description" : "${description/offline/removeMemberOffline.html}",
        "operationId" : "removeOfflineLock-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "path",
          "description" : "The device ID, the token for the device generated by the server",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "responses" : {
          "404 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "409 - 10916" : {
            "description" : "${MemberNotOfflineException}"
          },
          "403 - 10917" : {
            "description" : "${WrongOfflineUserException}"
          },
          "409 - 10923" : {
            "description" : "${UserOnlineException}"
          },
          "403 - 10918" : {
            "description" : "${WrongOfflineDeviceException}"
          }
        }
      }
    },
    "/members/{memberId}/offline/member-batch" : {
      "post" : {
        "tags" : [ "offline-internal" ],
        "summary" : "Retrieves a stream with the member batch data and sets the member offline",
        "description" : "${description/members/getBatchStream.html}",
        "operationId" : "getMembersBatch-internal",
        "parameters" : [ {
          "name" : "memberId",
          "in" : "path",
          "description" : "The member ID, obtainable from the member search or member list",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "memberIdType",
          "in" : "query",
          "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
          "schema" : {
            "type" : "string",
            "description" : "Type of the member ID. If no value is passed, the type will be defaulted to 'INTERNAL'",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "default" : "INTERNAL",
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MemberBatchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/appointments/configuration" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Gets the configuration for a user appointment",
        "description" : "${description/user-appointments/getUserAppointmentConfiguration.html}",
        "operationId" : "getUserAppointmentConfiguration",
        "parameters" : [ {
          "name" : "bhpNodeFeedIdFullPath",
          "in" : "query",
          "description" : "The BHP node feed ID full path.",
          "schema" : {
            "type" : "string",
            "description" : "The BHP node feed ID full path."
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAppointmentConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/appointments/available-times" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Creates the available times for the User",
        "description" : "${description/user-appointments/postAvailableTimes.html}",
        "operationId" : "postAvailableTimes-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The List of AvailableTimeRequest",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AvailableTimeListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableTimeResponse"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10037" : {
            "description" : "${JsonValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Remove all available user times",
        "description" : "${description/user-appointments/removeAllAvailableTimesForUser.html}",
        "operationId" : "removeAllAvailableTimesForUser-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/users/{username}/appointments/{appointmentId}" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update user Appointment",
        "description" : "${description/user-appointments/updateUserAppointment.html}",
        "operationId" : "updateUserAppointment-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appointmentId",
          "in" : "path",
          "description" : "The appointment Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The user appointment data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateUserAppointmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10156" : {
            "description" : "${UserAppointmentConflictException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          },
          "404 - 10978" : {
            "description" : "${AppointmentNotFoundException}"
          }
        }
      },
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Delete Appointment for User",
        "description" : "${description/user-appointments/deleteUserAppointment.html}",
        "operationId" : "deleteUserAppointment-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appointmentId",
          "in" : "path",
          "description" : "Appointment Id to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10978" : {
            "description" : "${AppointmentNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          }
        }
      }
    },
    "/users/{username}/appointments" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Create Appointment for User",
        "description" : "${description/user-appointments/addUserAppointment.html}",
        "operationId" : "addUserAppointment",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The user appointment data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAppointmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10156" : {
            "description" : "${UserAppointmentConflictException}"
          },
          "400 - 10005" : {
            "description" : "${MemberNotFoundException}"
          }
        }
      }
    },
    "/users/{username}/appointments-search" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Performs a search for user appointments",
        "description" : "${description/user-appointments/postUserAppointmentsSearch.html}",
        "operationId" : "searchUserAppointments",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The search criteria for user appointments",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppointmentSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppointmentSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/user-dashboard-configuration" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get collection of pods to display",
        "description" : "${description/users/userDashboardConfiguration.html}",
        "operationId" : "getUserDashboardConfiguration-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDashboardConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/user-profile-configuration" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Gets the configuration for user profile",
        "description" : "${description/user-profile/getUserProfileConfiguration.html}",
        "operationId" : "getUserProfileConfiguration",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProfileConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/user-profile" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get users profile information",
        "description" : "${description/user-profile/getUserProfile.html}",
        "operationId" : "getUserProfile",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activeContactInfoOnly",
          "in" : "query",
          "description" : "The flag indicates if the result should contain only active contact information (phone/emails) records",
          "schema" : {
            "type" : "boolean",
            "description" : "The flag indicates if the result should contain only active contact information (phone/emails) records",
            "default" : false
          }
        }, {
          "name" : "includeDisabled",
          "in" : "query",
          "description" : "The flag indicates to return disabled user with disabled = true flag instead of returning error",
          "schema" : {
            "type" : "boolean",
            "description" : "The flag indicates to return disabled user with disabled = true flag instead of returning error",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10155" : {
            "description" : "${UserDetailsNotFoundException}"
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update Users Profile",
        "description" : "${description/user-profile/updateUserProfile.html}",
        "operationId" : "updateUserProfile",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The user profile data",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbstractUpdateUserProfileRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10155" : {
            "description" : "${UserDetailsNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10908" : {
            "description" : "${UserTypeMismatchException}"
          }
        }
      }
    },
    "/users/{username}/user-profile/email-notifications" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get users email notifications",
        "description" : "${description/user-profile/getEmailNotifications.html}",
        "operationId" : "getEmailNotifications",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EmailNotificationResponse"
                  }
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Creates a user notification",
        "description" : "${description/user-profile/createEmailNotification.html}",
        "operationId" : "createEmailNotification",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Email notification",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailNotificationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 11401" : {
            "description" : "${EmailNotFoundException}"
          },
          "404 - 10077" : {
            "description" : "${TeamNotFoundException}"
          },
          "404 - 10083" : {
            "description" : "${QueueNotFoundException}"
          },
          "400 - 11403" : {
            "description" : "${DuplicateEmailNotificationConfigurationException}"
          }
        }
      }
    },
    "/users/{username}/user-profile/email-notifications/{emailNotificationId}" : {
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Delete an email notification",
        "description" : "${description/user-profile/deleteEmailNotification.html}",
        "operationId" : "deleteEmailNotification",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "emailNotificationId",
          "in" : "path",
          "description" : "The email notification id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 11402" : {
            "description" : "${EmailNotificationNotFoundException}"
          }
        }
      }
    },
    "/users/user-profiles" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Updates user profile of team",
        "description" : "${description/user-profile/updateUserProfiles.html}",
        "operationId" : "updateTeamUserProfiles-internal",
        "requestBody" : {
          "description" : "AbstractUpdateUserProfileRequest for users to be updated",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AbstractUpdateUserProfileRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "404 - 10155" : {
            "description" : "${UserDetailsNotFoundException}"
          },
          "400 - 10905" : {
            "description" : "${AddressConfigurationNotFoundException}"
          },
          "409 - 10024" : {
            "description" : "${OptimisticLockException}"
          },
          "400 - 10908" : {
            "description" : "${UserTypeMismatchException}"
          }
        }
      }
    },
    "/users/scheduler-search" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Performs user schedule calendar search",
        "description" : "${description/user-appointments/userScheduleSearch.html}",
        "operationId" : "searchUserSchedules-internal",
        "requestBody" : {
          "description" : "The User Schedule Calendar Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserScheduleCalendarRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserSchedule"
                  }
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/user-search" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Search for users",
        "description" : "${description/users/searchUser.html}",
        "operationId" : "searchUsers",
        "requestBody" : {
          "description" : "The search criteria for users",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSearchCriteria"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPaginatedSearchResults"
                }
              }
            }
          },
          "400 - 10022" : {
            "description" : "${ValidationException}"
          },
          "400 - 10208" : {
            "description" : "${BhpNodeNotFoundException}"
          },
          "400 - 11222" : {
            "description" : "${DuplicateSortColumnException}"
          }
        }
      }
    },
    "/user-ownership-search" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Search for users",
        "description" : "${description/users/userOwnershipSearch.html}",
        "operationId" : "searchUsers-internal",
        "requestBody" : {
          "description" : "The search criteria for users",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSearchCriteriaV2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPaginatedSearchResults"
                }
              }
            }
          }
        }
      }
    },
    "/users/current" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get the current user",
        "description" : "${description/users/getCurrentUser.html}",
        "operationId" : "getCurrentUser",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/personal-queue-users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get Users of the Personal Queue",
        "description" : "${description/users/getPersonalQueueUser.html}",
        "operationId" : "getPersonalQueueUser-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/current/quicklinks" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get the Quick Links setup for current User",
        "description" : "${description/users/getQuickLinks.html}",
        "operationId" : "getCurrentUserQuickLinks-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "xml" : {
                      "name" : "QuickLinks",
                      "namespace" : "http://www.casenet.com/QuickLinks"
                    },
                    "enum" : [ "AAG", "ALLERGIES", "ASSESSMENTS", "AUTHORIZATIONS", "BIRTH_EVENTS", "CARE_OPPORTUNITY", "CARE_PLANS", "CASES", "CLAIMS", "CONTACTS", "CORRESPONDENCE", "COST_SAVINGS", "DEMOGRAPHICS", "DIAGNOSES", "DOCUMENTS", "ELIGIBILITY_BENEFITS", "HCS_ENROLLMENT", "KEY_METRICS", "MEDICATIONS", "MEMBER_PRIVACY", "MEMBER_SUMMARY", "NOTES", "PRODUCT_FEATURES", "PROGRAMS", "QUALITY_INCIDENTS", "REFERRALS", "SCHEDULER", "TASKS" ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/permissions" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Gets the current user permissions",
        "description" : "${description/users/getUserPermissions.html}",
        "operationId" : "getLoggedUserPermissions",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPermissions"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/team-members" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Gets the current user team members. Disabled users will not be returned as part of the response.",
        "description" : "${description/users/getCurrentUserTeamMembers.html}",
        "operationId" : "getCurrentUserTeamMembers-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/artifacts/reassign" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Re Assign User Artifact Ownership",
        "description" : "${description/users/reAssignOwnership.html}",
        "operationId" : "reassignArtifactOwnership-internal",
        "requestBody" : {
          "description" : "ReAssignOwnershipRequest with artifacts & new owner information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReAssignOwnershipRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "403 - 10043" : {
            "description" : "${AccessDeniedException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/users/current/password" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update current user's password with new password",
        "description" : "${description/users/putChangePassword.html}",
        "operationId" : "changeCurrentUserPassword-internal",
        "requestBody" : {
          "description" : "The password Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400 - 10960" : {
            "description" : "${IncorrectOldPasswordException}"
          },
          "400 - 10959" : {
            "description" : "${InvalidPasswordPatternException}"
          }
        }
      }
    },
    "/users/{username}/artifacts" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "retrieve list of artifacts owned by a given user",
        "description" : "${description/users/findOpenArtifactsByOwner.html}",
        "operationId" : "findOpenArtifactsByOwner-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactType",
          "in" : "query",
          "description" : "artifactType as a query param",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "artifactType as a query param"
          }
        }, {
          "name" : "maximumResults",
          "in" : "query",
          "description" : "maximumResults as a query param",
          "schema" : {
            "type" : "integer",
            "description" : "maximumResults as a query param",
            "format" : "int64",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserArtifact"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          },
          "400 - 10056" : {
            "description" : "${BadRequestException}"
          }
        }
      }
    },
    "/users/{username}/schedule-appointment-permission" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Check Permission to create new appointment for user",
        "description" : "${description/users/userAccessToCreateAppointment.html}",
        "operationId" : "userHasAccessToScheduleEvent-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/users/saml/{username}" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Updates an existing user account from attributes provided by the SAML Assertion used during authentication",
        "description" : "${description/users/putUpdateUserAccount.html}",
        "operationId" : "updateUserAccount-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The SAML Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SamlRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/saml" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Creates a new user account from attributes provided by the SAML Assertion used during authentication",
        "description" : "${description/users/postCreateUserAccount.html}",
        "operationId" : "createUserAccount-internal",
        "requestBody" : {
          "description" : "The SAML Request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SamlRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/editable-programs" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get the editable program id list for the current user",
        "description" : "${description/users/getEditableProgramsForCurrentUser.html}",
        "operationId" : "getEditableProgramsForCurrentUser-internal",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEditableProgramsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/info" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Find user information by username",
        "description" : "${description/users/getUserInfoByUsername.html}",
        "operationId" : "getUserInfoByUsername",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activeContactInfoOnly",
          "in" : "query",
          "description" : "The flag indicates if the result should contain only active contact information (phone/emails) records",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    },
    "/users/{username}/teams" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Method to show teams associated with user name provided",
        "description" : "${description/users/getTeamsSummary.html}",
        "operationId" : "getTeamsSummary-internal",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "Username of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamSummary"
                }
              }
            }
          },
          "404 - 10045" : {
            "description" : "${UserNotFoundException}"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ServiceInformation" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "operation" : {
            "type" : "string"
          },
          "paramList" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "xml" : {
          "name" : "ServiceInformation",
          "namespace" : "http://www.casenet.com/ServiceInformation"
        }
      },
      "AagConfigurationBhpSetup" : {
        "type" : "object",
        "properties" : {
          "urgencyChangeReasonTrigger" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "AagConfigurationBhpSetup",
          "namespace" : "http://www.casenet.com/AagConfigurationBhpSetup"
        }
      },
      "AagDefinition" : {
        "type" : "object",
        "properties" : {
          "aagHeaderConfiguration" : {
            "$ref" : "#/components/schemas/AagHeaderConfiguration"
          },
          "aagRequestorConfiguration" : {
            "$ref" : "#/components/schemas/AagRequestorConfiguration"
          },
          "aagDetailsConfiguration" : {
            "$ref" : "#/components/schemas/AagDetailsConfiguration"
          },
          "aagOutcomeConfiguration" : {
            "$ref" : "#/components/schemas/AagOutcomeConfiguration"
          },
          "disabled" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AagDefinition",
          "namespace" : "http://www.casenet.com/AagDefinition"
        }
      },
      "AagDetailsConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "placeOfServices" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "serviceTypes" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "servicingProvider" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "servicingProviderSpecialties" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "aagContact" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "primaryDiagnosisCode" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "additionalDiagnosisCode" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "primaryProcedureCode" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "additionalProcedureCode" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "modifierCodes" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "datesOfService" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "incidentDate" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "disputedDate" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "requestedUnits" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "disputedUnits" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "requestedDisputedUnits" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "additionalDetails" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          }
        },
        "xml" : {
          "name" : "AagDetailsConfiguration",
          "namespace" : "http://www.casenet.com/AagDetailsConfiguration"
        }
      },
      "AagHeaderConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "aagReasons" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "aagUrgencies" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "receivedMethods" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "appealTypes" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "claimId" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "vendorId" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "aagDueDate" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "aagUrgencyChangeReasons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "aagConfigurationBhpSetup" : {
            "$ref" : "#/components/schemas/AagConfigurationBhpSetup"
          }
        },
        "xml" : {
          "name" : "AagHeaderConfiguration",
          "namespace" : "http://www.casenet.com/AagHeaderConfiguration"
        }
      },
      "AagOutcomeConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "aagOutcomes" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          }
        },
        "xml" : {
          "name" : "AagOutcomeConfiguration",
          "namespace" : "http://www.casenet.com/AagOutcomeConfiguration"
        }
      },
      "AagRequestorConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "requestSources" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          },
          "requestorTypes" : {
            "$ref" : "#/components/schemas/TailoredAagDefinitionField"
          }
        },
        "xml" : {
          "name" : "AagRequestorConfiguration",
          "namespace" : "http://www.casenet.com/AagRequestorConfiguration"
        }
      },
      "ExtendedAttributeConfigDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "defaultDomainValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "attributeDef" : {
            "$ref" : "#/components/schemas/ExtendedFieldDef"
          },
          "requiredType" : {
            "type" : "string",
            "xml" : {
              "name" : "RequiredType",
              "namespace" : "http://www.casenet.com/RequiredType"
            },
            "enum" : [ "notEditable", "required", "optional" ]
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "required" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributeConfigDto",
          "namespace" : "http://www.casenet.com/ExtendedAttributeConfigDto"
        }
      },
      "ExtendedFieldDef" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "attributeType" : {
            "type" : "string",
            "xml" : {
              "name" : "AttributeType",
              "namespace" : "http://www.casenet.com/AttributeType"
            },
            "enum" : [ "string", "number", "date", "dropdown", "lookup", "phoneNumber", "label", "radioButton", "text", "bool", "enumeration" ]
          },
          "lookupAttrType" : {
            "type" : "string",
            "xml" : {
              "name" : "LookupAttributeType",
              "namespace" : "http://www.casenet.com/LookupAttributeType"
            },
            "enum" : [ "DIAGNOSES", "PROCEDURES", "MEDICATIONS", "PROVIDERS", "ELIGIBILITIES", "LOCATIONS" ]
          },
          "attributeName" : {
            "type" : "string"
          },
          "optionValueSet" : {
            "$ref" : "#/components/schemas/OptionValueSet"
          },
          "fieldType" : {
            "type" : "string",
            "xml" : {
              "name" : "ExtendedFieldType",
              "namespace" : "http://www.casenet.com/ExtendedFieldType"
            },
            "enum" : [ "manual", "feed" ]
          }
        },
        "xml" : {
          "name" : "ExtendedFieldDef",
          "namespace" : "http://www.casenet.com/ExtendedFieldDef"
        }
      },
      "LocalDate" : {
        "type" : "object",
        "properties" : {
          "displayString" : {
            "type" : "string"
          },
          "today" : {
            "type" : "boolean"
          },
          "past" : {
            "type" : "boolean"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          },
          "future" : {
            "type" : "boolean"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ModifierCode" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "modifierCode" : {
            "type" : "string"
          },
          "modifierName" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date"
          },
          "terminationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "OptionGroupFieldConfig" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "optionValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "OptionGroupFieldConfig",
          "namespace" : "http://www.casenet.com/OptionGroupFieldConfig"
        }
      },
      "OptionValue" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "OptionValue",
          "namespace" : "http://www.casenet.com/OptionValue"
        }
      },
      "OptionValueSet" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "valueSetName" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "optionsWithDisabled" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TailoredAagDefinitionField" : {
        "type" : "object",
        "properties" : {
          "fieldDisplayed" : {
            "type" : "boolean"
          },
          "fieldRequired" : {
            "type" : "boolean"
          },
          "defaultOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "availableOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultModifierCode" : {
            "$ref" : "#/components/schemas/ModifierCode"
          },
          "modifierCodes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifierCode"
            }
          }
        },
        "xml" : {
          "name" : "TailoredAagDefinitionField",
          "namespace" : "http://www.casenet.com/TailoredAagDefinitionField"
        }
      },
      "AagSubmissionResponse" : {
        "required" : [ "aagId", "aagNumber" ],
        "type" : "object",
        "properties" : {
          "aagId" : {
            "type" : "string"
          },
          "aagNumber" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagSubmissionResponse",
          "namespace" : "http://www.casenet.com/AagSubmissionResponse"
        }
      },
      "AagActionPathRequest" : {
        "required" : [ "aagActivity", "dueDate", "priority" ],
        "type" : "object",
        "properties" : {
          "aagActivity" : {
            "type" : "string",
            "xml" : {
              "name" : "AagActivity",
              "namespace" : "http://www.casenet.com/AagActivity"
            },
            "enum" : [ "AAG_CLINICAL_REVIEW", "AAG_ADVISOR_REVIEW", "AAG_OUTCOME", "AAG_EVALUATE_ADVISOR_REVIEW" ]
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagActionPathRequest",
          "namespace" : "http://www.casenet.com/AagActionPathRequest"
        }
      },
      "AagDetailsRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "servicingProviderLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingProviderSpecialtyOption" : {
            "type" : "string"
          },
          "providerPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "aagContactName" : {
            "type" : "string"
          },
          "aagContactPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "aagDiagnosisCodeRequest" : {
            "$ref" : "#/components/schemas/AagDiagnosisCodeRequest"
          },
          "aagProcedureCodeRequest" : {
            "$ref" : "#/components/schemas/AagProcedureCodeRequest"
          },
          "incidentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "serviceFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "serviceToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "disputedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "disputedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "requestedUnits" : {
            "maximum" : 999999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "requestedUnitTypeOption" : {
            "type" : "string"
          },
          "disputedUnits" : {
            "maximum" : 999999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "disputedUnitTypeOption" : {
            "type" : "string"
          },
          "additionalDetails" : {
            "maxLength" : 2500,
            "minLength" : 0,
            "type" : "string"
          },
          "requestForInformationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagRequestForInformationRequest"
            }
          }
        },
        "xml" : {
          "name" : "AagDetailsRequest",
          "namespace" : "http://www.casenet.com/AagDetailsRequest"
        }
      },
      "AagDiagnosisCodeRequest" : {
        "type" : "object",
        "properties" : {
          "primaryDiagnosisCodeId" : {
            "$ref" : "#/components/schemas/DiagnosisCodeNaturalId"
          },
          "additionalDiagnosisCodeIdSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisCodeNaturalId"
            }
          }
        },
        "xml" : {
          "name" : "AagDiagnosisCodeRequest",
          "namespace" : "http://www.casenet.com/AagDiagnosisCodeRequest"
        }
      },
      "AagEmail" : {
        "required" : [ "emailAddress" ],
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagEmail",
          "namespace" : "http://www.casenet.com/AagEmail"
        }
      },
      "AagHeaderRequest" : {
        "required" : [ "aagOwnerUserName", "aagReasonOption", "aagReceivedDate", "aagUrgencyOption", "receivedMethodOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "trackingNumber" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "aagOwnerUserName" : {
            "type" : "string"
          },
          "aagReceivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "receivedMethodOption" : {
            "type" : "string"
          },
          "aagUrgencyOption" : {
            "type" : "string"
          },
          "aagReasonOption" : {
            "type" : "string"
          },
          "aagReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "appealTypeOption" : {
            "type" : "string"
          },
          "claimId" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "vendorId" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "aagUrgencyChangeReasonOption" : {
            "type" : "string"
          },
          "aagUrgencyChangeReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        },
        "xml" : {
          "name" : "AagHeaderRequest",
          "namespace" : "http://www.casenet.com/AagHeaderRequest"
        }
      },
      "AagProcedureCodeRequest" : {
        "type" : "object",
        "properties" : {
          "primaryProcedure" : {
            "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
          },
          "additionalProcedures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
            }
          }
        },
        "xml" : {
          "name" : "AagProcedureCodeRequest",
          "namespace" : "http://www.casenet.com/AagProcedureCodeRequest"
        }
      },
      "AagRequestForInformationRequest" : {
        "required" : [ "attemptNumber", "dateRequested", "informationRequested", "requestTypeOption" ],
        "type" : "object",
        "properties" : {
          "requestTypeOption" : {
            "type" : "string"
          },
          "attemptNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateRequested" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attendingMD" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "informationRequested" : {
            "maxLength" : 4000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "AagRequestorInfoRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestorName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "requestorTypeOption" : {
            "type" : "string"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestorAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "requestorPrimaryPhone" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestorAlternatePhone" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestorEmail" : {
            "$ref" : "#/components/schemas/AagEmail"
          },
          "requestorFax" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          }
        },
        "xml" : {
          "name" : "AagRequestorInfoRequest",
          "namespace" : "http://www.casenet.com/AagRequestorInfoRequest"
        }
      },
      "AdminNoteRequest" : {
        "required" : [ "noteDefinitionVisibleId" ],
        "type" : "object",
        "properties" : {
          "noteDefinitionVisibleId" : {
            "type" : "string"
          },
          "noteText" : {
            "maxLength" : 1000000,
            "minLength" : 0,
            "type" : "string"
          },
          "offlineCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "AdminNoteRequest",
          "namespace" : "http://www.casenet.com/AbstractNoteRequest"
        }
      },
      "AssigneeRequest" : {
        "required" : [ "assigneeName", "assigneeType" ],
        "type" : "object",
        "properties" : {
          "assigneeName" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "AssigneeType",
              "namespace" : "http://www.casenet.com/AssigneeType"
            },
            "enum" : [ "user", "queue" ]
          }
        },
        "xml" : {
          "name" : "AssigneeRequest",
          "namespace" : "http://www.casenet.com/AssigneeRequest"
        }
      },
      "AttributeValueRequestObject" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "AttributeValueRequest",
          "namespace" : "http://www.casenet.com/AttributeValueRequest"
        }
      },
      "CreateAagRequest" : {
        "required" : [ "aagTypeOption" ],
        "type" : "object",
        "properties" : {
          "aagTypeOption" : {
            "type" : "string"
          },
          "aagHeaderRequest" : {
            "$ref" : "#/components/schemas/AagHeaderRequest"
          },
          "aagRequestorInfoRequest" : {
            "$ref" : "#/components/schemas/AagRequestorInfoRequest"
          },
          "aagDetailsRequest" : {
            "$ref" : "#/components/schemas/AagDetailsRequest"
          },
          "actionPathRequest" : {
            "$ref" : "#/components/schemas/AagActionPathRequest"
          }
        },
        "xml" : {
          "name" : "CreateAagRequest",
          "namespace" : "http://www.casenet.com/CreateAagRequest"
        }
      },
      "CreateAddressRequest" : {
        "required" : [ "countryAlpha2Code" ],
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "addressLine2" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "addressLine3" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "city" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "stateOption" : {
            "type" : "string"
          },
          "stateText" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "county" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "countryText" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "countryAlpha2Code" : {
            "type" : "string"
          },
          "zipCode" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string"
          },
          "undeliverable" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CreateAddressRequest",
          "namespace" : "http://www.casenet.com/CreateAddressRequest"
        }
      },
      "DiagnosisCodeNaturalId" : {
        "required" : [ "diagnosisCode", "diagnosisCodeType" ],
        "type" : "object",
        "properties" : {
          "diagnosisCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeType",
              "namespace" : "http://www.casenet.com/DiagnosisCodeType"
            },
            "enum" : [ "ICD9", "ICD10" ]
          },
          "diagnosisCode" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "DiagnosisCodeNaturalId",
          "namespace" : "http://www.casenet.com/DiagnosisCodeNaturalId"
        }
      },
      "LocationId" : {
        "required" : [ "id", "locationIdType" ],
        "type" : "object",
        "properties" : {
          "locationIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationIdType",
              "namespace" : "http://www.casenet.com/LocationIdType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LocationId",
          "namespace" : "http://www.casenet.com/LocationId"
        }
      },
      "ModifiedProcedureCodeNaturalId" : {
        "required" : [ "procedureCode", "procedureCodeType" ],
        "type" : "object",
        "properties" : {
          "procedureCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          },
          "procedureCode" : {
            "type" : "string"
          },
          "modifierCodeNaturalIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ModifiedProcedureCodeNaturalId",
          "namespace" : "http://www.casenet.com/ModifiedProcedureCodeNaturalId"
        }
      },
      "PhoneNumber" : {
        "required" : [ "alpha2Code", "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "alpha2Code" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "phoneCountryCode" : {
            "maxLength" : 3,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "phoneNumber" : {
            "pattern" : "^[0-9]+$",
            "type" : "string"
          },
          "phoneExtension" : {
            "maxLength" : 7,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "phoneExtensionString" : {
            "type" : "string"
          },
          "phoneNumberString" : {
            "type" : "string"
          },
          "formattedPhoneNumber" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PhoneNumber",
          "namespace" : "http://www.casenet.com/PhoneNumber"
        }
      },
      "AagRequestForInformationSummary" : {
        "required" : [ "dateRequested", "informationRequested" ],
        "type" : "object",
        "properties" : {
          "requestType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "attemptNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateRequested" : {
            "type" : "string",
            "format" : "date-time"
          },
          "informationRequested" : {
            "maxLength" : 4000,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagRequestForInformationSummary",
          "namespace" : "http://www.casenet.com/AagRequestForInformationSummary"
        }
      },
      "AagReview" : {
        "required" : [ "clinicalCriteria", "id", "informationReviewed", "reviewType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "reviewType" : {
            "type" : "string",
            "xml" : {
              "name" : "AagReviewType",
              "namespace" : "http://www.casenet.com/AagReviewType"
            },
            "enum" : [ "CLINICAL_REVIEW", "ADVISOR_REVIEW" ]
          },
          "aagReviewer" : {
            "$ref" : "#/components/schemas/AagReviewer"
          },
          "reviewInitiatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerSpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "advisorReviewOutcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "advisorReviewOutcomeOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "informationReviewed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InformationReviewed"
            }
          },
          "clinicalCriteria" : {
            "type" : "string",
            "xml" : {
              "name" : "AagClinicalCriteria",
              "namespace" : "http://www.casenet.com/AagClinicalCriteria"
            },
            "enum" : [ "MANUAL" ]
          },
          "criteriaMet" : {
            "type" : "boolean"
          },
          "reviewSummary" : {
            "type" : "string"
          },
          "reviewNotes" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "requestForInformation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagRequestForInformationSummary"
            }
          },
          "aagReviewState" : {
            "type" : "string",
            "enum" : [ "DRAFT", "SUBMITTED" ]
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "AagReview",
          "namespace" : "http://www.casenet.com/AagReview"
        }
      },
      "AagReviewer" : {
        "type" : "object",
        "xml" : {
          "name" : "AagReviewer",
          "namespace" : "http://www.casenet.com/AagReviewer"
        }
      },
      "AttributeValueObject" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "ruleValue" : {
            "type" : "string"
          },
          "copy" : {
            "$ref" : "#/components/schemas/AttributeValueObject"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "InformationReviewed" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "informationReviewed" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "informationReviewedOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "InformationReviewed",
          "namespace" : "http://www.casenet.com/InformationReviewed"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "User",
          "namespace" : "http://www.casenet.com/User"
        }
      },
      "VoidInfo" : {
        "type" : "object",
        "properties" : {
          "voidDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "detail" : {
            "type" : "string"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reasonOther" : {
            "type" : "string"
          },
          "valid" : {
            "type" : "boolean"
          },
          "voidReasonTxt" : {
            "type" : "string"
          }
        }
      },
      "DocumentInfo" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "documentSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "controlNumber" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "fullFilename" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "receiptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string"
          },
          "documentFormat" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileContents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AagInformationReviewedRequest" : {
        "required" : [ "informationReviewedOption" ],
        "type" : "object",
        "properties" : {
          "informationReviewedOption" : {
            "type" : "string"
          },
          "informationReviewedOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "AagReviewRequest" : {
        "required" : [ "clinicalCriteria", "informationReviewedList", "reviewType", "reviewerSpecialtyOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reviewType" : {
            "type" : "string",
            "xml" : {
              "name" : "AagReviewType",
              "namespace" : "http://www.casenet.com/AagReviewType"
            },
            "enum" : [ "CLINICAL_REVIEW", "ADVISOR_REVIEW" ]
          },
          "aagReviewerRequest" : {
            "$ref" : "#/components/schemas/AagReviewerRequest"
          },
          "reviewInitiatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerSpecialtyOption" : {
            "type" : "string"
          },
          "advisorReviewOutcomeOption" : {
            "type" : "string"
          },
          "advisorReviewOutcomeOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "informationReviewedList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagInformationReviewedRequest"
            }
          },
          "clinicalCriteria" : {
            "type" : "string",
            "xml" : {
              "name" : "AagClinicalCriteria",
              "namespace" : "http://www.casenet.com/AagClinicalCriteria"
            },
            "enum" : [ "MANUAL" ]
          },
          "criteriaMet" : {
            "type" : "boolean"
          },
          "reviewSummary" : {
            "type" : "string"
          },
          "reviewNotes" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "requestForInformationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagRequestForInformationRequest"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "AagReviewerRequest" : {
        "type" : "object"
      },
      "CreateAAGReviewRequest" : {
        "type" : "object",
        "properties" : {
          "aagReviewRequest" : {
            "$ref" : "#/components/schemas/AagReviewRequest"
          },
          "aagActionPathRequest" : {
            "$ref" : "#/components/schemas/AagActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          }
        }
      },
      "VoidRequest2" : {
        "required" : [ "authorizedByUsername", "voidReasonOption" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "authorizedByUsername" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidRequest2",
          "namespace" : "http://www.casenet.com/VoidRequest2"
        }
      },
      "CreateAagOutcomeRequest" : {
        "type" : "object",
        "properties" : {
          "outcomeOption" : {
            "type" : "string"
          },
          "outcomeDetailOption" : {
            "type" : "string"
          },
          "outcomeDetailOther" : {
            "type" : "string"
          },
          "outcomeNote" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          },
          "aagResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationOfResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resolutionLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "notificationToOption" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "string"
          }
        }
      },
      "CompleteAagRequest" : {
        "required" : [ "aagCompleteDate" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "aagCompleteDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closureNotes" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "BaseNoteLink" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "noteInstanceId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "BaseNoteLink",
          "namespace" : "http://www.casenet.com/BaseNoteLink"
        }
      },
      "NoteComment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "narrative" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "NoteComment",
          "namespace" : "http://www.casenet.com/NoteComment"
        }
      },
      "NoteDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "lineage" : {
            "$ref" : "#/components/schemas/SimpleLineage"
          },
          "publishComment" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "resource" : {
            "$ref" : "#/components/schemas/Resource"
          },
          "resourceVersion" : {
            "$ref" : "#/components/schemas/ResourceVersion"
          },
          "visibleId" : {
            "type" : "string"
          },
          "publishable" : {
            "$ref" : "#/components/schemas/Publishable"
          },
          "userCreatable" : {
            "type" : "boolean"
          },
          "instanceCopyable" : {
            "type" : "boolean"
          },
          "definitionEditable" : {
            "type" : "boolean"
          },
          "bodyRequired" : {
            "type" : "boolean"
          },
          "noteDefinitionTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "AAG", "MEDICATION" ]
            }
          },
          "published" : {
            "type" : "boolean"
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          },
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "definitionVersion" : {
            "$ref" : "#/components/schemas/DefinitionVersion"
          },
          "definitionVersionNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "atttributeDefs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteFieldDef"
            }
          }
        }
      },
      "NoteFieldDef" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "attributeType" : {
            "type" : "string",
            "enum" : [ "string", "number", "date", "dropdown", "bool", "enumeration", "lookup", "phoneNumber", "label", "radioButton", "text" ]
          },
          "lookupAttrType" : {
            "type" : "string",
            "enum" : [ "DIAGNOSES", "PROCEDURES", "MEDICATIONS", "PROVIDERS", "BHP_NODES", "PRODUCTS", "PROGRAMS", "ASSESSMENT_METAS", "LOCATION_CODES", "ELIGIBILITIES", "LOCATIONS", "PRODUCT_FEATURE", "FEATURE_SERVICE", "TASK_ATTEMPT_BEHAVIOR" ]
          },
          "attributeName" : {
            "type" : "string"
          },
          "optionValueSet" : {
            "$ref" : "#/components/schemas/OptionValueSet"
          },
          "enumValues" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isMandatory" : {
            "type" : "boolean"
          },
          "enumClass" : {
            "$ref" : "#/components/schemas/EnumClass"
          },
          "enumClassValid" : {
            "type" : "boolean"
          },
          "optionValueSetValid" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NoteInstance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "noteDef" : {
            "$ref" : "#/components/schemas/NoteDefinition"
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteComment"
            }
          },
          "noteText" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "noteDefType" : {
            "type" : "string",
            "xml" : {
              "name" : "NoteDefinitionTypeEnum",
              "namespace" : "http://www.casenet.com/NoteDefinitionTypeEnum"
            },
            "enum" : [ "AAG", "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "MEDICATION" ]
          },
          "encounterDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "associatedNoteInstanceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "baseNoteInstanceLink" : {
            "$ref" : "#/components/schemas/BaseNoteLink"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentInfo"
            }
          },
          "canAddComment" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "NoteInstance",
          "namespace" : "http://www.casenet.com/NoteInstance"
        }
      },
      "UpdateAAGRequest" : {
        "required" : [ "aagTypeOption" ],
        "type" : "object",
        "properties" : {
          "aagTypeOption" : {
            "type" : "string"
          },
          "aagHeaderRequest" : {
            "$ref" : "#/components/schemas/AagHeaderRequest"
          },
          "aagRequestorInfoRequest" : {
            "$ref" : "#/components/schemas/AagRequestorInfoRequest"
          },
          "aagDetailsRequest" : {
            "$ref" : "#/components/schemas/AagDetailsRequest"
          },
          "actionPathRequest" : {
            "$ref" : "#/components/schemas/AagActionPathRequest"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "BaseAAGRequest",
          "namespace" : "http://www.casenet.com/BaseAAGRequest"
        }
      },
      "NewNoteResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "associatedArtifactVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "Aag" : {
        "required" : [ "aagId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "aagId" : {
            "type" : "string"
          },
          "aagHeader" : {
            "$ref" : "#/components/schemas/AagHeader"
          },
          "aagRequestorInfo" : {
            "$ref" : "#/components/schemas/AagRequestorInfo"
          },
          "aagDetails" : {
            "$ref" : "#/components/schemas/AagDetails"
          },
          "aagComplete" : {
            "$ref" : "#/components/schemas/AagComplete"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "reviews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagReviewSummary"
            }
          },
          "outcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagOutcomeSummary"
            }
          },
          "requestForInformation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagRequestForInformationSummary"
            }
          },
          "state" : {
            "type" : "string"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "aagState" : {
            "type" : "string",
            "enum" : [ "DRAFT", "SUBMITTED" ]
          }
        },
        "xml" : {
          "name" : "Aag",
          "namespace" : "http://www.casenet.com/Aag"
        }
      },
      "AagComplete" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "closedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closureNotes" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagComplete",
          "namespace" : "http://www.casenet.com/AagComplete"
        }
      },
      "AagDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "placeOfService" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "servicingProviderName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "servicingProviderId" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "servicingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "servicingProviderSpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagSpecificContactName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "aagSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "primaryDiagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCodeLite"
          },
          "additionalDiagnosisCode" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisCodeLite"
            }
          },
          "primaryProcedureCode" : {
            "$ref" : "#/components/schemas/Procedure"
          },
          "additionalProcedureCode" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Procedure"
            }
          },
          "incidentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "datesOfService" : {
            "type" : "string"
          },
          "disputedDates" : {
            "type" : "string"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedUnitType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "disputedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "disputedUnitType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "additionalDetails" : {
            "maxLength" : 2500,
            "minLength" : 0,
            "type" : "string"
          },
          "servicingProviderLocationId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagDetails",
          "namespace" : "http://www.casenet.com/AagDetails"
        }
      },
      "AagHeader" : {
        "required" : [ "aagNumber", "aagReceivedDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "aagNumber" : {
            "type" : "string"
          },
          "aagType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "aagReceivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "receivedMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagUrgencyChangeReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagUrgencyChangeReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "appealType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "claimId" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "vendorId" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "trackingNumber" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "aagOwner" : {
            "$ref" : "#/components/schemas/User"
          },
          "aagDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "aagReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagHeader",
          "namespace" : "http://www.casenet.com/AagHeader"
        }
      },
      "AagOutcomeSummary" : {
        "required" : [ "resolutionDate" ],
        "type" : "object",
        "properties" : {
          "resolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "outcomeDetail" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeDetailOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "outcomeNote" : {
            "type" : "string"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "AagOutcomeSummary",
          "namespace" : "http://www.casenet.com/AagOutcomeSummary"
        }
      },
      "AagRequestorInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "requestorType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestorName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "requestorAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "requestorPrimaryPhone" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestorSecondaryPhone" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestorFax" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestorEmail" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagRequestorInfo",
          "namespace" : "http://www.casenet.com/AagRequestorInfo"
        }
      },
      "AagReviewSummary" : {
        "required" : [ "reviewId" ],
        "type" : "object",
        "properties" : {
          "reviewId" : {
            "type" : "string"
          },
          "reviewType" : {
            "type" : "string"
          },
          "reviewInitiatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewedBy" : {
            "type" : "string"
          },
          "reviewerName" : {
            "type" : "string"
          },
          "independentReviewOrganization" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "independentReviewOrganizationOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AagReviewSummary",
          "namespace" : "http://www.casenet.com/AagReviewSummary"
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "addressLine1" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "addressLine2" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "addressLine3" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "city" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "stateText" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "county" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "country" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "countryEntity" : {
            "$ref" : "#/components/schemas/Country"
          },
          "zipCode" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string"
          },
          "undeliverable" : {
            "type" : "boolean"
          },
          "usbyZipCode" : {
            "type" : "boolean"
          },
          "addressForDisplayAsSingleLine" : {
            "type" : "string"
          },
          "canadaByZipCode" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "Address",
          "namespace" : "http://www.casenet.com/Address"
        }
      },
      "Country" : {
        "required" : [ "alpha2" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "alpha2" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "phoneCountryCode" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Country",
          "namespace" : "http://www.casenet.com/Country"
        }
      },
      "DiagnosisCodeLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "diagnosisCode" : {
            "type" : "string"
          },
          "diagnosisName" : {
            "type" : "string"
          },
          "diagnosisCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeType",
              "namespace" : "http://www.casenet.com/DiagnosisCodeType"
            },
            "enum" : [ "ICD9", "ICD10" ]
          }
        },
        "xml" : {
          "name" : "DiagnosisCodeLite",
          "namespace" : "http://www.casenet.com/DiagnosisCodeLite"
        }
      },
      "Procedure" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "procedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "modifierCodes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifierCode"
            }
          }
        },
        "xml" : {
          "name" : "Procedure",
          "namespace" : "http://www.casenet.com/Procedure"
        }
      },
      "ProcedureCode" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "procedureCode" : {
            "type" : "string"
          },
          "procedureName" : {
            "type" : "string"
          },
          "procedureDescription" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "terminationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "procedureCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          }
        },
        "xml" : {
          "name" : "ProcedureCode",
          "namespace" : "http://www.casenet.com/ProcedureCode"
        }
      },
      "DocumentInfoRequest" : {
        "required" : [ "documentSourceId", "documentTypeId", "name" ],
        "type" : "object",
        "properties" : {
          "documentSourceId" : {
            "type" : "string"
          },
          "documentTypeId" : {
            "type" : "string"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "url" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string"
          },
          "receiptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string"
          },
          "controlNumber" : {
            "maxLength" : 40,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "Metadata",
        "xml" : {
          "name" : "DocumentInfoRequest",
          "namespace" : "http://www.casenet.com/DocumentInfoRequest"
        }
      },
      "AAGNumberResponse" : {
        "type" : "object",
        "properties" : {
          "aagNumbers" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        }
      },
      "UpdateAAGReviewRequest" : {
        "type" : "object",
        "properties" : {
          "aagReviewRequest" : {
            "$ref" : "#/components/schemas/AagReviewRequest"
          },
          "aagActionPathRequest" : {
            "$ref" : "#/components/schemas/AagActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AagSearchResults" : {
        "type" : "object",
        "properties" : {
          "aagSummary" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagSummary"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AagSearchResults",
          "namespace" : "http://www.casenet.com/AagSearchResults"
        }
      },
      "AagSummary" : {
        "required" : [ "aagId", "aagNumber" ],
        "type" : "object",
        "properties" : {
          "aagId" : {
            "type" : "string"
          },
          "aagNumber" : {
            "type" : "string"
          },
          "aagReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagReasonOther" : {
            "type" : "string"
          },
          "aagType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagOutcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "aagUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "aagReceivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "aagDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rfiExists" : {
            "type" : "boolean"
          },
          "attachmentExists" : {
            "type" : "boolean"
          },
          "aagState" : {
            "type" : "string",
            "enum" : [ "DRAFT", "SUBMITTED" ]
          }
        },
        "xml" : {
          "name" : "AagSummary",
          "namespace" : "http://www.casenet.com/AagSummary"
        }
      },
      "AagSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "aagNumber" : {
            "type" : "string"
          },
          "aagType" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "fromDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "toDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "includeClosedAAGs" : {
            "type" : "boolean"
          },
          "includeVoidedAAGs" : {
            "type" : "boolean"
          },
          "aagStateCriteria" : {
            "type" : "string",
            "enum" : [ "DRAFT", "SUBMITTED", "ALL" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AagSortField"
            }
          }
        },
        "xml" : {
          "name" : "AagSearchCriteria",
          "namespace" : "http://www.casenet.com/AagSearchCriteria"
        }
      },
      "AagSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "AAG_NUMBER", "AAG_DUE_DATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "UpdateDraftAagRequest" : {
        "required" : [ "aagTypeOption" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "aagTypeOption" : {
            "type" : "string"
          },
          "aagHeaderRequest" : {
            "$ref" : "#/components/schemas/AagHeaderRequest"
          },
          "aagRequestorInfoRequest" : {
            "$ref" : "#/components/schemas/AagRequestorInfoRequest"
          },
          "aagDetailsRequest" : {
            "$ref" : "#/components/schemas/AagDetailsRequest"
          },
          "actionPathRequest" : {
            "$ref" : "#/components/schemas/AagActionPathRequest"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "BhpNode" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "feedId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PRIMARY_ENTITY", "LINE_OF_BUSINESS", "REGION", "PRODUCT", "RISK_POPULATION", "EMPLOYER", "SUB_REGION", "DIVISION", "FUNCTION" ]
          },
          "feedFullPath" : {
            "type" : "string"
          },
          "nameFullPath" : {
            "type" : "string"
          },
          "isLeaf" : {
            "type" : "boolean"
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BhpNode"
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/BhpNode"
          },
          "features" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerFeature"
            }
          },
          "programs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Program"
            }
          },
          "memberFilterGroups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberFilterGroup"
            }
          },
          "assessmentBhpSetups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentBhpSetup"
            }
          },
          "caseOpenBhpSetup" : {
            "$ref" : "#/components/schemas/CaseOpenBhpSetup"
          },
          "carePlanBhpSetup" : {
            "$ref" : "#/components/schemas/CarePlanBhpSetup"
          },
          "umTaskAttemptsBhpSetup" : {
            "$ref" : "#/components/schemas/TaskAttemptsBhpSetup"
          },
          "cmTaskAttemptsBhpSetup" : {
            "$ref" : "#/components/schemas/TaskAttemptsBhpSetup"
          },
          "messageTriggerBhpSetups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MessageTriggerBhpSetup"
            }
          },
          "correspondenceTextLogoBhpSetup" : {
            "$ref" : "#/components/schemas/CorrespondenceTextLogoBhpSetup"
          },
          "root" : {
            "type" : "boolean"
          },
          "serviceProcedureDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceProcedureDefinition"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BhpNodeLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "nameFullPath" : {
            "type" : "string"
          },
          "feedId" : {
            "type" : "string"
          },
          "feedFullPath" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "BhpNodeType",
              "namespace" : "http://www.casenet.com/BhpNodeType"
            },
            "enum" : [ "PRIMARY_ENTITY", "LINE_OF_BUSINESS", "REGION", "PRODUCT", "RISK_POPULATION", "EMPLOYER", "SUB_REGION", "DIVISION", "FUNCTION" ]
          },
          "isLeaf" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "BhpNodeLite",
          "namespace" : "http://www.casenet.com/BhpNodeLite"
        }
      },
      "CustomerFeature" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          },
          "description" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "programs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Program"
            }
          }
        }
      },
      "Program" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "feature" : {
            "$ref" : "#/components/schemas/CustomerFeature"
          },
          "programServiceLevelConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramServiceLevelConfig"
            }
          },
          "programFamily" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "mcgEnabled" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "PortableConfiguration",
          "namespace" : "http://www.casenet.com/PortableConfiguration"
        }
      },
      "AbstractAssessmentAnswerMeta" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "answer" : {
            "type" : "object"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AnswerDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "answerLabel" : {
            "type" : "string"
          },
          "answerDisplayType" : {
            "$ref" : "#/components/schemas/DisplayTypeConfiguration"
          },
          "answerDataType" : {
            "$ref" : "#/components/schemas/DataTypeConfiguration"
          },
          "numberOfColumns" : {
            "type" : "integer",
            "format" : "int32"
          },
          "orientation" : {
            "type" : "string",
            "enum" : [ "HORIZONTAL", "VERTICAL" ]
          },
          "questionDefinition" : {
            "$ref" : "#/components/schemas/QuestionDefinition"
          },
          "conditionalResponseDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractConditionalResponseDefinition"
            }
          },
          "metaOptionGroup" : {
            "$ref" : "#/components/schemas/MetaOptionGroup"
          },
          "externalAnswerDefMetadata" : {
            "$ref" : "#/components/schemas/ExternalAnswerDefMetadata"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentQuestionDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "questionDefinition" : {
            "$ref" : "#/components/schemas/QuestionDefinition"
          },
          "assessmentResponseDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentResponseDefinition"
            }
          },
          "required" : {
            "type" : "boolean"
          },
          "prePopulate" : {
            "type" : "boolean"
          },
          "triggerablesUpdateAvailable" : {
            "type" : "string",
            "enum" : [ "NO_UPDATE", "UPDATE_AVAILABLE", "UPDATE_APPLIED", "UPDATE_APPLIED_WITH_NEW_VERSION" ]
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentResponseDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "assessmentQuestionDefinition" : {
            "$ref" : "#/components/schemas/AssessmentQuestionDefinition"
          },
          "childAssessmentQuestionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinition"
            }
          },
          "conditionalAnswer" : {
            "$ref" : "#/components/schemas/AbstractAssessmentAnswerMeta"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assessmentTriggeredArtifactsDefinition" : {
            "$ref" : "#/components/schemas/AssessmentTriggeredArtifactsDefinition"
          },
          "conditionalResponseDefinition" : {
            "$ref" : "#/components/schemas/AbstractConditionalResponseDefinition"
          },
          "answerDefinition" : {
            "$ref" : "#/components/schemas/AnswerDefinition"
          },
          "additionalAnswerDataType" : {
            "type" : "string",
            "enum" : [ "INTEGER", "STRING", "DATE" ]
          },
          "additionalAnswerLabel" : {
            "type" : "string"
          },
          "selectedTriggerableAssessmentId" : {
            "type" : "string"
          },
          "hasSelectedAssmChanged" : {
            "type" : "boolean"
          },
          "updateAvailableForTriggerableAssm" : {
            "type" : "string",
            "enum" : [ "NO_UPDATE", "UPDATE_AVAILABLE", "UPDATE_APPLIED", "UPDATE_APPLIED_WITH_NEW_VERSION" ]
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MetaOption" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          },
          "detail" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "source" : {
            "type" : "string",
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "isMutuallyExclusive" : {
            "type" : "boolean"
          },
          "externalMetaOptionMetadata" : {
            "$ref" : "#/components/schemas/ExternalMetaOptionMetadata"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MetaOptionGroup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "optionGroupName" : {
            "type" : "string"
          },
          "metaOptionSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MetaOption"
            }
          },
          "source" : {
            "type" : "string",
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "QuestionDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "lineage" : {
            "$ref" : "#/components/schemas/SimpleLineage"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "source" : {
            "type" : "string",
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "publishComment" : {
            "type" : "string"
          },
          "questionText" : {
            "type" : "string"
          },
          "visibleId" : {
            "type" : "string"
          },
          "suggestRequired" : {
            "type" : "boolean"
          },
          "toolTip" : {
            "type" : "string"
          },
          "answerDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerDefinition"
            }
          },
          "externalId" : {
            "type" : "string"
          },
          "updateAvailable" : {
            "type" : "string",
            "enum" : [ "NO_UPDATE", "UPDATE_AVAILABLE", "UPDATE_APPLIED", "UPDATE_APPLIED_WITH_NEW_VERSION" ]
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "published" : {
            "type" : "boolean"
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          },
          "definitionVersion" : {
            "$ref" : "#/components/schemas/DefinitionVersion"
          },
          "definitionVersionNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "draft" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentQuestionGroupDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMeta"
          },
          "questionGroupDefinition" : {
            "$ref" : "#/components/schemas/QuestionGroupDefinition"
          },
          "externalQuestionGroupMetadata" : {
            "$ref" : "#/components/schemas/ExternalQuestionGroupMetadata"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assessmentQuestionGroupScores" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionGroupScore"
            }
          },
          "assessmentQuestionDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinition"
            }
          },
          "noteDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteDefinition"
            }
          },
          "noteDefinitionDtos" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "noteDefinitionType" : {
            "type" : "string",
            "enum" : [ "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "AAG", "MEDICATION" ]
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NoteDefinitionLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "visibleId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "displayString" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "NoteDefinitionLite",
          "namespace" : "http://www.casenet.com/NoteDefinitionLite"
        }
      },
      "QuestionGroupDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "lineage" : {
            "$ref" : "#/components/schemas/SimpleLineage"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "source" : {
            "type" : "string",
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "publishComment" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "visibleId" : {
            "type" : "string"
          },
          "questionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionDefinition"
            }
          },
          "repeatForArtifactBasedCondition" : {
            "type" : "boolean"
          },
          "conditionalAssessmentArtifactType" : {
            "type" : "string",
            "enum" : [ "MEDICATION" ]
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "published" : {
            "type" : "boolean"
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          },
          "definitionVersion" : {
            "$ref" : "#/components/schemas/DefinitionVersion"
          },
          "definitionVersionNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "draft" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentMetaLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentType",
              "namespace" : "http://www.casenet.com/AssessmentType"
            },
            "enum" : [ "INITIAL", "GENERAL", "SPECIALTY" ]
          },
          "contentVersion" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "custom" : {
            "type" : "boolean"
          },
          "resourceId" : {
            "type" : "string"
          },
          "resourceName" : {
            "type" : "string"
          },
          "conditionalAssessmentArtifactType" : {
            "type" : "string",
            "enum" : [ "MEDICATION" ]
          }
        },
        "xml" : {
          "name" : "AssessmentMetaLite",
          "namespace" : "http://www.casenet.com/AssessmentMetaLite"
        }
      },
      "ProgramFull" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "feature" : {
            "$ref" : "#/components/schemas/CustomerFeature"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "programFamily" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "programServiceLevelConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramServiceLevelConfig"
            }
          },
          "label" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "ProgramServiceLevelConfig" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "serviceLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "specializations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "taskPackages" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskPackage"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TaskPackageInfo" : {
        "type" : "object",
        "properties" : {
          "taskPackageId" : {
            "type" : "string"
          },
          "taskPackageName" : {
            "type" : "string"
          },
          "taskPackageVisibleId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TaskPackageInfo",
          "namespace" : "http://www.casenet.com/TaskPackageInfo"
        }
      },
      "AssessmentBhpSetupLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "queue" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "jbpmTaskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "assignPrimaryHealthCoach" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "TaskAttributesBhpSetup",
          "namespace" : "http://www.casenet.com/TaskAttributesBhpSetup"
        }
      },
      "Queue" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "resource" : {
            "$ref" : "#/components/schemas/Resource"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "label" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentMetaFull" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentType",
              "namespace" : "http://www.casenet.com/AssessmentType"
            },
            "enum" : [ "INITIAL", "GENERAL", "SPECIALTY" ]
          },
          "targetPublishDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "copiedFromAssmVisibleId" : {
            "type" : "string"
          },
          "highScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mediumScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resourceId" : {
            "type" : "string"
          },
          "resourceName" : {
            "type" : "string"
          },
          "assessmentQuestionGroupDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionGroupDefinitionLite"
            }
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "contentVersion" : {
            "type" : "string"
          },
          "custom" : {
            "type" : "boolean"
          },
          "duplicateQuestionMaps" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinitionListWrapper"
            }
          },
          "noteDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteDefinitionLite"
            }
          },
          "conditionalAssessmentArtifactType" : {
            "type" : "string",
            "enum" : [ "MEDICATION" ]
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "AssessmentQuestionDefinitionListWrapper" : {
        "type" : "object",
        "properties" : {
          "assessmentQuestionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinitionLite"
            }
          }
        }
      },
      "AssessmentQuestionDefinitionLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "questionDefinitionId" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "prePopulate" : {
            "type" : "boolean"
          },
          "assessmentResponseDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentResponseDefinitionLite"
            }
          },
          "displayType" : {
            "type" : "string",
            "xml" : {
              "name" : "DisplayTypeConfigurationEnum",
              "namespace" : "http://www.casenet.com/DisplayTypeConfigurationEnum"
            },
            "enum" : [ "TEXT_FIELD", "VERTICAL_RADIO_BUTTONS", "HORIZONTAL_RADIO_BUTTONS", "LABEL", "VERTICAL_CHECKBOXES", "VERTICAL_CHECKBOXES_DATES", "DROPDOWN_LIST", "DATE_FIELD_CALENDAR", "PHONE_NUMBER", "DIAGNOSIS_FIELD", "THREE_COLUMN_RADIO_BUTTONS", "THREE_COLUMN_CHECKBOXES", "TEXT_AREA", "VERTICAL_CHECKBOX_GROUP", "LINK" ]
          },
          "dataType" : {
            "type" : "string",
            "xml" : {
              "name" : "DataTypeConfigurationEnum",
              "namespace" : "http://www.casenet.com/DataTypeConfigurationEnum"
            },
            "enum" : [ "INTEGER", "STRING", "META_OPTION", "BOOLEAN", "BOOLEAN_DATE", "DATE", "DIAGNOSIS", "PHONE_NUMBER" ]
          },
          "childQuestionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinitionLite"
            }
          }
        },
        "xml" : {
          "name" : "AssessmentQuestionDefinitionLite",
          "namespace" : "http://www.casenet.com/AssessmentQuestionDefinitionLite"
        }
      },
      "AssessmentQuestionGroupDefinitionLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "questionGroup" : {
            "$ref" : "#/components/schemas/QuestionGroupLite"
          },
          "assessmentQuestionDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinitionLite"
            }
          },
          "assessmentQuestionGroupScores" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionGroupScore"
            }
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AssessmentQuestionGroupDefinitionLite",
          "namespace" : "http://www.casenet.com/AssessmentQuestionGroupDefinitionLite"
        }
      },
      "AssessmentQuestionGroupScore" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "assessmentQuestionGroup" : {
            "$ref" : "#/components/schemas/AssessmentQuestionGroupDefinition"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "scoreValue" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentResponseDefinitionLite" : {
        "type" : "object",
        "properties" : {
          "childAssessmentQuestionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionDefinitionLite"
            }
          },
          "conditionalAnswer" : {
            "$ref" : "#/components/schemas/AbstractAssessmentAnswerMeta"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "detailsDisplayed" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AssessmentResponseDefinitionLite",
          "namespace" : "http://www.casenet.com/AssessmentResponseDefinitionLite"
        }
      },
      "QuestionGroupLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "visibleId" : {
            "type" : "string"
          },
          "repeatForArtifactBasedCondition" : {
            "type" : "boolean"
          },
          "conditionalAssessmentArtifactType" : {
            "type" : "string",
            "enum" : [ "MEDICATION" ]
          }
        },
        "xml" : {
          "name" : "QuestionGroupLite",
          "namespace" : "http://www.casenet.com/QuestionGroupLite"
        }
      },
      "AssessmentLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMetaLite"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "signatureFileName" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "taskId" : {
            "type" : "string"
          },
          "taskAssigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "taskAssignee" : {
            "type" : "string"
          },
          "voidedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "voided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AssessmentLite",
          "namespace" : "http://www.casenet.com/AssessmentLite"
        }
      },
      "AssessmentSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentLite"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CnCaseLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "caseType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "contactedOn" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          }
        },
        "xml" : {
          "name" : "CnCaseLite",
          "namespace" : "http://www.casenet.com/CnCaseLite"
        }
      },
      "AssessmentSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "assessmentName" : {
            "type" : "string"
          },
          "assessmentId" : {
            "type" : "string"
          },
          "assessmentType" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentType",
              "namespace" : "http://www.casenet.com/AssessmentType"
            },
            "enum" : [ "INITIAL", "GENERAL", "SPECIALTY" ]
          },
          "caseId" : {
            "type" : "string"
          },
          "caseNameOptionValue" : {
            "type" : "string"
          },
          "assessmentStatusTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IN_PROGRESS", "COMPLETE", "VOID" ]
            }
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "AssessmentSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "ASSESSMENT_ID", "ASSESSMENT_NAME", "ASSESSMENT_TYPE", "CASE_ID", "CASE_NAME", "CASE_NUMBER", "SOURCE", "VERSION", "START_DATE", "COMPLETE_DATE", "CREATED_BY", "LAST_UPDATED_BY", "STATUS" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "AssignCaseToAssessmentRequest" : {
        "required" : [ "assessmentVersion" ],
        "type" : "object",
        "properties" : {
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "assessmentVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CaseId" : {
        "required" : [ "caseIdType", "id" ],
        "type" : "object",
        "properties" : {
          "caseIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseIdType",
              "namespace" : "http://www.casenet.com/CaseIdType"
            },
            "enum" : [ "INTERNAL_ID", "CASE_NUMBER" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CaseId",
          "namespace" : "http://www.casenet.com/CaseId"
        }
      },
      "AbstractAnswerPart" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "answerDefinitionId" : {
            "type" : "string"
          },
          "answerDetail" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string"
          },
          "answerPart" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "AbstractAnswerPart",
          "namespace" : "http://www.casenet.com/AbstractAnswerPart"
        }
      },
      "Answer" : {
        "required" : [ "answerParts", "assessmentQuestionDefinitionId" ],
        "type" : "object",
        "properties" : {
          "assessmentQuestionDefinitionId" : {
            "type" : "string"
          },
          "answerParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractAnswerPart"
            }
          },
          "answerDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "medicationId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Answer",
          "namespace" : "http://www.casenet.com/Answer"
        }
      },
      "TaskLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "assigneeName" : {
            "type" : "string"
          }
        }
      },
      "TaskAssigneeRequest" : {
        "required" : [ "assigneeName", "assigneeType" ],
        "type" : "object",
        "properties" : {
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "assigneeName" : {
            "type" : "string"
          }
        }
      },
      "ArtifactNote" : {
        "type" : "object",
        "properties" : {
          "artifactId" : {
            "type" : "string"
          },
          "artifactName" : {
            "type" : "string"
          },
          "note" : {
            "$ref" : "#/components/schemas/NoteInstance"
          }
        }
      },
      "AbstractAdditionalAnswerRequest" : {
        "type" : "object",
        "properties" : {
          "additionalAnswer" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "AbstractAdditionalAnswerRequest",
          "namespace" : "http://www.casenet.com/AbstractAdditionalAnswerRequest"
        }
      },
      "AbstractAnswerPartRequest" : {
        "type" : "object",
        "properties" : {
          "answerDefinitionId" : {
            "type" : "string"
          },
          "answerDetail" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string"
          },
          "additionalAnswer" : {
            "$ref" : "#/components/schemas/AbstractAdditionalAnswerRequest"
          },
          "answerPart" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "AbstractAnswerPartRequest",
          "namespace" : "http://www.casenet.com/AbstractAnswerPartRequest"
        }
      },
      "AnswerRequest" : {
        "type" : "object",
        "properties" : {
          "assessmentQuestionDefinitionId" : {
            "type" : "string"
          },
          "medicationId" : {
            "type" : "string"
          },
          "answerPartRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractAnswerPartRequest"
            }
          },
          "answerDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "AnswerRequest",
          "namespace" : "http://www.casenet.com/AnswerRequest"
        }
      },
      "CreateAssessmentRequest" : {
        "required" : [ "assessmentMetaId" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "answerRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerRequest"
            }
          },
          "taskId" : {
            "type" : "string"
          },
          "agreeToParticipate" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "opportunityIdentified" : {
            "type" : "boolean"
          },
          "proceedToGeneralAssessment" : {
            "type" : "boolean"
          },
          "selectedGeneralAssessmentId" : {
            "type" : "string"
          },
          "enrollMemberInProgram" : {
            "type" : "boolean"
          },
          "selectedProgramIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "signature" : {
            "type" : "string"
          },
          "offlineCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResultDto"
            }
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "offlineCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assessmentMetaId" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "CreateAssessmentRequest",
          "namespace" : "http://www.casenet.com/CreateAssessmentRequest"
        }
      },
      "QuestionGroupResultDto" : {
        "required" : [ "assessmentQuestionGroupId", "notes" ],
        "type" : "object",
        "properties" : {
          "assessmentQuestionGroupId" : {
            "type" : "string"
          },
          "notes" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        },
        "xml" : {
          "name" : "QuestionGroupResultDto",
          "namespace" : "http://www.casenet.com/QuestionGroupResultDto"
        }
      },
      "AssessmentSummary" : {
        "type" : "object",
        "properties" : {
          "assessments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentLite"
            }
          }
        },
        "xml" : {
          "name" : "AssessmentSummary",
          "namespace" : "http://www.casenet.com/AssessmentSummary"
        }
      },
      "AssessmentSummaryScreen" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/ScreenConfigDto"
          },
          "screenObject" : {
            "$ref" : "#/components/schemas/AssessmentSummary"
          },
          "specialtyTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentMetaLite"
            }
          },
          "tasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentTaskDTO"
            }
          }
        },
        "xml" : {
          "name" : "AssessmentSummaryScreen",
          "namespace" : "http://www.casenet.com/AssessmentSummaryScreen"
        }
      },
      "AssessmentTaskDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "activity" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "instanceId" : {
            "type" : "string"
          },
          "screenParameters" : {
            "$ref" : "#/components/schemas/ScreenParametersDTO"
          },
          "assignedTo" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMetaLite"
          },
          "assessmentNameText" : {
            "type" : "string"
          },
          "started" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AssessmentTaskDTO",
          "namespace" : "http://www.casenet.com/AssessmentTaskDTO"
        }
      },
      "FieldConfigDto" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "requiredType" : {
            "type" : "string",
            "xml" : {
              "name" : "RequiredType",
              "namespace" : "http://www.casenet.com/RequiredType"
            },
            "enum" : [ "notEditable", "required", "optional" ]
          },
          "fieldRequired" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "FieldConfigDto",
          "namespace" : "http://www.casenet.com/FieldConfigDto"
        }
      },
      "ScreenConfigDto" : {
        "type" : "object",
        "properties" : {
          "screenName" : {
            "type" : "string"
          },
          "sections" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SectionConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "ScreenConfigDto",
          "namespace" : "http://www.casenet.com/ScreenConfigDto"
        }
      },
      "ScreenParametersDTO" : {
        "type" : "object",
        "properties" : {
          "artifactDefId" : {
            "type" : "string"
          },
          "instanceId" : {
            "type" : "string"
          },
          "screenType" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ScreenParametersDTO",
          "namespace" : "http://www.casenet.com/ScreenParametersDTO"
        }
      },
      "SectionConfigDto" : {
        "type" : "object",
        "properties" : {
          "sectionName" : {
            "type" : "string"
          },
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FieldConfigDto"
            }
          },
          "extendedFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "SectionConfigDto",
          "namespace" : "http://www.casenet.com/SectionConfigDto"
        }
      },
      "UpdateAssessmentRequest" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "answerRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerRequest"
            }
          },
          "taskId" : {
            "type" : "string"
          },
          "agreeToParticipate" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "opportunityIdentified" : {
            "type" : "boolean"
          },
          "proceedToGeneralAssessment" : {
            "type" : "boolean"
          },
          "selectedGeneralAssessmentId" : {
            "type" : "string"
          },
          "enrollMemberInProgram" : {
            "type" : "boolean"
          },
          "selectedProgramIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "signature" : {
            "type" : "string"
          },
          "offlineCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResultDto"
            }
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateAssessmentRequest",
          "namespace" : "http://www.casenet.com/UpdateAssessmentRequest"
        }
      },
      "VoidRequest" : {
        "required" : [ "authorizedById" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "authorizedById" : {
            "type" : "string"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidReasonOptionValueId" : {
            "type" : "string"
          },
          "voidReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidRequest",
          "namespace" : "http://www.casenet.com/VoidRequest"
        }
      },
      "VoidRequestBase" : {
        "required" : [ "voidReasonOption" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidRequestBase",
          "namespace" : "http://www.casenet.com/VoidRequestBase"
        }
      },
      "CarePlanElementDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          }
        }
      },
      "CarePlanElementRecommendationArtifact" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "carePlanElementRecommendationId" : {
            "type" : "string"
          },
          "memberId" : {
            "type" : "string"
          },
          "assessmentId" : {
            "type" : "string"
          },
          "carePlanId" : {
            "type" : "string"
          },
          "carePlanElementDefinition" : {
            "$ref" : "#/components/schemas/CarePlanElementDefinition"
          },
          "carePlanElementRecommendationArtifacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CarePlanElementRecommendationArtifact"
            }
          },
          "addedToCarePlan" : {
            "type" : "boolean"
          }
        }
      },
      "IdentifiersRequest" : {
        "required" : [ "entitiesIds" ],
        "type" : "object",
        "properties" : {
          "entitiesIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AssessmentStatus" : {
        "type" : "object",
        "properties" : {
          "assessmentId" : {
            "type" : "string"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMetaLite"
          },
          "assessmentStatusType" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "COMPLETE", "VOID" ]
          }
        }
      },
      "AssessmentStatusResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentStatus"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CaseLiteResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CnCaseLite"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "AbstractAssessment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMeta"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "answers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Answer"
            }
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResult"
            }
          },
          "signatureFileName" : {
            "type" : "string"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "notes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          },
          "voidedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "voided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AbstractAssessment",
          "namespace" : "http://www.casenet.com/AbstractAssessment"
        }
      },
      "AssessmentBhpSetup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "queue" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "jbpmTaskPriority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMeta"
          },
          "assignPrimaryHealthCoach" : {
            "type" : "boolean"
          },
          "triggerArtifactId" : {
            "type" : "string"
          },
          "assessmentMetaId" : {
            "type" : "string"
          },
          "publishedActiveAssessmentMeta" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentMeta" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "lineage" : {
            "$ref" : "#/components/schemas/SimpleLineage"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "source" : {
            "type" : "string",
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "publishComment" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "INITIAL", "GENERAL", "SPECIALTY" ]
          },
          "copiedFromAssmVisibleId" : {
            "type" : "string"
          },
          "highScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mediumScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resource" : {
            "$ref" : "#/components/schemas/Resource"
          },
          "resourceVersion" : {
            "$ref" : "#/components/schemas/ResourceVersion"
          },
          "assessmentQuestionGroups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentQuestionGroupDefinition"
            }
          },
          "noteDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteDefinition"
            }
          },
          "triggerTasksWithIntervention" : {
            "type" : "boolean"
          },
          "programsRecommendedByOption" : {
            "type" : "string",
            "enum" : [ "SELECTED_PROGRAMS", "ASSSESSMENT_ANSWER_CHOICES" ]
          },
          "externalAssessmentMetadata" : {
            "$ref" : "#/components/schemas/ExternalAssessmentMetadata"
          },
          "conditionalAssessmentArtifactType" : {
            "type" : "string",
            "enum" : [ "MEDICATION" ]
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "scoreValuesOrdered" : {
            "type" : "boolean"
          },
          "deactivatedMCGAssessment" : {
            "type" : "boolean"
          },
          "allQuestions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionDefinition"
            }
          },
          "noteDefinitionType" : {
            "type" : "string",
            "enum" : [ "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "AAG", "MEDICATION" ]
          },
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "published" : {
            "type" : "boolean"
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          },
          "definitionVersion" : {
            "$ref" : "#/components/schemas/DefinitionVersion"
          },
          "definitionVersionNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "draft" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentScreen" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "config" : {
            "$ref" : "#/components/schemas/ScreenConfigDto"
          },
          "assessment" : {
            "$ref" : "#/components/schemas/AbstractAssessment"
          },
          "assessmentBhpSetups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentBhpSetup"
            }
          },
          "voidConfig" : {
            "$ref" : "#/components/schemas/VoidConfig"
          },
          "taskId" : {
            "type" : "string"
          },
          "showProgramEnrollmentSection" : {
            "type" : "boolean"
          },
          "userHasEditAccess" : {
            "type" : "boolean"
          },
          "taskAssignedToUser" : {
            "type" : "boolean"
          },
          "initialVisibleQuestions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionDefinition"
            }
          },
          "prepopulatedAnswers" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Answer"
            }
          },
          "noteDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteDefinitionLite"
            }
          }
        },
        "xml" : {
          "name" : "AssessmentScreen",
          "namespace" : "http://www.casenet.com/AssessmentScreen"
        }
      },
      "QuestionGroupResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assessmentQuestionGroupId" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          }
        },
        "xml" : {
          "name" : "QuestionGroupResult",
          "namespace" : "http://www.casenet.com/QuestionGroupResult"
        }
      },
      "VoidConfig" : {
        "type" : "object",
        "properties" : {
          "voidReasonFieldLabel" : {
            "type" : "string"
          },
          "voidReasonRequired" : {
            "type" : "boolean"
          },
          "voidReasonOptionValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultVoidReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "VoidConfig",
          "namespace" : "http://www.casenet.com/VoidConfig"
        }
      },
      "CarePlanBuilderAssessment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mcgCustom" : {
            "type" : "boolean"
          },
          "assessmentMetaId" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "mcgContentVersion" : {
            "type" : "string"
          }
        }
      },
      "AssessmentAnswerTriggeredArtifacts" : {
        "type" : "object",
        "properties" : {
          "carePlanTriggered" : {
            "type" : "boolean"
          },
          "assementTriggeredTaskDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDefinitionLite"
            }
          },
          "programTriggerableDefinitionSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramTriggerableDefinition"
            }
          },
          "taskTabWarnings" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "recommendedAssessmentMetaTaskInfo" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RecommendedAssessmentMetaTaskInfo"
            }
          },
          "problemDefinitionMCGUids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "textActionMCGUids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProgramTriggerableDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "triggeredProgram" : {
            "$ref" : "#/components/schemas/Program"
          },
          "programServiceLevelConfig" : {
            "$ref" : "#/components/schemas/ProgramServiceLevelConfig"
          },
          "triggeredTaskPackage" : {
            "$ref" : "#/components/schemas/TaskPackage"
          },
          "engagementLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "serviceLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "serviceLevelsConfigured" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "RecommendedAssessmentMetaTaskInfo" : {
        "type" : "object",
        "properties" : {
          "assessmentMetaId" : {
            "type" : "string"
          },
          "assessmentMetaName" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "assignee" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TaskAssigneeResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "TaskAssigneeResponse",
          "namespace" : "http://www.casenet.com/TaskAssigneeResponse"
        }
      },
      "TaskDefinitionLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "activity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "activityOther" : {
            "type" : "string"
          },
          "visibleId" : {
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "description" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "taskAssignee" : {
            "$ref" : "#/components/schemas/TaskAssigneeResponse"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "AbstractAssessmentRequest" : {
        "type" : "object"
      },
      "AssessmentProgramTriggerRequest" : {
        "required" : [ "programName" ],
        "type" : "object",
        "properties" : {
          "programName" : {
            "type" : "string"
          },
          "serviceLevelOption" : {
            "type" : "string"
          },
          "firstSessionTaskPackageVisibleId" : {
            "type" : "string"
          },
          "engagementLevelOption" : {
            "type" : "string"
          }
        }
      },
      "AssessmentValidateRequest" : {
        "required" : [ "assessmentMetaId" ],
        "type" : "object",
        "properties" : {
          "assessmentMetaId" : {
            "type" : "string"
          },
          "answerRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerRequest"
            }
          },
          "agreeToParticipate" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "taskId" : {
            "type" : "string"
          },
          "abstractAssessmentRequest" : {
            "$ref" : "#/components/schemas/AbstractAssessmentRequest"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResultDto"
            }
          },
          "locationId" : {
            "type" : "string"
          },
          "specialtyOptionValueID" : {
            "type" : "string"
          },
          "selectedPrograms" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentProgramTriggerRequest"
            }
          }
        }
      },
      "AssessmentSubmissionResponse" : {
        "type" : "object",
        "properties" : {
          "assessmentId" : {
            "type" : "string"
          },
          "programEnrollmentResponses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramEnrollmentResponse"
            }
          }
        }
      },
      "ProgramEnrollmentResponse" : {
        "type" : "object",
        "properties" : {
          "programEnrollmentId" : {
            "type" : "string"
          },
          "warningMessageKey" : {
            "type" : "string"
          },
          "warningMessageParameters" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AssessmentTaskTriggerRequest" : {
        "required" : [ "assigneeType", "dueDateOffset", "priority", "startDate", "visibleId" ],
        "type" : "object",
        "properties" : {
          "visibleId" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "assignee" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "CreateAssessmentTriggerRequest" : {
        "required" : [ "assessmentMetaId" ],
        "type" : "object",
        "properties" : {
          "assessmentMetaId" : {
            "type" : "string"
          },
          "answerRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerRequest"
            }
          },
          "agreeToParticipate" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "taskId" : {
            "type" : "string"
          },
          "abstractAssessmentRequest" : {
            "$ref" : "#/components/schemas/AbstractAssessmentRequest"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResultDto"
            }
          },
          "locationId" : {
            "type" : "string"
          },
          "specialtyOptionValueID" : {
            "type" : "string"
          },
          "selectedPrograms" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentProgramTriggerRequest"
            }
          },
          "selectedTasks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentTaskTriggerRequest"
            }
          },
          "selectedAssessmentMetaIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "problemDefinitionMcgUIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "textActionMcgUIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "selectedMedicationRequestIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationIdRequest"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MedicationIdRequest" : {
        "required" : [ "medicationId", "medicationVersion" ],
        "type" : "object",
        "properties" : {
          "medicationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "medicationId" : {
            "type" : "string"
          }
        }
      },
      "BaseAssessment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMetaLite"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "answers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Answer"
            }
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResult"
            }
          },
          "signatureFileName" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "COMPLETE", "VOID" ]
          },
          "taskAssignedToCurrentUser" : {
            "type" : "boolean"
          },
          "showProgramEnrollmentSection" : {
            "type" : "boolean"
          },
          "associatedProvider" : {
            "$ref" : "#/components/schemas/LocationLite"
          },
          "selectedProviderSpecialty" : {
            "$ref" : "#/components/schemas/ProviderSpecialty"
          },
          "referralSource" : {
            "$ref" : "#/components/schemas/ReferralLite"
          },
          "notes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "selectedMedications" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SelectedMedication"
            }
          },
          "voidedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "Email" : {
        "required" : [ "emailAddress" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "emailAddress" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Email",
          "namespace" : "http://www.casenet.com/Email"
        }
      },
      "GroupProvider" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "number" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "providerType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "tin" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "pin" : {
            "type" : "string"
          },
          "upin" : {
            "type" : "string"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "providesMedical" : {
            "type" : "boolean"
          },
          "providesNonMedical" : {
            "type" : "boolean"
          },
          "temporary" : {
            "type" : "boolean"
          },
          "medicareNumber" : {
            "type" : "string"
          },
          "medicaidNumber" : {
            "type" : "string"
          },
          "sourceId" : {
            "type" : "string"
          },
          "billServices" : {
            "type" : "boolean"
          },
          "providerRating" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "contactName" : {
            "type" : "string"
          },
          "additionalInformation" : {
            "type" : "string"
          },
          "languages" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "groupAffiliation" : {
            "$ref" : "#/components/schemas/GroupProvider"
          },
          "specialties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSpecialty"
            }
          },
          "sortName" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "fullname" : {
            "type" : "string"
          },
          "mostRecentlyUpdatedLocation" : {
            "$ref" : "#/components/schemas/Location"
          },
          "validAttributes" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "locationType" : {
            "type" : "string"
          },
          "tin" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "pin" : {
            "type" : "string"
          },
          "upin" : {
            "type" : "string"
          },
          "medicareNumber" : {
            "type" : "string"
          },
          "medicaidNumber" : {
            "type" : "string"
          },
          "preferred" : {
            "type" : "boolean"
          },
          "open24Hours" : {
            "type" : "boolean"
          },
          "acceptingNewPatients" : {
            "type" : "boolean"
          },
          "externalId" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "provider" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "providerGroup" : {
            "$ref" : "#/components/schemas/GroupProvider"
          },
          "providerLocationAddress" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderLocationAddress"
            }
          },
          "phones" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderEmail"
            }
          },
          "servicesProvided" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceOffer"
            }
          },
          "networkLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkLocation"
            }
          },
          "displayName" : {
            "type" : "string"
          },
          "phonesNoFax" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderPhoneNumber"
            }
          },
          "faxes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderPhoneNumber"
            }
          },
          "preferredProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/ProviderPhoneNumber"
          },
          "preferredMailingAddress" : {
            "$ref" : "#/components/schemas/ProviderLocationAddress"
          },
          "nonFaxNonBlankPhoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderPhoneNumber"
            }
          },
          "preferredServicingAddress" : {
            "$ref" : "#/components/schemas/ProviderLocationAddress"
          },
          "preferredBillingAddress" : {
            "$ref" : "#/components/schemas/ProviderLocationAddress"
          },
          "providerLocationBillingAddress" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderLocationAddress"
            }
          },
          "providerLocationServicingAddress" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderLocationAddress"
            }
          },
          "providerLocationMailingAddress" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderLocationAddress"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "validAttributes" : {
            "type" : "boolean"
          }
        }
      },
      "LocationLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "provider" : {
            "$ref" : "#/components/schemas/Provider"
          }
        },
        "xml" : {
          "name" : "LocationLite",
          "namespace" : "http://www.casenet.com/LocationLite"
        }
      },
      "PhoneNumberObject" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "phoneCountryCode" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "phoneExtension" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PhoneNumberObject",
          "namespace" : "http://www.casenet.com/PhoneNumberObject"
        }
      },
      "Provider" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "number" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "providerType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "tin" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "pin" : {
            "type" : "string"
          },
          "upin" : {
            "type" : "string"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "providesMedical" : {
            "type" : "boolean"
          },
          "providesNonMedical" : {
            "type" : "boolean"
          },
          "temporary" : {
            "type" : "boolean"
          },
          "medicareNumber" : {
            "type" : "string"
          },
          "medicaidNumber" : {
            "type" : "string"
          },
          "sourceId" : {
            "type" : "string"
          },
          "billServices" : {
            "type" : "boolean"
          },
          "providerRating" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "contactName" : {
            "type" : "string"
          },
          "additionalInformation" : {
            "type" : "string"
          },
          "languages" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Location"
            }
          },
          "groupAffiliation" : {
            "$ref" : "#/components/schemas/GroupProvider"
          },
          "specialties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSpecialty"
            }
          },
          "sortName" : {
            "type" : "string"
          },
          "fullname" : {
            "type" : "string"
          },
          "mostRecentlyUpdatedLocation" : {
            "$ref" : "#/components/schemas/Location"
          },
          "validAttributes" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProviderEmail" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "emailType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "preferredEmail" : {
            "type" : "boolean"
          },
          "preferred" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProviderLocationAddress" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "address" : {
            "$ref" : "#/components/schemas/ProviderAddress"
          },
          "preferredAddress" : {
            "type" : "boolean"
          },
          "addressType" : {
            "type" : "string",
            "enum" : [ "BILLING", "MAILING", "SERVICING" ]
          },
          "optionValueAddressType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "preferred" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProviderPhoneNumber" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "phoneType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "isFax" : {
            "type" : "boolean"
          },
          "preferredPhone" : {
            "type" : "boolean"
          },
          "preferred" : {
            "type" : "boolean"
          },
          "nonFaxNonBlankPhoneNumber" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProviderSpecialty" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "specialtyOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date"
          },
          "terminationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ReferralLite" : {
        "required" : [ "id", "requestDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "referralSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherReferralSource" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referralAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          },
          "caseLite" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "isDraft" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ReferralLite",
          "namespace" : "http://www.casenet.com/ReferralLite"
        }
      },
      "SelectedMedication" : {
        "type" : "object",
        "properties" : {
          "medicationId" : {
            "type" : "string"
          },
          "drugDescription" : {
            "type" : "string"
          },
          "medicationStatus" : {
            "type" : "string",
            "enum" : [ "OPEN", "DISCONTINUED", "VOIDED", "COMPLETED" ]
          },
          "prescribedDose" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "route" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "routeOtherDescription" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "daysSupply" : {
            "type" : "integer",
            "format" : "int32"
          },
          "filledDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "expectedRefillDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "prescriber" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "pharmacy" : {
            "$ref" : "#/components/schemas/Location"
          },
          "drugQuantity" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateAssessmentTriggerRequest" : {
        "required" : [ "assessmentMetaId", "version" ],
        "type" : "object",
        "properties" : {
          "assessmentMetaId" : {
            "type" : "string"
          },
          "answerRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnswerRequest"
            }
          },
          "agreeToParticipate" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "taskId" : {
            "type" : "string"
          },
          "abstractAssessmentRequest" : {
            "$ref" : "#/components/schemas/AbstractAssessmentRequest"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "questionGroupResults" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionGroupResultDto"
            }
          },
          "locationId" : {
            "type" : "string"
          },
          "specialtyOptionValueID" : {
            "type" : "string"
          },
          "selectedPrograms" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentProgramTriggerRequest"
            }
          },
          "selectedTasks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentTaskTriggerRequest"
            }
          },
          "selectedAssessmentMetaIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "problemDefinitionMcgUIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "textActionMcgUIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "selectedMedicationRequestIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationIdRequest"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DocumentConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "maxSizeInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minSizeInMB" : {
            "type" : "integer",
            "format" : "int32"
          },
          "documentTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "documentTypeDefault" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "voidReasonOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "voidReasonDefault" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "documentSourceOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "documentSourceDefault" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "libraryDocumentCategoryOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "allowedFileExtensions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "DocumentConfiguration",
          "namespace" : "http://www.casenet.com/DocumentConfiguration"
        }
      },
      "DocumentLibrarySearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LibraryDocumentInfo"
            }
          }
        },
        "xml" : {
          "name" : "DocumentLibrarySearchResults",
          "namespace" : "http://www.casenet.com/DocumentLibrarySearchResults"
        }
      },
      "LibraryDocumentInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "documentSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "controlNumber" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "fullFilename" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "receiptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string"
          },
          "documentFormat" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "documentName" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "expirationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "category" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "LibraryDocumentInfo",
          "namespace" : "http://www.casenet.com/DocumentInfo"
        }
      },
      "DocumentLibrarySearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "licenseFeature" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          },
          "documentName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "comment" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "filename" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "categoryOption" : {
            "type" : "string"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentLibrarySortField"
            }
          }
        },
        "xml" : {
          "name" : "DocumentLibrarySearchCriteria",
          "namespace" : "http://www.casenet.com/DocumentLibrarySearchCriteria"
        }
      },
      "DocumentLibrarySortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "DocumentLibrarySortColumn",
              "namespace" : "http://www.casenet.com/DocumentLibrarySortColumn"
            },
            "enum" : [ "DOCUMENT_ID", "DOCUMENT_NAME", "DOCUMENT_DESCRIPTION", "FILENAME", "CATEGORY" ]
          }
        },
        "xml" : {
          "name" : "DocumentLibrarySortField",
          "namespace" : "http://www.casenet.com/DocumentLibrarySortField"
        }
      },
      "StringCriteria" : {
        "type" : "object",
        "properties" : {
          "matchType" : {
            "type" : "string",
            "xml" : {
              "name" : "StringMatchType",
              "namespace" : "http://www.casenet.com/StringMatchType"
            },
            "enum" : [ "BEGINS_WITH", "CONTAINS", "EQUALS" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "StringCriteria",
          "namespace" : "http://www.casenet.com/StringCriteria"
        }
      },
      "AuthorizationGlobalSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "displayedColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationGlobalSearchDisplayedColumn"
            }
          }
        },
        "xml" : {
          "name" : "AuthorizationGlobalSearchConfiguration",
          "namespace" : "http://www.casenet.com/AuthorizationGlobalSearchConfiguration"
        }
      },
      "AuthorizationGlobalSearchDisplayedColumn" : {
        "type" : "object",
        "properties" : {
          "columnName" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizationGlobalSearchColumnName",
              "namespace" : "http://www.casenet.com/AuthorizationGlobalSearchColumnName"
            },
            "enum" : [ "AUTH_NUMBER", "TRACKING_NUMBER", "DIAGNOSIS", "REQUESTING_PROVIDER", "SERVICING_FACILITY", "SPECIALITY", "START_DATE", "END_DATE", "STATUS", "STATE", "ELIGIBILITY_GROUP", "MEMBER_GROUP", "POLICY_NUMBER", "PRODUCT", "BHP" ]
          },
          "displayWithNoAccess" : {
            "type" : "boolean"
          },
          "indexPosition" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AuthorizationGlobalSearchDisplayedColumn",
          "namespace" : "http://www.casenet.com/AuthorizationGlobalSearchDisplayedColumn"
        }
      },
      "AuthorizationGlobalSearchResults" : {
        "type" : "object",
        "properties" : {
          "displayedColumns" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationGlobalSearchColumnName",
                "namespace" : "http://www.casenet.com/AuthorizationGlobalSearchColumnName"
              },
              "enum" : [ "AUTH_NUMBER", "TRACKING_NUMBER", "DIAGNOSIS", "REQUESTING_PROVIDER", "SERVICING_FACILITY", "SPECIALITY", "START_DATE", "END_DATE", "STATUS", "STATE", "ELIGIBILITY_GROUP", "MEMBER_GROUP", "POLICY_NUMBER", "PRODUCT", "BHP" ]
            }
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationGlobalSearchRow"
            }
          }
        }
      },
      "AuthorizationGlobalSearchRow" : {
        "type" : "object",
        "properties" : {
          "authorizationNumber" : {
            "type" : "string"
          },
          "trackingNumber" : {
            "type" : "string"
          },
          "diagnosisName" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "requestingProvider" : {
            "type" : "string"
          },
          "servicingFacility" : {
            "type" : "string"
          },
          "speciality" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "memberGroup" : {
            "type" : "string"
          },
          "policyNumber" : {
            "type" : "string"
          },
          "product" : {
            "type" : "string"
          },
          "bhp" : {
            "type" : "string"
          },
          "eligibilityGroup" : {
            "type" : "string"
          },
          "canEdit" : {
            "type" : "boolean"
          },
          "canView" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "memberId" : {
            "type" : "string"
          },
          "authorizationType" : {
            "type" : "string"
          },
          "authorizationState" : {
            "type" : "string"
          },
          "open" : {
            "type" : "boolean"
          },
          "diagnosisType" : {
            "type" : "string"
          }
        }
      },
      "AuthorizationGlobalSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "authorizationNumber" : {
            "type" : "string"
          },
          "trackingNumber" : {
            "type" : "string"
          }
        }
      },
      "ClaimAcceptance" : {
        "type" : "object",
        "properties" : {
          "acceptanceStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ClaimAcceptanceStatus",
              "namespace" : "http://www.casenet.com/ClaimAcceptanceStatus"
            },
            "enum" : [ "ACCEPTED", "REJECTED" ]
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ClaimAcceptance",
          "namespace" : "http://www.casenet.com/ClaimAcceptance"
        }
      },
      "Decision" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "units" : {
            "type" : "integer",
            "format" : "int32"
          },
          "decisionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "isCurrent" : {
            "type" : "boolean"
          },
          "varianceReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "medNecessity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "stayLevelMet" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "decisionBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "claimInformation" : {
            "type" : "string"
          },
          "explanation" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "claimAcceptance" : {
            "$ref" : "#/components/schemas/ClaimAcceptance"
          }
        },
        "xml" : {
          "name" : "Decision",
          "namespace" : "http://www.casenet.com/Decision"
        }
      },
      "Determination" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "determinationDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readyForClaims" : {
            "type" : "boolean"
          },
          "unitsToDetermine" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "nextReviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "currentDecisionList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Decision"
            }
          },
          "archivedDecisionList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Decision"
            }
          }
        },
        "xml" : {
          "name" : "Determination",
          "namespace" : "http://www.casenet.com/Determination"
        }
      },
      "Eligibility" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "effectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "product" : {
            "$ref" : "#/components/schemas/Product"
          },
          "terminationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "eligibilityRelationship" : {
            "type" : "string"
          },
          "medicareEligibilityType" : {
            "type" : "string"
          },
          "eligibilityCounty" : {
            "type" : "string"
          },
          "eligibilityTermReason" : {
            "type" : "string"
          },
          "carrier" : {
            "type" : "string"
          },
          "statusCode" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "cobInd" : {
            "type" : "string"
          },
          "medicaidEligiblity" : {
            "type" : "string"
          },
          "ratingCategory" : {
            "type" : "string"
          },
          "electionType" : {
            "type" : "string"
          },
          "countyCaseNumber" : {
            "type" : "string"
          },
          "program1" : {
            "type" : "string"
          },
          "waiver1" : {
            "type" : "string"
          },
          "policyNum" : {
            "type" : "string"
          },
          "policyHolderName" : {
            "type" : "string"
          },
          "policyHolderNum" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupNumber" : {
            "type" : "string"
          },
          "coverageRank" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eligibilityType" : {
            "type" : "string",
            "xml" : {
              "name" : "EligibilityType",
              "namespace" : "http://www.casenet.com/EligibilityType"
            },
            "enum" : [ "Client", "Other" ]
          },
          "coveragePriority" : {
            "type" : "string"
          },
          "statusVoided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "Eligibility",
          "namespace" : "http://www.casenet.com/Eligibility"
        }
      },
      "LineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationId" : {
            "type" : "string"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "clinicalReviewRequired" : {
            "type" : "boolean"
          },
          "advisorReviewRequired" : {
            "type" : "boolean"
          },
          "extension" : {
            "type" : "boolean"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lineItemType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appliedEligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "determinationDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "recommendedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determination" : {
            "$ref" : "#/components/schemas/Determination"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "breAutoApprovable" : {
            "type" : "boolean"
          },
          "productFeatureExternalIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "LineItem",
          "namespace" : "http://www.casenet.com/LineItem"
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "productCategory" : {
            "$ref" : "#/components/schemas/ProductCategory"
          },
          "productName" : {
            "type" : "string"
          },
          "productContractYear" : {
            "type" : "string"
          },
          "externalProductId" : {
            "type" : "string"
          },
          "productNetworkSets" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductNetworkSet"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProductCategory" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "productCategoryDesc" : {
            "type" : "string"
          },
          "productCategoryCode" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SimpleAttributeValueObject" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "SimpleAttributeValue",
          "namespace" : "http://www.casenet.com/SimpleAttributeValue"
        }
      },
      "AuthorizationLineItemReview" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "reviewNotes" : {
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "innerReview" : {
            "$ref" : "#/components/schemas/BaseInnerReview"
          },
          "reviewDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "internalReview" : {
            "type" : "boolean"
          },
          "reviewedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "externalReviewer" : {
            "type" : "string"
          },
          "method" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "specialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "peerToPeerDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "infoSourceSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "eligibilityBenefitVerified" : {
            "type" : "boolean"
          },
          "reviewType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemReviewType",
              "namespace" : "http://www.casenet.com/UMLineItemReviewType"
            },
            "enum" : [ "CLINICAL", "ADVISOR" ]
          },
          "reviewReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "administrativeDenial" : {
            "type" : "boolean"
          },
          "lineItemList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemLite"
            }
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "isDraft" : {
            "type" : "boolean"
          },
          "canBeSaved" : {
            "type" : "boolean"
          },
          "canBeSubmitted" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "AuthorizationLineItemReview",
          "namespace" : "http://www.casenet.com/AuthorizationLineItemReview"
        }
      },
      "BaseInnerReview" : {
        "type" : "object",
        "properties" : {
          "reviewSummary" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "BaseInnerReview",
          "namespace" : "http://www.casenet.com/BaseInnerReview"
        }
      },
      "LineItemLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "LineItemLite",
          "namespace" : "http://www.casenet.com/LineItemLite"
        }
      },
      "LineItemReviewSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationLineItemReview"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "Authorization" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItem"
            }
          },
          "authorizationHeader" : {
            "$ref" : "#/components/schemas/AuthorizationHeader"
          }
        },
        "xml" : {
          "name" : "Authorization",
          "namespace" : "http://www.casenet.com/Authorization"
        }
      },
      "AuthorizationDiagnosis" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AuthorizationDiagnosis",
          "namespace" : "http://www.casenet.com/AuthorizationDiagnosis"
        }
      },
      "AuthorizationHeader" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "stateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canBeDenied" : {
            "type" : "boolean"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "requestSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "caseId" : {
            "type" : "string"
          },
          "authorizationLocks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lock"
            }
          },
          "authorizationDiagnosis" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosis"
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/RequestingProvider"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "appealed" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AuthorizationHeader",
          "namespace" : "http://www.casenet.com/AuthorizationHeader"
        }
      },
      "AuthorizationLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "provider" : {
            "$ref" : "#/components/schemas/AuthorizationProvider"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "AuthorizationLocation",
          "namespace" : "http://www.casenet.com/AuthorizationLocation"
        }
      },
      "AuthorizationProvider" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "providerNumber" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "groupAffiliation" : {
            "$ref" : "#/components/schemas/AuthorizationProvider"
          }
        },
        "xml" : {
          "name" : "AuthorizationProvider",
          "namespace" : "http://www.casenet.com/AuthorizationProvider"
        }
      },
      "Lock" : {
        "required" : [ "lockState" ],
        "type" : "object",
        "properties" : {
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "lockReason" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "Lock",
          "namespace" : "http://www.casenet.com/Lock"
        }
      },
      "PhoneAndExtension" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "phoneCountryCode" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "phoneExtension" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PhoneAndExtension",
          "namespace" : "http://www.casenet.com/PhoneAndExtension"
        }
      },
      "RequestingProvider" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "type" : "string"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactPhoneExtension" : {
            "type" : "string"
          },
          "authSpecificContactFax" : {
            "type" : "string"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "requestingProviderSpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestingProviderSpecialtyEffectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "requestingProviderSpecialtyTerminationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "requestingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "requestingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "inNetwork" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "RequestingProvider",
          "namespace" : "http://www.casenet.com/RequestingProvider"
        }
      },
      "RequestForInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "attempts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestForInformationAttempt"
            }
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "requestForInformationSystemType" : {
            "type" : "string",
            "xml" : {
              "name" : "RequestForInformationSystemType",
              "namespace" : "http://www.casenet.com/RequestForInformationSystemType"
            },
            "enum" : [ "LINE_ITEM" ]
          },
          "requestedForIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "RequestForInformation",
          "namespace" : "http://www.casenet.com/RequestForInformation"
        }
      },
      "RequestForInformationAttempt" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attemptNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateAttempted" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attemptingProviderName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "faxNumber" : {
            "type" : "string"
          },
          "phoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "faxNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "additionalInfoRequested" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "attemptedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "RequestForInformationAttempt",
          "namespace" : "http://www.casenet.com/RequestForInformationAttempt"
        }
      },
      "LineItemPaginatedResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItem"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "AppealGlobalOutcome" : {
        "type" : "object",
        "properties" : {
          "completionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeDetail" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeOther" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AppealGlobalOutcome",
          "namespace" : "http://www.casenet.com/AppealGlobalOutcome"
        }
      },
      "AppealSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "appealNumber" : {
            "type" : "string"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "appealReceivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "appealDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "appealUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appealReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appealReasonOther" : {
            "type" : "string"
          },
          "appealType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "globalOutcome" : {
            "$ref" : "#/components/schemas/AppealGlobalOutcome"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "appealLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lineItemList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemWithAppealStatus"
            }
          },
          "appealOutcome" : {
            "type" : "string"
          },
          "appealClosedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AppealSearchResult",
          "namespace" : "http://www.casenet.com/AppealSearchResult"
        }
      },
      "AppealSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "AppealSearchResults",
          "namespace" : "http://www.casenet.com/AppealSearchResults"
        }
      },
      "LineItemWithAppealStatus" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hasAdvisorReview" : {
            "type" : "boolean"
          },
          "hasClinicalReview" : {
            "type" : "boolean"
          },
          "hasNotification" : {
            "type" : "boolean"
          },
          "hasOutcome" : {
            "type" : "boolean"
          },
          "appealContextId" : {
            "type" : "string"
          },
          "hasDraftAdvisorReview" : {
            "type" : "boolean"
          },
          "hasDraftClinicalReview" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "LineItemLite",
          "namespace" : "http://www.casenet.com/LineItemLite"
        }
      },
      "AppealSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "appealType" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealType",
              "namespace" : "http://www.casenet.com/AppealType"
            },
            "enum" : [ "DRAFT", "SUBMITTED", "ALL" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealSortField"
            }
          }
        },
        "xml" : {
          "name" : "AppealSearchCriteria",
          "namespace" : "http://www.casenet.com/AppealSearchCriteria"
        }
      },
      "AppealSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealSortColumn",
              "namespace" : "http://www.casenet.com/AppealSortColumn"
            },
            "enum" : [ "APPEAL_NUMBER", "RECEIVED_DATE", "DUE_DATE", "APPEAL_URGENCY", "APPEAL_TYPE", "APPEAL_LEVEL", "STATE", "CLOSED_DATE", "OUTCOME" ]
          }
        },
        "xml" : {
          "name" : "AppealSortField",
          "namespace" : "http://www.casenet.com/AppealSortField"
        }
      },
      "AuthorizationHeader2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "stateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canBeDenied" : {
            "type" : "boolean"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "requestSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "caseId" : {
            "type" : "string"
          },
          "authorizationLocks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lock"
            }
          },
          "authorizationDiagnosis" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosis"
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/RequestingProvider"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "appealed" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "SimpleExtensibleObject",
          "namespace" : "http://www.casenet.com/SimpleExtensibleObject"
        }
      },
      "CreateAttachmentsRequest" : {
        "type" : "object",
        "properties" : {
          "existingDocumentIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "newDocuments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentInfoRequest"
            }
          }
        }
      },
      "BodyPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FormDataBodyPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "simple" : {
            "type" : "boolean"
          },
          "formDataContentDisposition" : {
            "$ref" : "#/components/schemas/FormDataContentDisposition"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "FormDataMultiPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            }
          },
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/FormDataBodyPart"
              }
            }
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "MessageBodyWorkers" : {
        "type" : "object"
      },
      "MultiPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            }
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ParameterizedHeader" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "LineItemDeterminationResponse" : {
        "type" : "object",
        "properties" : {
          "warningMessage" : {
            "type" : "string",
            "enum" : [ "AUTOMATED_LETTER_WARNING" ]
          }
        },
        "xml" : {
          "name" : "LineItemDeterminationResponse",
          "namespace" : "http://www.casenet.com/LineItemDeterminationResponse"
        }
      },
      "ActionPathRequest" : {
        "required" : [ "useRuleOutputs" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          },
          "activity" : {
            "type" : "string",
            "xml" : {
              "name" : "Activity",
              "namespace" : "http://www.casenet.com/Activity"
            },
            "enum" : [ "CLINICAL_REVIEW", "ADVISOR_REVIEW", "DETERMINATION", "NOTIFICATION" ]
          }
        },
        "xml" : {
          "name" : "ActionPathRequest",
          "namespace" : "http://www.casenet.com/ActionPathRequest"
        }
      },
      "ConcurrentReviewActionPathRequest" : {
        "required" : [ "useRuleOutputs" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          }
        },
        "xml" : {
          "name" : "ConcurrentReviewActionPathRequest",
          "namespace" : "http://www.casenet.com/ConcurrentReviewActionPathRequest"
        }
      },
      "DecisionRequest" : {
        "required" : [ "decisionDate", "status", "units" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "DeterminationRequestStatus",
              "namespace" : "http://www.casenet.com/DeterminationRequestStatus"
            },
            "enum" : [ "APPROVE", "DENY", "VOID", "PEND" ]
          },
          "units" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "decisionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "varianceReasonOption" : {
            "type" : "string"
          },
          "medNecessityDeterminationOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "DecisionRequest",
          "namespace" : "http://www.casenet.com/DecisionRequest"
        }
      },
      "MultiLineItemDeterminationRequest" : {
        "required" : [ "additionalLineItems", "explanationOption", "selectedLineItem" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "claimInformation" : {
            "maxLength" : 264,
            "minLength" : 0,
            "type" : "string"
          },
          "explanationOption" : {
            "type" : "string"
          },
          "decision" : {
            "$ref" : "#/components/schemas/DecisionRequest"
          },
          "selectedLineItem" : {
            "type" : "integer",
            "format" : "int32"
          },
          "additionalLineItems" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "concurrentReviewNextTask" : {
            "$ref" : "#/components/schemas/ConcurrentReviewActionPathRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "decisions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DecisionRequest"
            }
          }
        },
        "xml" : {
          "name" : "MultiLineItemDeterminationRequest",
          "namespace" : "http://www.casenet.com/MultiLineItemDeterminationRequest"
        }
      },
      "CareWebQIRequest" : {
        "type" : "object",
        "properties" : {
          "entryPoint" : {
            "type" : "string"
          },
          "messageHash" : {
            "type" : "string"
          },
          "requestVersion" : {
            "type" : "string"
          },
          "episodeID" : {
            "type" : "string"
          },
          "txtInterfaceLoginUrl" : {
            "type" : "string"
          },
          "DocumentingUser" : {
            "type" : "string"
          },
          "documentingUserFirstname" : {
            "type" : "string"
          },
          "documentingUserLastname" : {
            "type" : "string"
          },
          "RequestType" : {
            "type" : "string"
          },
          "ResultTransform" : {
            "type" : "string"
          },
          "ReturnUrl" : {
            "type" : "string"
          },
          "ResponseTarget" : {
            "type" : "string"
          }
        }
      },
      "AuthorizationAndLineItemsSummary" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItems" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationLineItemInfoLite"
            }
          },
          "duplicated" : {
            "type" : "boolean"
          },
          "authorizationProcessWarnings" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationProcessWarnings",
                "namespace" : "http://www.casenet.com/AuthorizationProcessWarnings"
              },
              "enum" : [ "DUPLICATE_AUTHORIZATION", "CORRESPONDENCE_AUTOMATION_FAILURE", "RFI_DISTRIBUTED_CORRESPONDENCE_ENABLED", "RFI_NO_ADDRESS_FOR_MEMBER_DESIGNEE", "RFI_NO_ADDRESS_FOR_MEMBER" ]
            }
          }
        },
        "xml" : {
          "name" : "AuthorizationAndLineItemsSummary",
          "namespace" : "http://www.casenet.com/AuthorizationAndLineItemsSummary"
        }
      },
      "AuthorizationInfo" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AuthorizationInfo",
          "namespace" : "http://www.casenet.com/AuthorizationInfo"
        }
      },
      "AuthorizationLineItemInfoLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "lineItemStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "unitCountDetermined" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountApproved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDenied" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AuthorizationLineItemInfoLite",
          "namespace" : "http://www.casenet.com/AuthorizationLineItemInfoLite"
        }
      },
      "AuthorizationPrescreenResult" : {
        "type" : "object",
        "properties" : {
          "memberEligible" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberEligibility",
              "namespace" : "http://www.casenet.com/MemberEligibility"
            },
            "enum" : [ "ELIGIBLE", "PARTIALLY_ELIGIBLE", "NOT_ELIGIBLE" ]
          },
          "authorizationRequired" : {
            "type" : "boolean"
          },
          "requiredReason" : {
            "type" : "string"
          },
          "requiredReasonProAuth" : {
            "type" : "string"
          },
          "duplicatedAuthorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "autoDetermine" : {
            "type" : "string",
            "xml" : {
              "name" : "AutoDetermine",
              "namespace" : "http://www.casenet.com/AutoDetermine"
            },
            "enum" : [ "NO", "DENY", "APPROVE" ]
          },
          "decisionReason" : {
            "type" : "string"
          },
          "decisionReasonProAuth" : {
            "type" : "string"
          },
          "reviewNote" : {
            "type" : "string"
          },
          "reviewNoteProAuth" : {
            "type" : "string"
          },
          "clinicalReviewEnabledProAuth" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "autoApprovedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "recommendedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "recommendedUnitsReason" : {
            "type" : "string"
          },
          "recommendedUnitsReasonProAuth" : {
            "type" : "string"
          },
          "noteInstance" : {
            "$ref" : "#/components/schemas/NoteInstance"
          }
        },
        "xml" : {
          "name" : "AuthorizationPrescreenResult",
          "namespace" : "http://www.casenet.com/AuthorizationPrescreenResult"
        }
      },
      "AuthorizationSubmissionResponse" : {
        "type" : "object",
        "properties" : {
          "createAuthorizationResponse" : {
            "$ref" : "#/components/schemas/AuthorizationAndLineItemsSummary"
          },
          "prescreenResult" : {
            "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
          }
        },
        "xml" : {
          "name" : "AuthorizationSubmissionResponse",
          "namespace" : "http://www.casenet.com/AuthorizationSubmissionResponse"
        }
      },
      "AuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/AuthorizationHeaderRequest"
        }
      },
      "AuthorizationRequest" : {
        "type" : "object",
        "properties" : {
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "preScreenNoteInstanceId" : {
            "type" : "string"
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemRequest"
            }
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/AuthorizationHeaderRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AuthorizationRequest",
          "namespace" : "http://www.casenet.com/AuthorizationRequest"
        }
      },
      "CreateCommonAuthorizationDiagnosisRequest" : {
        "type" : "object",
        "properties" : {
          "primaryDiagnosisCodeId" : {
            "$ref" : "#/components/schemas/DiagnosisCodeNaturalId"
          },
          "additionalDiagnosisCodeIdSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisCodeNaturalId"
            }
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          }
        },
        "xml" : {
          "name" : "CreateCommonAuthorizationDiagnosisRequest",
          "namespace" : "http://www.casenet.com/CreateCommonAuthorizationDiagnosisRequest"
        }
      },
      "CreateLineItemRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "CreateLineItemRequest",
          "namespace" : "http://www.casenet.com/CreateLineItemRequest"
        }
      },
      "DeterminationRequest" : {
        "required" : [ "decisions", "explanationOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "claimInformation" : {
            "maxLength" : 264,
            "minLength" : 0,
            "type" : "string"
          },
          "explanationOption" : {
            "type" : "string"
          },
          "decisions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DecisionRequest"
            }
          },
          "concurrentReviewNextTask" : {
            "$ref" : "#/components/schemas/ConcurrentReviewActionPathRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "automatedVoid" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "xml" : {
          "name" : "DeterminationRequest",
          "namespace" : "http://www.casenet.com/DeterminationRequest"
        }
      },
      "LineItemRequest" : {
        "type" : "object",
        "properties" : {
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          }
        }
      },
      "Phone" : {
        "required" : [ "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "maxLength" : 10,
            "minLength" : 10,
            "pattern" : "[0-9]{10}",
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Phone",
          "namespace" : "http://www.casenet.com/Phone"
        }
      },
      "PhoneAndExt" : {
        "required" : [ "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "maxLength" : 10,
            "minLength" : 10,
            "pattern" : "[0-9]{10}",
            "type" : "string"
          },
          "phoneExtension" : {
            "maxLength" : 7,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PhoneAndExt",
          "namespace" : "http://www.casenet.com/PhoneAndExt"
        }
      },
      "ProductId" : {
        "required" : [ "id", "productIdType" ],
        "type" : "object",
        "properties" : {
          "productIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProductIdType",
              "namespace" : "http://www.casenet.com/ProductIdType"
            },
            "enum" : [ "NAME", "EXTERNAL_ID", "INTERNAL" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProductId",
          "namespace" : "http://www.casenet.com/ProductId"
        }
      },
      "RequestingProviderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestingProviderLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "requestingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "requestingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestingProviderSpecialtyOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RequestingProviderRequest",
          "namespace" : "http://www.casenet.com/RequestingProviderRequest"
        }
      },
      "VoidAuthorizationResponse" : {
        "type" : "object",
        "properties" : {
          "warningMessage" : {
            "type" : "string",
            "enum" : [ "AUTOMATED_LETTER_WARNING" ]
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "VoidAuthorizationResponse",
          "namespace" : "http://www.casenet.com/VoidAuthorizationResponse"
        }
      },
      "VoidAuthorizationRequest" : {
        "required" : [ "authorizationVersion" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "explanationOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidAuthorizationRequest",
          "namespace" : "http://www.casenet.com/VoidAuthorizationRequest"
        }
      },
      "VoidLineItemAuthorizationResponse" : {
        "required" : [ "authorizationVersion", "lineItemVersion" ],
        "type" : "object",
        "properties" : {
          "lineItemVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "warningMessage" : {
            "type" : "string",
            "enum" : [ "AUTOMATED_LETTER_WARNING" ]
          }
        },
        "xml" : {
          "name" : "VoidLineItemAuthorizationResponse",
          "namespace" : "http://www.casenet.com/VoidLineItemAuthorizationResponse"
        }
      },
      "LineItemVoidRequest" : {
        "required" : [ "authorizationVersion", "lineItemVersion" ],
        "type" : "object",
        "properties" : {
          "lineItemVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "explanationOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LineItemVoidRequest",
          "namespace" : "http://www.casenet.com/LineItemVoidRequest"
        }
      },
      "AuthorizationAppealSummary" : {
        "required" : [ "appealId", "appealNumber" ],
        "type" : "object",
        "properties" : {
          "appealId" : {
            "type" : "string"
          },
          "appealNumber" : {
            "type" : "string"
          },
          "taskIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "AuthorizationAppealSummary",
          "namespace" : "http://www.casenet.com/AuthorizationAppealSummary"
        }
      },
      "AppealActionPathRequest" : {
        "required" : [ "appealActivity", "useRuleOutputs" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          },
          "appealActivity" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealActivity",
              "namespace" : "http://www.casenet.com/AppealActivity"
            },
            "enum" : [ "APPEAL_CLINICAL_REVIEW", "APPEAL_ADVISOR_REVIEW", "APPEAL_OUTCOME", "APPEAL_NOTIFICATION", "APPEAL_EVALUATE_ADVISOR_REVIEW_TASK" ]
          },
          "beginWorkDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "selectedLineItemsNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        },
        "xml" : {
          "name" : "AppealActionPathRequest",
          "namespace" : "http://www.casenet.com/AppealActionPathRequest"
        }
      },
      "AppealRequestForInformationRequest" : {
        "required" : [ "attemptNumber", "dateRequested", "informationRequested", "requestTypeOption" ],
        "type" : "object",
        "properties" : {
          "requestTypeOption" : {
            "type" : "string",
            "xml" : {
              "name" : "UMRequestType",
              "namespace" : "http://www.casenet.com/UMRequestType"
            },
            "enum" : [ "ADVISOR", "APPEAL_EXPEDITED", "APPEAL_STANDARD", "BENEFIT_EXCEPTION", "MEDICAL_NECESSITY_REVIEW_EXPEDITED", "MEDICAL_NECESSITY_REVIEW_RETRO", "MEDICAL_NECESSITY_REVIEW_STANDARD", "RECONSIDERATION", "STATE_REVIEW", "CLINICAL_REVIEW", "ADVISOR_REVIEW", "PHARMACY_REVIEW", "APPEAL" ]
          },
          "attemptNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateRequested" : {
            "type" : "string",
            "format" : "date-time"
          },
          "informationRequested" : {
            "maxLength" : 4000,
            "minLength" : 0,
            "type" : "string"
          },
          "attendingMD" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "answerToRequest" : {
            "type" : "string"
          }
        }
      },
      "CreateAuthorizationAppealRequest" : {
        "required" : [ "lineItemNumbers", "receivedDate" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "acknowledgementLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationExpeditedDenialDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "urgencyOption" : {
            "type" : "string"
          },
          "reasonOption" : {
            "type" : "string"
          },
          "reasonOther" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "typeOption" : {
            "type" : "string"
          },
          "levelOption" : {
            "type" : "string"
          },
          "ownerUsername" : {
            "type" : "string"
          },
          "methodOption" : {
            "type" : "string"
          },
          "lineItemNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "requestorName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestorTypeOption" : {
            "type" : "string"
          },
          "requestorPrimaryPhone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorAlternatePhone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorEmail" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string"
          },
          "requestorFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "appealActionPathRequest" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "urgencyChangeReasonOption" : {
            "type" : "string"
          },
          "urgencyChangeReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestForInformationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealRequestForInformationRequest"
            }
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        },
        "xml" : {
          "name" : "CreateAuthorizationAppealRequest",
          "namespace" : "http://www.casenet.com/CreateAuthorizationAppealRequest"
        }
      },
      "LineItemReviewSummary" : {
        "required" : [ "reviewId" ],
        "type" : "object",
        "properties" : {
          "reviewId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LineItemReviewSummary",
          "namespace" : "http://www.casenet.com/LineItemReviewSummary"
        }
      },
      "AdvisorReviewActionPathRequest" : {
        "required" : [ "useRuleOutputs" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          },
          "activity" : {
            "type" : "string",
            "xml" : {
              "name" : "AdvisorReviewActivity",
              "namespace" : "http://www.casenet.com/AdvisorReviewActivity"
            },
            "enum" : [ "UM_EVALUATE_ADVISOR_REVIEW_TASK" ]
          }
        },
        "xml" : {
          "name" : "AdvisorReviewActionPathRequest",
          "namespace" : "http://www.casenet.com/AdvisorReviewActionPathRequest"
        }
      },
      "BaseInnerReviewRequest" : {
        "type" : "object",
        "xml" : {
          "name" : "BaseInnerReviewRequest",
          "namespace" : "http://www.casenet.com/BaseInnerReviewRequest"
        }
      },
      "CreateLineItemAdvisorReviewRequest" : {
        "required" : [ "lineItemNumberUnderReview", "lineItemNumbers", "reviewDate" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reviewDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerRequest" : {
            "$ref" : "#/components/schemas/ReviewerRequest"
          },
          "reviewNotes" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "administrativeDenial" : {
            "type" : "boolean"
          },
          "lineItemNumberUnderReview" : {
            "type" : "integer",
            "format" : "int32"
          },
          "innerReview" : {
            "$ref" : "#/components/schemas/BaseInnerReviewRequest"
          },
          "lineItemNumbers" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "claimReviewTask" : {
            "type" : "boolean"
          },
          "specialtyOption" : {
            "type" : "string"
          },
          "reasonOption" : {
            "type" : "string"
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "peerToPeerDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/AdvisorReviewActionPathRequest"
          }
        },
        "xml" : {
          "name" : "CreateLineItemAdvisorReviewRequest",
          "namespace" : "http://www.casenet.com/CreateLineItemAdvisorReviewRequest"
        }
      },
      "ReviewerRequest" : {
        "type" : "object",
        "xml" : {
          "name" : "ReviewerRequest",
          "namespace" : "http://www.casenet.com/ReviewerRequest"
        }
      },
      "CreateLineItemClinicalReviewRequest" : {
        "required" : [ "lineItemNumberUnderReview", "lineItemNumbers", "reviewDate" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reviewDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerRequest" : {
            "$ref" : "#/components/schemas/ReviewerRequest"
          },
          "reviewNotes" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "administrativeDenial" : {
            "type" : "boolean"
          },
          "lineItemNumberUnderReview" : {
            "type" : "integer",
            "format" : "int32"
          },
          "innerReview" : {
            "$ref" : "#/components/schemas/BaseInnerReviewRequest"
          },
          "lineItemNumbers" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "claimReviewTask" : {
            "type" : "boolean"
          },
          "informationSourceOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "methodOption" : {
            "type" : "string"
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "informationSourceOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "CreateLineItemClinicalReviewRequest",
          "namespace" : "http://www.casenet.com/CreateLineItemClinicalReviewRequest"
        }
      },
      "DeterminationDueDateHistory" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determinationDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "DeterminationDueDateHistory",
          "namespace" : "http://www.casenet.com/DeterminationDueDateHistory"
        }
      },
      "DeterminationDueDateHistoryResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeterminationDueDateHistory"
            }
          }
        },
        "xml" : {
          "name" : "DeterminationDueDateHistoryResults",
          "namespace" : "http://www.casenet.com/DeterminationDueDateHistoryResults"
        }
      },
      "DeterminationDueDateHistorySearchRequest" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeterminationDueDateHistorySortField"
            }
          }
        },
        "xml" : {
          "name" : "DeterminationDueDateHistorySearchRequest",
          "namespace" : "http://www.casenet.com/DeterminationDueDateHistorySearchRequest"
        }
      },
      "DeterminationDueDateHistorySortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "LINE_ITEM_NUMBER", "DUE_DATE", "UPDATED_DATE" ]
          }
        },
        "xml" : {
          "name" : "DeterminationDueDateHistorySortField",
          "namespace" : "http://www.casenet.com/DeterminationDueDateHistorySortField"
        }
      },
      "DischargeOrReadmissionResponse" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        }
      },
      "DischargeReadmissionSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DischargeOrReadmissionResponse"
            }
          }
        },
        "xml" : {
          "name" : "DischargeReadmissionSearchResults",
          "namespace" : "http://www.casenet.com/DischargeReadmissionSearchResults"
        }
      },
      "DischargeReadmissionSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "filter" : {
            "type" : "string",
            "enum" : [ "DISCHARGE", "READMISSION", "ALL" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DischargeReadmissionSortField"
            }
          }
        },
        "xml" : {
          "name" : "DischargeReadmissionSearchCriteria",
          "namespace" : "http://www.casenet.com/DischargeReadmissionSearchCriteria"
        }
      },
      "DischargeReadmissionSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "CREATED_DATE" ]
          }
        },
        "xml" : {
          "name" : "DischargeReadmissionSortField",
          "namespace" : "http://www.casenet.com/DischargeReadmissionSortField"
        }
      },
      "CreateRequestForInformationResponse" : {
        "type" : "object",
        "properties" : {
          "requestForInformationId" : {
            "type" : "string"
          },
          "attemptNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "CreateRequestForInformationResponse",
          "namespace" : "http://www.casenet.com/CreateRequestForInformationResponse"
        }
      },
      "CommonActionPathRequest" : {
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CommonActionPathRequest",
          "namespace" : "http://www.casenet.com/CommonActionPathRequest"
        }
      },
      "CreateRequestForInformationRequest" : {
        "required" : [ "informationRequested", "lineItemNumbers", "requestTypeOption" ],
        "type" : "object",
        "properties" : {
          "dateOfAttempt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "provider" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "faxNumber" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "phoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "faxNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "informationRequested" : {
            "maxLength" : 4000,
            "minLength" : 1,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "requestTypeOption" : {
            "type" : "string"
          },
          "lineItemNumbers" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        },
        "xml" : {
          "name" : "CreateRequestForInformationRequest",
          "namespace" : "http://www.casenet.com/CreateRequestForInformationRequest"
        }
      },
      "UpdateAuthorizationResponse" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItems" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationLineItemInfoLite"
            }
          },
          "duplicated" : {
            "type" : "boolean"
          },
          "authorizationProcessWarnings" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationProcessWarnings",
                "namespace" : "http://www.casenet.com/AuthorizationProcessWarnings"
              },
              "enum" : [ "DUPLICATE_AUTHORIZATION", "CORRESPONDENCE_AUTOMATION_FAILURE", "RFI_DISTRIBUTED_CORRESPONDENCE_ENABLED", "RFI_NO_ADDRESS_FOR_MEMBER_DESIGNEE", "RFI_NO_ADDRESS_FOR_MEMBER" ]
            }
          },
          "warningMessage" : {
            "type" : "string",
            "enum" : [ "AUTOMATED_LETTER_WARNING" ]
          }
        },
        "xml" : {
          "name" : "UpdateAuthorizationResponse",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationResponse"
        }
      },
      "AddAuthorizationDiagnosisRequest" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AddAuthorizationDiagnosisRequest",
          "namespace" : "http://www.casenet.com/AddAuthorizationDiagnosisRequest"
        }
      },
      "UpdateActionPathRequest" : {
        "required" : [ "useRuleOutputs" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/AssigneeRequest"
          },
          "activity" : {
            "type" : "string",
            "xml" : {
              "name" : "Activity",
              "namespace" : "http://www.casenet.com/Activity"
            },
            "enum" : [ "CLINICAL_REVIEW", "ADVISOR_REVIEW", "DETERMINATION", "NOTIFICATION" ]
          },
          "selectedLineItemsNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        },
        "xml" : {
          "name" : "UpdateActionPathRequest",
          "namespace" : "http://www.casenet.com/UpdateActionPathRequest"
        }
      },
      "UpdateAuthorizationRequestAuthorizationHeaderRequestCreateLineItemRequestUpdateLineItemRequest" : {
        "required" : [ "authorizationVersion" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/AddAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/UpdateActionPathRequest"
          },
          "voidAuthorizationDiagnosisRequest" : {
            "$ref" : "#/components/schemas/VoidAuthorizationDiagnosisRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateLineItemRequest"
            }
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/AuthorizationHeaderRequest"
          }
        },
        "xml" : {
          "name" : "UpdateAuthorizationRequest",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationRequest"
        }
      },
      "UpdateLineItemRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "UpdateLineItemRequest",
          "namespace" : "http://www.casenet.com/UpdateLineItemRequest"
        }
      },
      "VoidAuthorizationDiagnosisCode" : {
        "required" : [ "voidReasonOption" ],
        "type" : "object",
        "properties" : {
          "diagnosisCodeNaturalId" : {
            "$ref" : "#/components/schemas/DiagnosisCodeNaturalId"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidReasonOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidAuthorizationDiagnosisCode",
          "namespace" : "http://www.casenet.com/VoidAuthorizationDiagnosisCode"
        }
      },
      "VoidAuthorizationDiagnosisRequest" : {
        "required" : [ "voidAuthorizationDiagnosisCodes" ],
        "type" : "object",
        "properties" : {
          "voidAuthorizationDiagnosisCodes" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VoidAuthorizationDiagnosisCode"
            }
          }
        },
        "xml" : {
          "name" : "VoidAuthorizationDiagnosisRequest",
          "namespace" : "http://www.casenet.com/VoidAuthorizationDiagnosisRequest"
        }
      },
      "UpdateAuthorizationRequest" : {
        "required" : [ "authorizationVersion" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/AddAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/UpdateActionPathRequest"
          },
          "voidAuthorizationDiagnosisRequest" : {
            "$ref" : "#/components/schemas/VoidAuthorizationDiagnosisRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateLineItemRequest"
            }
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/AuthorizationHeaderRequest"
          }
        },
        "xml" : {
          "name" : "UpdateAuthorizationRequest",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationRequest"
        }
      },
      "UpdateLineItemAdvisorReviewRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reviewDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerRequest" : {
            "$ref" : "#/components/schemas/ReviewerRequest"
          },
          "reviewNotes" : {
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "administrativeDenial" : {
            "type" : "boolean"
          },
          "innerReview" : {
            "$ref" : "#/components/schemas/BaseInnerReviewRequest"
          },
          "lineItemNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "claimReviewTask" : {
            "type" : "boolean"
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "specialtyOption" : {
            "type" : "string"
          },
          "reasonOption" : {
            "type" : "string"
          },
          "peerToPeerDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "UpdateLineItemClinicalReviewRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reviewDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerRequest" : {
            "$ref" : "#/components/schemas/ReviewerRequest"
          },
          "reviewNotes" : {
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "administrativeDenial" : {
            "type" : "boolean"
          },
          "innerReview" : {
            "$ref" : "#/components/schemas/BaseInnerReviewRequest"
          },
          "lineItemNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "claimReviewTask" : {
            "type" : "boolean"
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "informationSourceOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "methodOption" : {
            "type" : "string"
          },
          "informationSourceOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "LineItemDuplicateCheckRequest" : {
        "type" : "object",
        "properties" : {
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          }
        },
        "xml" : {
          "name" : "LineItemDuplicateCheckRequest",
          "namespace" : "http://www.casenet.com/LineItemDuplicateCheckRequest"
        }
      },
      "LineItemListDuplicateCheckRequest" : {
        "type" : "object",
        "properties" : {
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemDuplicateCheckRequest"
            }
          }
        },
        "xml" : {
          "name" : "LineItemListDuplicateCheckRequest",
          "namespace" : "http://www.casenet.com/LineItemListDuplicateCheckRequest"
        }
      },
      "IdentifiersResponse" : {
        "type" : "object",
        "properties" : {
          "entitiesIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AuthorizationCaseAssociationRequest" : {
        "required" : [ "authorizationVersion" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          }
        }
      },
      "InternalLetterInfo" : {
        "type" : "object",
        "properties" : {
          "internalLetterId" : {
            "type" : "string"
          },
          "letterMailingInternalId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "InternalLetterInfo",
          "namespace" : "http://www.casenet.com/InternalLetterInfo"
        }
      },
      "CreateAuthorizationNotificationRequest" : {
        "required" : [ "authVersion", "lineItemIds" ],
        "type" : "object",
        "properties" : {
          "lineItemIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createPhoneNotificationRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
            }
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "authVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CreateInternalLetterNotificationRequest" : {
        "type" : "object",
        "properties" : {
          "letterRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLetterRecipientRequest"
            }
          },
          "userNotes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bhpLogo" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "companyGroupLogo" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoThree" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoFour" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoSignature" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnclosureBase"
            }
          },
          "letterTemplateVersionId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "InternalLetterRequest",
          "namespace" : "http://www.casenet.com/InternalLetterRequest"
        }
      },
      "CreateLetterRecipientRequest" : {
        "required" : [ "deliveries" ],
        "type" : "object",
        "properties" : {
          "deliveries" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "DeliveryMethod",
                "namespace" : "http://www.casenet.com/DeliveryMethod"
              },
              "enum" : [ "UI", "QUEUE", "FAX", "EMAIL" ]
            }
          }
        },
        "xml" : {
          "name" : "CreateLetterRecipientRequest",
          "namespace" : "http://www.casenet.com/CreateLetterRecipientRequest"
        }
      },
      "CreatePhoneNotificationRequest" : {
        "required" : [ "phoneNotificationRecipientType", "recipientId" ],
        "type" : "object",
        "properties" : {
          "notifyByPhoneNote" : {
            "maxLength" : 500,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNotificationRecipientType" : {
            "type" : "string",
            "enum" : [ "MEMBER", "REQUESTING_PROVIDER", "SERVICING_FACILITY", "SERVICING_PROVIDER", "PRESCRIBING_PROVIDER", "PCP_CONTACT", "MEMBER_DESIGNEE", "PERSONAL_CONTACT" ]
          },
          "recipientId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "notifyByPhoneDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "EnclosureBase" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "EnclosureBase",
          "namespace" : "http://www.casenet.com/EnclosureBase"
        }
      },
      "LetterLogoRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LetterLogoRequest",
          "namespace" : "http://www.casenet.com/LetterLogoRequest"
        }
      },
      "LinkedAuthorizationBase" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "diagnosisCode" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AuthorizationInfo",
          "namespace" : "http://www.casenet.com/AuthorizationInfo"
        }
      },
      "AppealableLineItemResponse" : {
        "type" : "object",
        "properties" : {
          "appealableLineItemIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PortableConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          }
        },
        "xml" : {
          "name" : "PortableConfiguration",
          "namespace" : "http://www.casenet.com/PortableConfiguration"
        }
      },
      "AuthorizationSearchResults" : {
        "type" : "object",
        "properties" : {
          "ipAuthorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryInpatientAuthorization"
            }
          },
          "spAuthorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryServiceProcedureAuthorization"
            }
          },
          "rxAuthorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryRxAuthorization"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AuthorizationSearchResults",
          "namespace" : "http://www.casenet.com/AuthorizationSearchResults"
        }
      },
      "DiagnosisCode" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "diagnosisCode" : {
            "type" : "string"
          },
          "diagnosisName" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "terminationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "diagnosisCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeType",
              "namespace" : "http://www.casenet.com/DiagnosisCodeType"
            },
            "enum" : [ "ICD9", "ICD10" ]
          }
        },
        "xml" : {
          "name" : "DiagnosisCode",
          "namespace" : "http://www.casenet.com/DiagnosisCode"
        }
      },
      "SummaryInpatientAuthorization" : {
        "type" : "object",
        "properties" : {
          "authorizationNum" : {
            "type" : "string"
          },
          "authTrackingNumber" : {
            "type" : "string"
          },
          "primaryDiagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "internalMemberId" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          },
          "memberDateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "id" : {
            "type" : "string"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "appealed" : {
            "type" : "boolean"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "caseId" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "requestingProviderName" : {
            "type" : "string"
          },
          "requestingProviderExternalLocationId" : {
            "type" : "string"
          },
          "requestingProviderInternalLocationId" : {
            "type" : "string"
          },
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "internalUIState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "lockedSinceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lockedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "authEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasUnvoidedNotifications" : {
            "type" : "boolean"
          },
          "hasNonVoidedAttachments" : {
            "type" : "boolean"
          },
          "interqualEpisodeId" : {
            "type" : "string"
          },
          "hasOpenManualTasks" : {
            "type" : "boolean"
          },
          "hasDischarges" : {
            "type" : "boolean"
          },
          "hasReadmits" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "admitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "servicingFacilityName" : {
            "type" : "string"
          },
          "servicingFacilityExternalLocationId" : {
            "type" : "string"
          },
          "servicingFacilityInternalLocationId" : {
            "type" : "string"
          },
          "hasUnvoidedReadmission" : {
            "type" : "boolean"
          },
          "ipLineItemSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryLineItem"
            }
          }
        },
        "xml" : {
          "name" : "SummaryInpatientAuthorization",
          "namespace" : "http://www.casenet.com/SummaryInpatientAuthorization"
        }
      },
      "SummaryLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "appliedEligibilityProductName" : {
            "type" : "string"
          },
          "appliedEligibilityProductExternalId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "primaryProcedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountApproved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDenied" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountRequested" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDetermined" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isAuthContainsMultiTypeLineItems" : {
            "type" : "boolean"
          },
          "requestForInformationExists" : {
            "type" : "boolean"
          },
          "determinationExists" : {
            "type" : "boolean"
          },
          "clinicalReviewsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "advisorReviewsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "clinicalReviewEditable" : {
            "type" : "string",
            "xml" : {
              "name" : "ReviewEditableState",
              "namespace" : "http://www.casenet.com/ReviewEditableState"
            },
            "enum" : [ "NO_ACCESS", "DRAFT_EDITABLE", "NO_DRAFT" ]
          },
          "advisorReviewEditable" : {
            "type" : "string",
            "xml" : {
              "name" : "ReviewEditableState",
              "namespace" : "http://www.casenet.com/ReviewEditableState"
            },
            "enum" : [ "NO_ACCESS", "DRAFT_EDITABLE", "NO_DRAFT" ]
          },
          "lineItemStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lineItemEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinedStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinedEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItemTypeDisplayed" : {
            "type" : "boolean",
            "writeOnly" : true
          }
        },
        "xml" : {
          "name" : "SummaryLineItem",
          "namespace" : "http://www.casenet.com/SummaryLineItem"
        }
      },
      "SummaryRxAuthorization" : {
        "type" : "object",
        "properties" : {
          "authorizationNum" : {
            "type" : "string"
          },
          "authTrackingNumber" : {
            "type" : "string"
          },
          "primaryDiagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "internalMemberId" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          },
          "memberDateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "id" : {
            "type" : "string"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "appealed" : {
            "type" : "boolean"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "caseId" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "requestingProviderName" : {
            "type" : "string"
          },
          "requestingProviderExternalLocationId" : {
            "type" : "string"
          },
          "requestingProviderInternalLocationId" : {
            "type" : "string"
          },
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "internalUIState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "lockedSinceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lockedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "authEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasUnvoidedNotifications" : {
            "type" : "boolean"
          },
          "hasNonVoidedAttachments" : {
            "type" : "boolean"
          },
          "interqualEpisodeId" : {
            "type" : "string"
          },
          "hasOpenManualTasks" : {
            "type" : "boolean"
          },
          "hasDischarges" : {
            "type" : "boolean"
          },
          "hasReadmits" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rxLineItemSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryRxLineItem"
            }
          }
        },
        "xml" : {
          "name" : "SummaryRxAuthorization",
          "namespace" : "http://www.casenet.com/SummaryRxAuthorization"
        }
      },
      "SummaryRxLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "appliedEligibilityProductName" : {
            "type" : "string"
          },
          "appliedEligibilityProductExternalId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "primaryProcedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountApproved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDenied" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountRequested" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDetermined" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isAuthContainsMultiTypeLineItems" : {
            "type" : "boolean"
          },
          "requestForInformationExists" : {
            "type" : "boolean"
          },
          "determinationExists" : {
            "type" : "boolean"
          },
          "clinicalReviewsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "advisorReviewsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "clinicalReviewEditable" : {
            "type" : "string",
            "xml" : {
              "name" : "ReviewEditableState",
              "namespace" : "http://www.casenet.com/ReviewEditableState"
            },
            "enum" : [ "NO_ACCESS", "DRAFT_EDITABLE", "NO_DRAFT" ]
          },
          "advisorReviewEditable" : {
            "type" : "string",
            "xml" : {
              "name" : "ReviewEditableState",
              "namespace" : "http://www.casenet.com/ReviewEditableState"
            },
            "enum" : [ "NO_ACCESS", "DRAFT_EDITABLE", "NO_DRAFT" ]
          },
          "lineItemStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lineItemEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinedStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinedEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "drugCode" : {
            "type" : "string"
          },
          "drugName" : {
            "type" : "string"
          },
          "prescribingProviderName" : {
            "type" : "string"
          },
          "prescribingProviderExternalLocationId" : {
            "type" : "string"
          },
          "prescribingProviderInternalLocationId" : {
            "type" : "string"
          },
          "route" : {
            "type" : "string"
          },
          "lineItemTypeDisplayed" : {
            "type" : "boolean",
            "writeOnly" : true
          }
        },
        "xml" : {
          "name" : "SummaryRxLineItem",
          "namespace" : "http://www.casenet.com/SummaryRxLineItem"
        }
      },
      "SummaryServiceProcedureAuthorization" : {
        "type" : "object",
        "properties" : {
          "authorizationNum" : {
            "type" : "string"
          },
          "authTrackingNumber" : {
            "type" : "string"
          },
          "primaryDiagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "internalMemberId" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          },
          "memberDateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "id" : {
            "type" : "string"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "appealed" : {
            "type" : "boolean"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "caseId" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "requestingProviderName" : {
            "type" : "string"
          },
          "requestingProviderExternalLocationId" : {
            "type" : "string"
          },
          "requestingProviderInternalLocationId" : {
            "type" : "string"
          },
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "internalUIState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "lockedSinceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lockedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "authEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasUnvoidedNotifications" : {
            "type" : "boolean"
          },
          "hasNonVoidedAttachments" : {
            "type" : "boolean"
          },
          "interqualEpisodeId" : {
            "type" : "string"
          },
          "hasOpenManualTasks" : {
            "type" : "boolean"
          },
          "hasDischarges" : {
            "type" : "boolean"
          },
          "hasReadmits" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "spLineItemSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryServiceProcedureLineItem"
            }
          }
        },
        "xml" : {
          "name" : "SummaryServiceProcedureAuthorization",
          "namespace" : "http://www.casenet.com/SummaryServiceProcedureAuthorization"
        }
      },
      "SummaryServiceProcedureLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "appliedEligibilityProductName" : {
            "type" : "string"
          },
          "appliedEligibilityProductExternalId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "primaryProcedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountApproved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDenied" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountRequested" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDetermined" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isAuthContainsMultiTypeLineItems" : {
            "type" : "boolean"
          },
          "requestForInformationExists" : {
            "type" : "boolean"
          },
          "determinationExists" : {
            "type" : "boolean"
          },
          "clinicalReviewsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "advisorReviewsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "clinicalReviewEditable" : {
            "type" : "string",
            "xml" : {
              "name" : "ReviewEditableState",
              "namespace" : "http://www.casenet.com/ReviewEditableState"
            },
            "enum" : [ "NO_ACCESS", "DRAFT_EDITABLE", "NO_DRAFT" ]
          },
          "advisorReviewEditable" : {
            "type" : "string",
            "xml" : {
              "name" : "ReviewEditableState",
              "namespace" : "http://www.casenet.com/ReviewEditableState"
            },
            "enum" : [ "NO_ACCESS", "DRAFT_EDITABLE", "NO_DRAFT" ]
          },
          "lineItemStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lineItemEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinedStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinedEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "servicingProviderName" : {
            "type" : "string"
          },
          "servicingProviderExternalLocationId" : {
            "type" : "string"
          },
          "servicingProviderInternalLocationId" : {
            "type" : "string"
          },
          "lineItemTypeDisplayed" : {
            "type" : "boolean",
            "writeOnly" : true
          }
        },
        "xml" : {
          "name" : "SummaryServiceProcedureLineItem",
          "namespace" : "http://www.casenet.com/SummaryServiceProcedureLineItem"
        }
      },
      "AuthorizationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "memberIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberId"
            }
          },
          "authorizationNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "authorizationTrackingNumber" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "includeClosed" : {
            "type" : "boolean"
          },
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "authorizationSearchParam" : {
            "$ref" : "#/components/schemas/AuthorizationSearchParam"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationSortField",
              "namespace" : "http://www.casenet.com/UMAuthorizationSortField"
            },
            "enum" : [ "AUTHORIZATION_NUM", "FROM_DATE", "UPDATED_DATE", "END_DATE", "STATUS", "STATE", "MEMBER_NAME", "MEMBER_EXTERNAL_ID", "REQUESTING_PROVIDER", "FACILITY_PROVIDER", "DIAGNOSIS_CODE", "DIAGNOSIS_NAME" ]
          },
          "asc" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AuthorizationSearchCriteria",
          "namespace" : "http://www.casenet.com/AuthorizationSearchCriteria"
        }
      },
      "AuthorizationSearchParam" : {
        "type" : "object",
        "properties" : {
          "requestingProviderLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationId"
            }
          },
          "servicingFacilityLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationId"
            }
          },
          "prescribingProviderLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationId"
            }
          },
          "servicingProviderLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationId"
            }
          },
          "providerLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationId"
            }
          },
          "serviceTypeLabels" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "authorizationType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "AuthorizationSearchParam",
          "namespace" : "http://www.casenet.com/AuthorizationSearchParam"
        }
      },
      "MemberId" : {
        "required" : [ "id", "memberIdType" ],
        "type" : "object",
        "properties" : {
          "memberIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberIdType",
              "namespace" : "http://www.casenet.com/MemberIdType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberId",
          "namespace" : "http://www.casenet.com/MemberId"
        }
      },
      "ConcurrentReviewConfiguration" : {
        "type" : "object",
        "properties" : {
          "concurrentReviewEnabled" : {
            "type" : "boolean"
          },
          "nextTask" : {
            "type" : "string"
          },
          "defaultAssignee" : {
            "$ref" : "#/components/schemas/TaskAssignee"
          },
          "defaultPriority" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ConcurrentReviewConfiguration",
          "namespace" : "http://www.casenet.com/ConcurrentReviewConfiguration"
        }
      },
      "TaskAssignee" : {
        "required" : [ "assigneeName", "assigneeType" ],
        "type" : "object",
        "properties" : {
          "assigneeType" : {
            "type" : "string"
          },
          "assigneeName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TaskAssignee",
          "namespace" : "http://www.casenet.com/TaskAssignee"
        }
      },
      "DeterminationConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "umStatusTypeExplanationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "xml" : {
          "name" : "DeterminationConfiguration",
          "namespace" : "http://www.casenet.com/DeterminationConfiguration"
        }
      },
      "InpatientLineItemConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "allowDuplicateAuthorizations" : {
            "type" : "boolean"
          },
          "allowDuplicatesOfDeniedLineItems" : {
            "type" : "boolean"
          },
          "fieldsCheckForDuplicateAuthorizations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationField",
                "namespace" : "http://www.casenet.com/AuthorizationField"
              },
              "enum" : [ "PROCEDURE_CODE", "SERVICING_PROVIDER", "PLACE_OF_SERVICE", "PL_CODE", "TREATMENT_TYPE", "MODIFIER_CODE", "SERVICE_TYPE", "SERVICING_PROVIDER_SPECIALTY", "STAY_LEVEL", "PRESCRIBING_PROVIDER" ]
            }
          },
          "procedureCodeRequired" : {
            "type" : "boolean"
          },
          "requestedDaysWarningThreshold" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "InpatientLineItemConfiguration",
          "namespace" : "http://www.casenet.com/InpatientLineItemConfiguration"
        }
      },
      "LineItemClinicalReviewBHPConfiguration" : {
        "type" : "object",
        "properties" : {
          "ipLineItemBREProcessingEnabled" : {
            "type" : "boolean"
          },
          "spLineItemBREProcessingEnabled" : {
            "type" : "boolean"
          },
          "rxLineItemBREProcessingEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "MemberAttachAuthorizationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "max" : {
            "type" : "integer",
            "format" : "int32"
          },
          "includeDrafts" : {
            "type" : "boolean"
          }
        }
      },
      "RxAuthorizationBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "authorizationTypeDisabled" : {
            "type" : "boolean"
          },
          "authorizationTypeDisabledMessage" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "medicalDiagnosisDisabledForBHP" : {
            "type" : "boolean"
          },
          "medicalDiagnosisDisabledForBHPMessage" : {
            "type" : "string"
          },
          "behavioralDiagnosisDisabledForBHP" : {
            "type" : "boolean"
          },
          "behavioralDiagnosisDisabledForBHPMessage" : {
            "type" : "string"
          },
          "mandatoryPrescreenEnabled" : {
            "type" : "boolean"
          },
          "allowPrescreenSkip" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "RxAuthorizationBhpConfiguration",
          "namespace" : "http://www.casenet.com/RxAuthorizationBhpConfiguration"
        }
      },
      "ExtendedAttributesConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesConfiguration",
          "namespace" : "http://www.casenet.com/ExtendedAttributesConfiguration"
        }
      },
      "RxAuthorizationConfiguration" : {
        "type" : "object",
        "properties" : {
          "authorizationDocumentConfiguration" : {
            "$ref" : "#/components/schemas/PortableConfiguration"
          },
          "requestingProviderConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "diagnosisConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "taskActivityValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prescreenNoteEnabled" : {
            "type" : "boolean"
          },
          "prescreenNotesEnabledAuthRequired" : {
            "type" : "boolean"
          },
          "prescreenNotesEnabledAuthNotRequired" : {
            "type" : "boolean"
          },
          "authorizationSpecificContactAddressEnabled" : {
            "type" : "boolean"
          },
          "proxyProviderIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "authorizationHeaderConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "oonReasons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "frequencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "serviceTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "placeOfServices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "documentTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "documentSources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "methods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "levelOfUrgencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "urgencyRequesters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "sourceRequired" : {
            "type" : "boolean"
          },
          "methodRequired" : {
            "type" : "boolean"
          },
          "levelOfUrgencyRequired" : {
            "type" : "boolean"
          },
          "urgencyRequestedByRequired" : {
            "type" : "boolean"
          },
          "codesExpirationAction" : {
            "type" : "string",
            "xml" : {
              "name" : "CodesEffectiveDateConfiguration",
              "namespace" : "http://www.casenet.com/CodesEffectiveDateConfiguration"
            },
            "enum" : [ "IGNORE", "ALLOW_WITH_WARNING", "DISALLOW" ]
          }
        },
        "xml" : {
          "name" : "RxAuthorizationConfiguration",
          "namespace" : "http://www.casenet.com/RxAuthorizationConfiguration"
        }
      },
      "RxLineItemConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "allowDuplicateAuthorizations" : {
            "type" : "boolean"
          },
          "allowDuplicatesOfDeniedLineItems" : {
            "type" : "boolean"
          },
          "fieldsCheckForDuplicateAuthorizations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationField",
                "namespace" : "http://www.casenet.com/AuthorizationField"
              },
              "enum" : [ "PROCEDURE_CODE", "SERVICING_PROVIDER", "PLACE_OF_SERVICE", "PL_CODE", "TREATMENT_TYPE", "MODIFIER_CODE", "SERVICE_TYPE", "SERVICING_PROVIDER_SPECIALTY", "STAY_LEVEL", "PRESCRIBING_PROVIDER" ]
            }
          },
          "canResubmitUndeterminedLineItemsToRulesEngine" : {
            "type" : "boolean"
          },
          "authorizationSpecificContactAddressEnabled" : {
            "type" : "boolean"
          },
          "proxyProviderIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "RxLineItemConfiguration",
          "namespace" : "http://www.casenet.com/RxLineItemConfiguration"
        }
      },
      "ServiceProcedureAuthorizationBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "authorizationTypeDisabled" : {
            "type" : "boolean"
          },
          "authorizationTypeDisabledMessage" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "medicalDiagnosisDisabledForBHP" : {
            "type" : "boolean"
          },
          "medicalDiagnosisDisabledForBHPMessage" : {
            "type" : "string"
          },
          "behavioralDiagnosisDisabledForBHP" : {
            "type" : "boolean"
          },
          "behavioralDiagnosisDisabledForBHPMessage" : {
            "type" : "string"
          },
          "mandatoryPrescreenEnabled" : {
            "type" : "boolean"
          },
          "allowPrescreenSkip" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ServiceProcedureAuthorizationBhpConfiguration",
          "namespace" : "http://www.casenet.com/ServiceProcedureAuthorizationBhpConfiguration"
        }
      },
      "ServiceProcedureAuthorizationConfiguration" : {
        "type" : "object",
        "properties" : {
          "authorizationDocumentConfiguration" : {
            "$ref" : "#/components/schemas/PortableConfiguration"
          },
          "requestingProviderConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "diagnosisConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "taskActivityValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prescreenNoteEnabled" : {
            "type" : "boolean"
          },
          "prescreenNotesEnabledAuthRequired" : {
            "type" : "boolean"
          },
          "prescreenNotesEnabledAuthNotRequired" : {
            "type" : "boolean"
          },
          "authorizationSpecificContactAddressEnabled" : {
            "type" : "boolean"
          },
          "proxyProviderIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "authorizationHeaderConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "requestedUnitsWarningThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "codesExpirationAction" : {
            "type" : "string",
            "xml" : {
              "name" : "CodesEffectiveDateConfiguration",
              "namespace" : "http://www.casenet.com/CodesEffectiveDateConfiguration"
            },
            "enum" : [ "IGNORE", "ALLOW_WITH_WARNING", "DISALLOW" ]
          }
        },
        "xml" : {
          "name" : "ServiceProcedureAuthorizationConfiguration",
          "namespace" : "http://www.casenet.com/ServiceProcedureAuthorizationConfiguration"
        }
      },
      "SPLineItemDuplicateAuthConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "allowDuplicateAuthorizations" : {
            "type" : "boolean"
          },
          "allowDuplicatesOfDeniedLineItems" : {
            "type" : "boolean"
          },
          "fieldsCheckForDuplicateAuthorizations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationField",
                "namespace" : "http://www.casenet.com/AuthorizationField"
              },
              "enum" : [ "PROCEDURE_CODE", "SERVICING_PROVIDER", "PLACE_OF_SERVICE", "PL_CODE", "TREATMENT_TYPE", "MODIFIER_CODE", "SERVICE_TYPE", "SERVICING_PROVIDER_SPECIALTY", "STAY_LEVEL", "PRESCRIBING_PROVIDER" ]
            }
          }
        },
        "xml" : {
          "name" : "SPLineItemDuplicateAuthConfiguration",
          "namespace" : "http://www.casenet.com/SPLineItemDuplicateAuthConfiguration"
        }
      },
      "LocationCode" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "locationCode" : {
            "type" : "string"
          },
          "locationName" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ServiceProcedureDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "bhpNode" : {
            "$ref" : "#/components/schemas/BhpNode"
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "hideThisServiceType" : {
            "type" : "boolean"
          },
          "diagnosisType" : {
            "type" : "string",
            "enum" : [ "BEHAVIORAL", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "guidelines" : {
            "type" : "string"
          },
          "clinicalReviewRequested" : {
            "type" : "boolean"
          },
          "showLocationCode" : {
            "type" : "boolean"
          },
          "showModifierCode" : {
            "type" : "boolean"
          },
          "showTreatmentType" : {
            "type" : "boolean"
          },
          "treatmentTypeRequired" : {
            "type" : "boolean"
          },
          "showPlCode" : {
            "type" : "boolean"
          },
          "showAuthBy" : {
            "type" : "boolean"
          },
          "displayMedicationSearch" : {
            "type" : "boolean"
          },
          "medicationSearchRequired" : {
            "type" : "boolean"
          },
          "displayAdjustedDose" : {
            "type" : "boolean"
          },
          "displayAdjustedRoute" : {
            "type" : "boolean"
          },
          "adjustedRoutes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceProcedureDefinitionAdjustedRoute"
            }
          },
          "defaultUnitType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "locationCodes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationCode"
            }
          },
          "defaultLocationCode" : {
            "$ref" : "#/components/schemas/LocationCode"
          },
          "defaultTreatmentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultPlCode" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultPlaceOfService" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "modifierCodes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifierCode"
            }
          },
          "defaultModifierCode" : {
            "$ref" : "#/components/schemas/ModifierCode"
          },
          "plCodeOptions" : {
            "$ref" : "#/components/schemas/TailoredOptionValues"
          },
          "treatmentTypeOptions" : {
            "$ref" : "#/components/schemas/TailoredOptionValues"
          },
          "placeOfServiceOptions" : {
            "$ref" : "#/components/schemas/TailoredOptionValues"
          },
          "adjustedRouteOptions" : {
            "$ref" : "#/components/schemas/TailoredOptionValues"
          },
          "unitTypeOptions" : {
            "$ref" : "#/components/schemas/TailoredOptionValues"
          },
          "displayedCollectionsEmpty" : {
            "type" : "boolean"
          },
          "defaultOptionsInAvailableOptions" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ServiceProcedureLineItemConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "serviceProcedureDefinition" : {
            "$ref" : "#/components/schemas/ServiceProcedureDefinition"
          },
          "canResubmitUndeterminedLineItemsToRulesEngine" : {
            "type" : "boolean"
          },
          "requestedUnitsWarningThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationSpecificContactAddressEnabled" : {
            "type" : "boolean"
          },
          "proxyProviderIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "allowDuplicateAuthorizations" : {
            "type" : "boolean"
          },
          "allowDuplicatesOfDeniedLineItems" : {
            "type" : "boolean"
          },
          "fieldsCheckForDuplicateAuthorizations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "AuthorizationField",
                "namespace" : "http://www.casenet.com/AuthorizationField"
              },
              "enum" : [ "PROCEDURE_CODE", "SERVICING_PROVIDER", "PLACE_OF_SERVICE", "PL_CODE", "TREATMENT_TYPE", "MODIFIER_CODE", "SERVICE_TYPE", "SERVICING_PROVIDER_SPECIALTY", "STAY_LEVEL", "PRESCRIBING_PROVIDER" ]
            }
          }
        },
        "xml" : {
          "name" : "ServiceProcedureLineItemConfiguration",
          "namespace" : "http://www.casenet.com/ServiceProcedureLineItemConfiguration"
        }
      },
      "IQConnectReview" : {
        "type" : "object",
        "properties" : {
          "episodeDay" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "IQConnectReview",
          "namespace" : "http://www.casenet.com/IQConnectReview"
        }
      },
      "InterqualPsiNote" : {
        "type" : "object",
        "properties" : {
          "indication" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "string"
          },
          "specialty" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "InterqualPsiNote",
          "namespace" : "http://www.casenet.com/InterqualPsiNote"
        }
      },
      "InterqualReview" : {
        "type" : "object",
        "properties" : {
          "reviewSummary" : {
            "type" : "string"
          },
          "interqualFinalized" : {
            "type" : "boolean"
          },
          "interqualSubmitted" : {
            "type" : "boolean"
          },
          "reviewCID" : {
            "type" : "string"
          },
          "productDesc" : {
            "type" : "string"
          },
          "subsetDesc" : {
            "type" : "string"
          },
          "reviewTypeDesc" : {
            "type" : "string"
          },
          "interqualCriteriaMet" : {
            "type" : "string"
          },
          "currentStatusDesc" : {
            "type" : "string"
          },
          "versionDesc" : {
            "type" : "string"
          },
          "recommendedLOC" : {
            "type" : "string"
          },
          "dischargeScreens" : {
            "type" : "string"
          },
          "intensityOfService" : {
            "type" : "string"
          },
          "severityOfIllness" : {
            "type" : "string"
          },
          "preAdmission" : {
            "type" : "string"
          },
          "initialReview" : {
            "type" : "string"
          },
          "ongoingReview" : {
            "type" : "string"
          },
          "dischargeReview" : {
            "type" : "string"
          },
          "recommendedDrugs" : {
            "type" : "string"
          },
          "recommendedServices" : {
            "type" : "string"
          },
          "psiNote" : {
            "$ref" : "#/components/schemas/InterqualPsiNote"
          },
          "copyrightTxt" : {
            "type" : "string"
          },
          "iqConnectReview" : {
            "$ref" : "#/components/schemas/IQConnectReview"
          }
        },
        "xml" : {
          "name" : "InterqualReview",
          "namespace" : "http://www.casenet.com/InterqualReview"
        }
      },
      "CareWebQIReview" : {
        "type" : "object",
        "properties" : {
          "reviewSummary" : {
            "type" : "string"
          },
          "diagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "procedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "careWebQiFinalized" : {
            "type" : "boolean"
          },
          "careWebQiSubmitted" : {
            "type" : "boolean"
          },
          "careWebQiReviewId" : {
            "type" : "string"
          },
          "careWebQiCriteriaMet" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CareWebQIReview",
          "namespace" : "http://www.casenet.com/BaseInnerReview"
        }
      },
      "CareWebQIInnerReviewRequest" : {
        "type" : "object",
        "properties" : {
          "criteriaMet" : {
            "type" : "boolean"
          },
          "reviewXml" : {
            "type" : "string"
          },
          "reviewSummary" : {
            "type" : "string"
          },
          "isCarewebqiFinalized" : {
            "type" : "boolean"
          },
          "carewebReviewId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CareWebQIInnerReviewRequest",
          "namespace" : "http://www.casenet.com/BaseInnerReviewRequest"
        }
      },
      "AdditionalInfoRequested" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMRequestType",
              "namespace" : "http://www.casenet.com/UMRequestType"
            },
            "enum" : [ "ADVISOR", "APPEAL_EXPEDITED", "APPEAL_STANDARD", "BENEFIT_EXCEPTION", "MEDICAL_NECESSITY_REVIEW_EXPEDITED", "MEDICAL_NECESSITY_REVIEW_RETRO", "MEDICAL_NECESSITY_REVIEW_STANDARD", "RECONSIDERATION", "STATE_REVIEW", "CLINICAL_REVIEW", "ADVISOR_REVIEW", "PHARMACY_REVIEW", "APPEAL" ]
          },
          "attempt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attendingMD" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "additionalInfoRequested" : {
            "type" : "string"
          },
          "dateRequested" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AdditionalInfoRequested",
          "namespace" : "http://www.casenet.com/AdditionalInfoRequested"
        }
      },
      "Appeal" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "number" : {
            "type" : "string"
          },
          "urgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyChangeReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyChangeReasonOther" : {
            "type" : "string"
          },
          "method" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "level" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "type" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reasonOther" : {
            "type" : "string"
          },
          "requestorName" : {
            "type" : "string"
          },
          "requestorType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestorAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "requestorAlternatePhone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorEmail" : {
            "type" : "string"
          },
          "requestorFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorPrimaryPhone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "acknowledgementLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationExpeditedDenialDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateChangeReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "dueDateChangeReasonOther" : {
            "type" : "string"
          },
          "globalOutcome" : {
            "$ref" : "#/components/schemas/AppealGlobalOutcomeFull"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemLite"
            }
          },
          "reviews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealReviewLiteWithRFI"
            }
          },
          "outcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealOutcome"
            }
          },
          "phoneNotifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhoneNotification"
            }
          },
          "correspondenceNotifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrespondenceNotification"
            }
          },
          "additionalRequestedInformation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdditionalInfoRequested"
            }
          },
          "appealDueDateHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealDueDateHistoryRecord"
            }
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "Appeal",
          "namespace" : "http://www.casenet.com/Appeal"
        }
      },
      "AppealDueDateHistoryRecord" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "changeReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "changeReasonOther" : {
            "type" : "string"
          },
          "changedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "changedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AppealDueDateHistoryRecord",
          "namespace" : "http://www.casenet.com/AppealDueDateHistoryRecord"
        }
      },
      "AppealGlobalOutcomeFull" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeDetail" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeOther" : {
            "type" : "string"
          },
          "decision" : {
            "type" : "string"
          },
          "notificationTo" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "resolutionLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationOfResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "completionDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AppealGlobalOutcomeFull",
          "namespace" : "http://www.casenet.com/AppealGlobalOutcomeFull"
        }
      },
      "AppealOutcome" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeDetail" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcomeOther" : {
            "type" : "string"
          },
          "decision" : {
            "type" : "string"
          },
          "notificationTo" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "resolutionLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationOfResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "lineItem" : {
            "$ref" : "#/components/schemas/LineItemLite"
          }
        },
        "xml" : {
          "name" : "AppealOutcome",
          "namespace" : "http://www.casenet.com/AppealOutcome"
        }
      },
      "AppealReviewLiteWithRFI" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "initiatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemLite"
            }
          },
          "appealReviewer" : {
            "$ref" : "#/components/schemas/AppealReviewer"
          },
          "informationReviewed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "appealReviewState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealReviewState",
              "namespace" : "http://www.casenet.com/AppealReviewState"
            },
            "enum" : [ "DRAFT", "SUBMITTED" ]
          },
          "additionalRequestedInformation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdditionalInfoRequested"
            }
          }
        },
        "xml" : {
          "name" : "AppealReviewLiteWithRFI",
          "namespace" : "http://www.casenet.com/AppealReviewLiteWithRFI"
        }
      },
      "AppealReviewer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AppealReviewer",
          "namespace" : "http://www.casenet.com/AppealReviewer"
        }
      },
      "CorrespondenceNotification" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationLineItem"
            }
          },
          "notificationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "letter" : {
            "$ref" : "#/components/schemas/LetterLite"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "sentBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "CorrespondenceNotification",
          "namespace" : "http://www.casenet.com/CorrespondenceNotification"
        }
      },
      "LetterLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "letterStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "LetterStatus",
              "namespace" : "http://www.casenet.com/LetterStatus"
            },
            "enum" : [ "RequestSent", "InProgress", "Failed", "Cancelled", "Draft", "Locked", "Complete" ]
          },
          "letterTemplateVersion" : {
            "$ref" : "#/components/schemas/LetterTemplateVersionLite"
          },
          "letterMailings" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterMailing"
            }
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "LetterLite",
          "namespace" : "http://www.casenet.com/LetterLite"
        }
      },
      "LetterMailing" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "dateSent" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "LetterMailing",
          "namespace" : "http://www.casenet.com/LetterMailing"
        }
      },
      "LetterTemplate" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "resource" : {
            "$ref" : "#/components/schemas/Resource"
          },
          "letterTemplateVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterTemplateVersion"
            }
          },
          "currentLetterTemplateVersion" : {
            "$ref" : "#/components/schemas/LetterTemplateVersion"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "LetterTemplateVersionLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "letterTemplate" : {
            "$ref" : "#/components/schemas/LetterTemplate"
          }
        },
        "xml" : {
          "name" : "LetterTemplateVersionLite",
          "namespace" : "http://www.casenet.com/LetterTemplateVersionLite"
        }
      },
      "NotificationLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "NotificationLineItem",
          "namespace" : "http://www.casenet.com/NotificationLineItem"
        }
      },
      "NotificationMember" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "NotificationMember",
          "namespace" : "http://www.casenet.com/NotificationMember"
        }
      },
      "PhoneNotification" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationLineItem"
            }
          },
          "notificationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "notifyByPhoneNote" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "member" : {
            "$ref" : "#/components/schemas/NotificationMember"
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "servicingProvider" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "servicingFacility" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "notifyByPhoneDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "PhoneNotification",
          "namespace" : "http://www.casenet.com/PhoneNotification"
        }
      },
      "UpdateAuthorizationAppealRequest" : {
        "required" : [ "ownerUsername", "receivedDate" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "acknowledgementLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateChangeReasonOption" : {
            "type" : "string"
          },
          "dueDateChangeReasonOther" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "verbalNotificationExpeditedDenialDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "urgencyOption" : {
            "type" : "string"
          },
          "reasonOption" : {
            "type" : "string"
          },
          "reasonOther" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "typeOption" : {
            "type" : "string"
          },
          "levelOption" : {
            "type" : "string"
          },
          "ownerUsername" : {
            "type" : "string"
          },
          "methodOption" : {
            "type" : "string"
          },
          "lineItemNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "requestorName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestorTypeOption" : {
            "type" : "string"
          },
          "requestorPrimaryPhone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorAlternatePhone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorEmail" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string"
          },
          "requestorFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "requestorAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "urgencyChangeReasonOption" : {
            "type" : "string"
          },
          "urgencyChangeReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "appealActionPathRequest" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "requestForInformationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealRequestForInformationRequest"
            }
          }
        },
        "xml" : {
          "name" : "UpdateAuthorizationAppealRequest",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationAppealRequest"
        }
      },
      "ActionPathSummary" : {
        "type" : "object",
        "properties" : {
          "taskIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "xml" : {
          "name" : "ActionPathSummary",
          "namespace" : "http://www.casenet.com/ActionPathSummary"
        }
      },
      "CompleteAppealResponse" : {
        "type" : "object",
        "properties" : {
          "warningMessageKey" : {
            "type" : "string"
          },
          "warningMessageParameters" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CreateAppealGlobalOutcomeRequest" : {
        "required" : [ "outcomeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "outcomeDetailOption" : {
            "type" : "string"
          },
          "outcomeOther" : {
            "type" : "string"
          },
          "decision" : {
            "type" : "string"
          },
          "notificationToOption" : {
            "type" : "string"
          },
          "resolutionLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationOfResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionPath" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          },
          "completionDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "AppealReview" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "type" : {
            "type" : "string"
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/AppealReviewer"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "reviewerSpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reviewNotes" : {
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "advisorReviewOutcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "advisorReviewOutcomeOther" : {
            "type" : "string"
          },
          "innerReview" : {
            "$ref" : "#/components/schemas/BaseInnerReview"
          },
          "initiatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "informationReviewed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InformationReviewed"
            }
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemLite"
            }
          },
          "additionalRequestedInformation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdditionalInfoRequested"
            }
          }
        },
        "xml" : {
          "name" : "AppealReview",
          "namespace" : "http://www.casenet.com/AppealReview"
        }
      },
      "AppealTask" : {
        "required" : [ "activity", "assignedTo", "assigneeType", "dueDate", "instanceId", "priority", "status" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "instanceId" : {
            "type" : "string"
          },
          "assignedTo" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "AssigneeType",
              "namespace" : "http://www.casenet.com/AssigneeType"
            },
            "enum" : [ "user", "queue" ]
          },
          "activity" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AppealTask",
          "namespace" : "http://www.casenet.com/AppealTask"
        }
      },
      "UpdateAppealOutcomeRequest" : {
        "required" : [ "lineItemUnderReviewId", "outcomeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "outcomeDetailOption" : {
            "type" : "string"
          },
          "outcomeOther" : {
            "type" : "string"
          },
          "decision" : {
            "type" : "string"
          },
          "notificationToOption" : {
            "type" : "string"
          },
          "resolutionLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationOfResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionPath" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItemUnderReviewId" : {
            "type" : "string"
          },
          "additionalLineItemIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "CreateAppealOutcomeRequest" : {
        "required" : [ "lineItemUnderReviewId", "outcomeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "outcomeOption" : {
            "type" : "string"
          },
          "outcomeDetailOption" : {
            "type" : "string"
          },
          "outcomeOther" : {
            "type" : "string"
          },
          "decision" : {
            "type" : "string"
          },
          "notificationToOption" : {
            "type" : "string"
          },
          "resolutionLetterSentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verbalNotificationOfResolutionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "actionPath" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          },
          "lineItemUnderReviewId" : {
            "type" : "string"
          },
          "additionalLineItemIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "AppealReviewRequest" : {
        "required" : [ "lineItemNumberUnderReview", "lineItemNumbers", "reviewType", "reviewerSpecialtyOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reviewType" : {
            "type" : "string",
            "enum" : [ "CLINICAL_REVIEW", "ADVISOR_REVIEW" ]
          },
          "baseAppealReviewerRequest" : {
            "$ref" : "#/components/schemas/BaseAppealReviewerRequest"
          },
          "reviewInitiatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerSpecialtyOption" : {
            "type" : "string"
          },
          "lineItemNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "lineItemNumberUnderReview" : {
            "type" : "integer",
            "format" : "int32"
          },
          "advisorReviewOutcomeOption" : {
            "type" : "string"
          },
          "advisorReviewOutcomeOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "informationReviewedList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InformationReviewedRequest"
            }
          },
          "baseInnerReviewRequest" : {
            "$ref" : "#/components/schemas/BaseInnerReviewRequest"
          },
          "reviewNotes" : {
            "maxLength" : 5000,
            "minLength" : 0,
            "type" : "string"
          },
          "rationale" : {
            "type" : "string"
          },
          "requestForInformationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealRequestForInformationRequest"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "BaseAppealReviewerRequest" : {
        "type" : "object"
      },
      "CreateAppealReviewRequest" : {
        "type" : "object",
        "properties" : {
          "appealReviewRequest" : {
            "$ref" : "#/components/schemas/AppealReviewRequest"
          },
          "appealActionPathRequest" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          }
        }
      },
      "InformationReviewedRequest" : {
        "type" : "object",
        "properties" : {
          "informationReviewedOption" : {
            "type" : "string"
          },
          "informationReviewedOther" : {
            "type" : "string"
          }
        }
      },
      "CreateAppealNotificationRequest" : {
        "required" : [ "appealVersion", "lineItemIds" ],
        "type" : "object",
        "properties" : {
          "lineItemIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createPhoneNotificationRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
            }
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "appealVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taskId" : {
            "type" : "string"
          }
        }
      },
      "UpdateAppealReviewRequest" : {
        "type" : "object",
        "properties" : {
          "appealReviewRequest" : {
            "$ref" : "#/components/schemas/AppealReviewRequest"
          },
          "appealActionPathRequest" : {
            "$ref" : "#/components/schemas/AppealActionPathRequest"
          },
          "taskId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AuthorizationAppealConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "AuthorizationAppealConfiguration",
          "namespace" : "http://www.casenet.com/AuthorizationAppealConfiguration"
        }
      },
      "AppealTasksBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "appealTasksBhpSetupList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppealTasksBhpSetup"
            }
          }
        }
      },
      "AppealTasksBhpSetup" : {
        "type" : "object",
        "properties" : {
          "taskType" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealActivity",
              "namespace" : "http://www.casenet.com/AppealActivity"
            },
            "enum" : [ "APPEAL_CLINICAL_REVIEW", "APPEAL_ADVISOR_REVIEW", "APPEAL_OUTCOME", "APPEAL_NOTIFICATION", "APPEAL_EVALUATE_ADVISOR_REVIEW_TASK" ]
          },
          "queue" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "jbpmTaskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDateOffsetType" : {
            "type" : "string",
            "enum" : [ "HOURS", "CALENDAR_DAYS", "BUSINESS_DAYS" ]
          },
          "dueDateOffsetFrom" : {
            "type" : "string",
            "enum" : [ "APPEAL_RECEIVED_DATE", "APPEAL_ADVISOR_REVIEW_INITIATED_DATE", "APPEAL_CREATED_DATE", "APPEAL_REVIEW_INITIATED_DATE", "APPEAL_REVIEW_COMPLETED_DATE", "OUTCOME_RECORDED_DATE" ]
          },
          "taskDescription" : {
            "type" : "string"
          }
        }
      },
      "UpdateDraftAuthorizationRequest" : {
        "required" : [ "authorizationVersion" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateLineItemRequest"
            }
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/AuthorizationHeaderRequest"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemRequest"
            }
          }
        }
      },
      "InpatientAuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          },
          "admissionTypeOption" : {
            "type" : "string"
          },
          "admissionSourceOption" : {
            "type" : "string"
          },
          "overallPosOption" : {
            "type" : "string"
          },
          "targetAdmitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "targetDischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/InpatientAuthorizationHeaderRequest"
        }
      },
      "ServicingFacilityRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "servicingFacilityLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "servicingFacilitySpecialtyOption" : {
            "type" : "string"
          },
          "servicingFacilityPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "servicingFacilityPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          }
        },
        "xml" : {
          "name" : "ServicingFacilityRequest",
          "namespace" : "http://www.casenet.com/ServicingFacilityRequest"
        }
      },
      "UpdateInpatientAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "updateLineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/AddAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/UpdateActionPathRequest"
          },
          "voidAuthorizationDiagnosisRequest" : {
            "$ref" : "#/components/schemas/VoidAuthorizationDiagnosisRequest"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/InpatientAuthorizationHeaderRequest"
          },
          "servicingFacilityRequest" : {
            "$ref" : "#/components/schemas/ServicingFacilityRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateLineItemRequest"
            }
          }
        },
        "xml" : {
          "name" : "UpdateInpatientAuthorizationRequest",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationRequest"
        }
      },
      "UpdateDraftInpatientAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "updateLineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/UpdateInpatientAuthorizationHeaderRequest"
          },
          "servicingFacilityRequest" : {
            "$ref" : "#/components/schemas/ServicingFacilityRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateLineItemRequest"
            }
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemRequest"
            }
          }
        }
      },
      "UpdateInpatientAuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          },
          "admissionTypeOption" : {
            "type" : "string"
          },
          "admissionSourceOption" : {
            "type" : "string"
          },
          "overallPosOption" : {
            "type" : "string"
          },
          "targetAdmitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "targetDischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateInpatientAuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/UpdateInpatientAuthorizationHeaderRequest"
        }
      },
      "CreateRxLineItemRequest" : {
        "required" : [ "placeOfServiceOption", "serviceTypeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "inFormulary" : {
            "type" : "boolean"
          },
          "providerLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "providerSpecialtyOption" : {
            "type" : "string"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "prescribingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "prescribingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "lineItemMedicationInfoRequest" : {
            "$ref" : "#/components/schemas/LineItemMedicationInfoRequest"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "CreateRxLineItemRequest",
          "namespace" : "http://www.casenet.com/CreateRxLineItemRequest"
        }
      },
      "LineItemMedicationInfoRequest" : {
        "required" : [ "drugId", "frequencyOption", "quantity" ],
        "type" : "object",
        "properties" : {
          "drugId" : {
            "type" : "string"
          },
          "frequencyOption" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "quantity" : {
            "maximum" : 999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "LineItemMedicationInfoRequest",
          "namespace" : "http://www.casenet.com/LineItemMedicationInfoRequest"
        }
      },
      "UpdateDraftRxAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "updateLineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/UpdateRxAuthorizationHeaderRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateRxLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateRxLineItemRequest"
            }
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemRequest"
            }
          }
        }
      },
      "UpdateRxAuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateRxAuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/UpdateRxAuthorizationHeaderRequest"
        }
      },
      "UpdateRxLineItemRequest" : {
        "required" : [ "serviceTypeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "inFormulary" : {
            "type" : "boolean"
          },
          "providerLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "providerSpecialtyOption" : {
            "type" : "string"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "prescribingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "prescribingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "lineItemMedicationInfoRequest" : {
            "$ref" : "#/components/schemas/LineItemMedicationInfoRequest"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "UpdateRxLineItemRequest",
          "namespace" : "http://www.casenet.com/UpdateRxLineItemRequest"
        }
      },
      "AddRxLineItemRequest" : {
        "required" : [ "placeOfServiceOption", "serviceTypeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "inFormulary" : {
            "type" : "boolean"
          },
          "providerLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "providerSpecialtyOption" : {
            "type" : "string"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "prescribingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "prescribingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "lineItemMedicationInfoRequest" : {
            "$ref" : "#/components/schemas/LineItemMedicationInfoRequest"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "AddRxLineItemRequest",
          "namespace" : "http://www.casenet.com/AddRxLineItemRequest"
        }
      },
      "RxAuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RxAuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/RxAuthorizationHeaderRequest"
        }
      },
      "UpdateRxAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "updateLineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/AddAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/UpdateActionPathRequest"
          },
          "voidAuthorizationDiagnosisRequest" : {
            "$ref" : "#/components/schemas/VoidAuthorizationDiagnosisRequest"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/RxAuthorizationHeaderRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddRxLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateRxLineItemRequest"
            }
          }
        },
        "xml" : {
          "name" : "UpdateRxAuthorizationRequest",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationRequest"
        }
      },
      "AddServiceProcedureLineItemRequest" : {
        "required" : [ "placeOfServiceOption", "requestedUnits", "serviceTypeOption", "unitTypeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "primaryProcedure" : {
            "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
          },
          "additionalProcedures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
            }
          },
          "requestedUnits" : {
            "maximum" : 999999999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "unitTypeOption" : {
            "type" : "string"
          },
          "providerLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "providerSpecialtyOption" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "servicingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "servicingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "authBy" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizedByType",
              "namespace" : "http://www.casenet.com/AuthorizedByType"
            },
            "enum" : [ "GROUP", "SPECIALTY", "PROVIDER", "PROCEDURE_CODE" ]
          },
          "clinicalReviewRequired" : {
            "type" : "boolean"
          },
          "treatmentTypeOption" : {
            "type" : "string"
          },
          "plCodeOption" : {
            "type" : "string"
          },
          "locationCodeNaturalId" : {
            "type" : "string"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "lineItemMedicationInfoRequest" : {
            "$ref" : "#/components/schemas/SPLineItemMedicationInfoRequest"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "AddServiceProcedureLineItemRequest",
          "namespace" : "http://www.casenet.com/AddServiceProcedureLineItemRequest"
        }
      },
      "SPLineItemMedicationInfoRequest" : {
        "required" : [ "drugId", "frequencyOption", "quantity" ],
        "type" : "object",
        "properties" : {
          "drugId" : {
            "type" : "string"
          },
          "frequencyOption" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "quantity" : {
            "maximum" : 999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "prescribedDose" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "routeOption" : {
            "type" : "string"
          },
          "routeOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SPLineItemMedicationInfoRequest",
          "namespace" : "http://www.casenet.com/SPLineItemMedicationInfoRequest"
        }
      },
      "ServiceProcedureAuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceProcedureAuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/ServiceProcedureAuthorizationHeaderRequest"
        }
      },
      "UpdateServiceProcedureAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "updateLineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/AddAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/UpdateActionPathRequest"
          },
          "voidAuthorizationDiagnosisRequest" : {
            "$ref" : "#/components/schemas/VoidAuthorizationDiagnosisRequest"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/ServiceProcedureAuthorizationHeaderRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddServiceProcedureLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateServiceProcedureLineItemRequest"
            }
          }
        },
        "xml" : {
          "name" : "UpdateServiceProcedureAuthorizationRequest",
          "namespace" : "http://www.casenet.com/UpdateAuthorizationRequest"
        }
      },
      "UpdateServiceProcedureLineItemRequest" : {
        "required" : [ "placeOfServiceOption", "requestedUnits", "serviceTypeOption", "unitTypeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "primaryProcedure" : {
            "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
          },
          "additionalProcedures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
            }
          },
          "requestedUnits" : {
            "maximum" : 999999999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "unitTypeOption" : {
            "type" : "string"
          },
          "providerLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "providerSpecialtyOption" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "authBy" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizedByType",
              "namespace" : "http://www.casenet.com/AuthorizedByType"
            },
            "enum" : [ "GROUP", "SPECIALTY", "PROVIDER", "PROCEDURE_CODE" ]
          },
          "clinicalReviewRequired" : {
            "type" : "boolean"
          },
          "treatmentTypeOption" : {
            "type" : "string"
          },
          "plCodeOption" : {
            "type" : "string"
          },
          "locationCodeNaturalId" : {
            "type" : "string"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "lineItemMedicationInfoRequest" : {
            "$ref" : "#/components/schemas/SPLineItemMedicationInfoRequest"
          },
          "servicingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "servicingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "UpdateServiceProcedureLineItemRequest",
          "namespace" : "http://www.casenet.com/UpdateServiceProcedureLineItemRequest"
        }
      },
      "CreateServiceProcedureLineItemRequest" : {
        "required" : [ "placeOfServiceOption", "requestedUnits", "serviceTypeOption", "unitTypeOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "primaryProcedure" : {
            "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
          },
          "additionalProcedures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifiedProcedureCodeNaturalId"
            }
          },
          "requestedUnits" : {
            "maximum" : 999999999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "unitTypeOption" : {
            "type" : "string"
          },
          "providerLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "providerSpecialtyOption" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "servicingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "servicingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "authBy" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizedByType",
              "namespace" : "http://www.casenet.com/AuthorizedByType"
            },
            "enum" : [ "GROUP", "SPECIALTY", "PROVIDER", "PROCEDURE_CODE" ]
          },
          "clinicalReviewRequired" : {
            "type" : "boolean"
          },
          "treatmentTypeOption" : {
            "type" : "string"
          },
          "plCodeOption" : {
            "type" : "string"
          },
          "locationCodeNaturalId" : {
            "type" : "string"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "lineItemMedicationInfoRequest" : {
            "$ref" : "#/components/schemas/SPLineItemMedicationInfoRequest"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "CreateServiceProcedureLineItemRequest",
          "namespace" : "http://www.casenet.com/CreateServiceProcedureLineItemRequest"
        }
      },
      "UpdateDraftServiceProcedureAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "updateLineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/UpdateServiceProcedureAuthorizationHeaderRequest"
          },
          "servicingFacilityRequest" : {
            "$ref" : "#/components/schemas/ServicingFacilityRequest"
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateServiceProcedureLineItemRequest"
            }
          },
          "updateLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateServiceProcedureLineItemRequest"
            }
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItemRequest"
            }
          }
        }
      },
      "UpdateServiceProcedureAuthorizationHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "requestMethodOption" : {
            "type" : "string"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "ownerUsername" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateServiceProcedureAuthorizationHeaderRequest",
          "namespace" : "http://www.casenet.com/UpdateServiceProcedureAuthorizationHeaderRequest"
        }
      },
      "AuthorizationDischargeRequest" : {
        "type" : "object",
        "properties" : {
          "dischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "verified" : {
            "type" : "boolean"
          },
          "dischargeStatusOption" : {
            "type" : "string"
          },
          "dischargeDispositionOption" : {
            "type" : "string"
          },
          "qualityOfCareIssue" : {
            "type" : "string",
            "xml" : {
              "name" : "UserOptionEnum",
              "namespace" : "http://www.casenet.com/UserOptionEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "qualityOfCareDetails" : {
            "maxLength" : 4000,
            "minLength" : 0,
            "type" : "string"
          },
          "dischargeDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateAuthorizationDiagnosisRequest"
          }
        },
        "xml" : {
          "name" : "AuthorizationDischargeRequest",
          "namespace" : "http://www.casenet.com/AuthorizationDischargeRequest"
        }
      },
      "CreateAuthorizationDiagnosisRequest" : {
        "type" : "object",
        "properties" : {
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          }
        },
        "xml" : {
          "name" : "CreateAuthorizationDiagnosisRequest",
          "namespace" : "http://www.casenet.com/CreateAuthorizationDiagnosisRequest"
        }
      },
      "InpatientAuthorizationRequest" : {
        "required" : [ "lineItems" ],
        "type" : "object",
        "properties" : {
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "preScreenNoteInstanceId" : {
            "type" : "string"
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/InpatientAuthorizationHeaderRequest"
          },
          "servicingFacilityRequest" : {
            "$ref" : "#/components/schemas/ServicingFacilityRequest"
          },
          "dischargeRequest" : {
            "$ref" : "#/components/schemas/AuthorizationDischargeRequest"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationRequest",
          "namespace" : "http://www.casenet.com/AuthorizationRequest"
        }
      },
      "RxAuthorizationRequest" : {
        "required" : [ "lineItems" ],
        "type" : "object",
        "properties" : {
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "preScreenNoteInstanceId" : {
            "type" : "string"
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/RxAuthorizationHeaderRequest"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateRxLineItemRequest"
            }
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "RxAuthorizationRequest",
          "namespace" : "http://www.casenet.com/AuthorizationRequest"
        }
      },
      "ServiceProcedureAuthorizationRequest" : {
        "required" : [ "lineItems" ],
        "type" : "object",
        "properties" : {
          "authDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateCommonAuthorizationDiagnosisRequest"
          },
          "requestingProviderRequest" : {
            "$ref" : "#/components/schemas/RequestingProviderRequest"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "preScreenNoteInstanceId" : {
            "type" : "string"
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "authorizationHeaderRequest" : {
            "$ref" : "#/components/schemas/ServiceProcedureAuthorizationHeaderRequest"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateServiceProcedureLineItemRequest"
            }
          },
          "newLineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ServiceProcedureAuthorizationRequest",
          "namespace" : "http://www.casenet.com/AuthorizationRequest"
        }
      },
      "FollowUp" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "followUpContactScheduled" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "contactScheduledDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "transportationConfirmed" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "homeServicesRequired" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "dmeRequired" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "medicationPrescribed" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          },
          "memberReferrals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "followUpScheduledFor" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "followUpDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "FollowUp",
          "namespace" : "http://www.casenet.com/FollowUp"
        }
      },
      "UpdateFollowUpRequest" : {
        "type" : "object",
        "properties" : {
          "followUpContactScheduled" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "contactScheduledDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "transportationConfirmed" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "homeServicesRequired" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "dmeRequired" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "medicationPrescribed" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "memberReferralOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scheduledForOption" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "followUpDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "FollowUpRequest",
          "namespace" : "http://www.casenet.com/FollowUpRequest"
        }
      },
      "FollowUpRequest" : {
        "type" : "object",
        "properties" : {
          "followUpContactScheduled" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "contactScheduledDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "transportationConfirmed" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "homeServicesRequired" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "dmeRequired" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "medicationPrescribed" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "memberReferralOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scheduledForOption" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "followUpDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "FollowUpRequest",
          "namespace" : "http://www.casenet.com/FollowUpRequest"
        }
      },
      "InpatientAuthorizationBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "authorizationTypeDisabled" : {
            "type" : "boolean"
          },
          "authorizationTypeDisabledMessage" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "medicalDiagnosisDisabledForBHP" : {
            "type" : "boolean"
          },
          "medicalDiagnosisDisabledForBHPMessage" : {
            "type" : "string"
          },
          "behavioralDiagnosisDisabledForBHP" : {
            "type" : "boolean"
          },
          "behavioralDiagnosisDisabledForBHPMessage" : {
            "type" : "string"
          },
          "mandatoryPrescreenEnabled" : {
            "type" : "boolean"
          },
          "allowPrescreenSkip" : {
            "type" : "boolean"
          },
          "allowSPLineItems" : {
            "type" : "boolean"
          },
          "allowRXLineItems" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationBhpConfiguration",
          "namespace" : "http://www.casenet.com/InpatientAuthorizationBhpConfiguration"
        }
      },
      "InpatientAuthorizationConfiguration" : {
        "type" : "object",
        "properties" : {
          "authorizationDocumentConfiguration" : {
            "$ref" : "#/components/schemas/PortableConfiguration"
          },
          "requestingProviderConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "diagnosisConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "taskActivityValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prescreenNoteEnabled" : {
            "type" : "boolean"
          },
          "prescreenNotesEnabledAuthRequired" : {
            "type" : "boolean"
          },
          "prescreenNotesEnabledAuthNotRequired" : {
            "type" : "boolean"
          },
          "authorizationSpecificContactAddressEnabled" : {
            "type" : "boolean"
          },
          "proxyProviderIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "authorizationHeaderConfiguration" : {
            "$ref" : "#/components/schemas/InpatientAuthorizationHeaderConfiguration"
          },
          "servicingFacilityConfiguration" : {
            "$ref" : "#/components/schemas/ExtendedAttributesConfiguration"
          },
          "codesExpirationAction" : {
            "type" : "string",
            "xml" : {
              "name" : "CodesEffectiveDateConfiguration",
              "namespace" : "http://www.casenet.com/CodesEffectiveDateConfiguration"
            },
            "enum" : [ "IGNORE", "ALLOW_WITH_WARNING", "DISALLOW" ]
          },
          "requestedDaysWarningThreshold" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationConfiguration",
          "namespace" : "http://www.casenet.com/InpatientAuthorizationConfiguration"
        }
      },
      "InpatientAuthorizationHeaderConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "targetDatesRequired" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationHeaderConfiguration",
          "namespace" : "http://www.casenet.com/InpatientAuthorizationHeaderConfiguration"
        }
      },
      "ServicingFacility" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "servicingFacility" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "outOfNetworkReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "servicingFacilitySpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "authSpecificContactName" : {
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "type" : "string"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactPhoneExtension" : {
            "type" : "string"
          },
          "authSpecificContactFax" : {
            "type" : "string"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "servicingFacilityPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "servicingFacilityPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          }
        },
        "xml" : {
          "name" : "ServicingFacility",
          "namespace" : "http://www.casenet.com/ServicingFacility"
        }
      },
      "InpatientAuthorizationHeader" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "stateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canBeDenied" : {
            "type" : "boolean"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "requestSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "caseId" : {
            "type" : "string"
          },
          "authorizationLocks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lock"
            }
          },
          "authorizationDiagnosis" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosis"
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/RequestingProvider"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "appealed" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "admissionType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "admissionSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "overallPos" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "targetAdmitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "targetDischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "losNum" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "firstAdmitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lengthOfStay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationHeader",
          "namespace" : "http://www.casenet.com/AuthorizationHeader"
        }
      },
      "AddAuthorizationDiagnosis" : {
        "type" : "object",
        "properties" : {
          "primaryAdmittingDiagnosisId" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosisCode"
          },
          "diagnosisCodeIdSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationDiagnosisCode"
            }
          }
        },
        "xml" : {
          "name" : "AddAuthorizationDiagnosis",
          "namespace" : "http://www.casenet.com/AddAuthorizationDiagnosis"
        }
      },
      "AuthorizationDiagnosisCode" : {
        "required" : [ "diagnosisCode", "diagnosisCodeType" ],
        "type" : "object",
        "properties" : {
          "diagnosisCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeType",
              "namespace" : "http://www.casenet.com/DiagnosisCodeType"
            },
            "enum" : [ "ICD9", "ICD10" ]
          },
          "diagnosisCode" : {
            "type" : "string"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidReasonOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AuthorizationDiagnosisCode",
          "namespace" : "http://www.casenet.com/AuthorizationDiagnosisCode"
        }
      },
      "AuthorizationDiagnosisRequest" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "addAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/AddAuthorizationDiagnosis"
          },
          "removeAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/RemoveAuthorizationDiagnosis"
          },
          "voidAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/VoidAuthorizationDiagnosis"
          }
        },
        "xml" : {
          "name" : "AuthorizationDiagnosisRequest",
          "namespace" : "http://www.casenet.com/AuthorizationDiagnosisRequest"
        }
      },
      "RemoveAuthorizationDiagnosis" : {
        "type" : "object",
        "properties" : {
          "primaryAdmittingDiagnosisId" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosisCode"
          },
          "diagnosisCodeIdSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationDiagnosisCode"
            }
          }
        },
        "xml" : {
          "name" : "RemoveAuthorizationDiagnosis",
          "namespace" : "http://www.casenet.com/RemoveAuthorizationDiagnosis"
        }
      },
      "VoidAuthorizationDiagnosis" : {
        "type" : "object",
        "properties" : {
          "primaryAdmittingDiagnosisId" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosisCode"
          },
          "diagnosisCodeIdSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationDiagnosisCode"
            }
          }
        },
        "xml" : {
          "name" : "VoidAuthorizationDiagnosis",
          "namespace" : "http://www.casenet.com/VoidAuthorizationDiagnosis"
        }
      },
      "AuthorizationSummaryLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "primaryAdmittingDiagnosis" : {
            "$ref" : "#/components/schemas/DiagnosisCodeLite"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "appealed" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AuthorizationSummaryLite",
          "namespace" : "http://www.casenet.com/AuthorizationSummaryLite"
        }
      },
      "UpdateRequestingProviderRequest" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "requestingProviderLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "requestingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "requestingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "requestingProviderSpecialtyOption" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateRequestingProviderRequest",
          "namespace" : "http://www.casenet.com/UpdateRequestingProviderRequest"
        }
      },
      "ProcedureCodeNaturalId" : {
        "required" : [ "procedureCode", "procedureCodeType" ],
        "type" : "object",
        "properties" : {
          "procedureCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          },
          "procedureCode" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProcedureCodeNaturalId",
          "namespace" : "http://www.casenet.com/ProcedureCodeNaturalId"
        }
      },
      "UpdateInpatientLineItemRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "urgencyRequestedByOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "determination" : {
            "$ref" : "#/components/schemas/DeterminationRequest"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stayLevelOption" : {
            "type" : "string"
          },
          "primaryProcedureCodeId" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "additionalProcedureCodeIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
            }
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "dischargedSameDay" : {
            "type" : "boolean"
          },
          "lineItemType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemType",
              "namespace" : "http://www.casenet.com/UMLineItemType"
            },
            "enum" : [ "IP", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "UpdateInpatientLineItemRequest",
          "namespace" : "http://www.casenet.com/UpdateInpatientLineItemRequest"
        }
      },
      "AddLineItemsToInpatientAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "lineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItems" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLineItemRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          }
        },
        "xml" : {
          "name" : "AddLineItemsToInpatientAuthorizationRequest",
          "namespace" : "http://www.casenet.com/AddLineItemsToInpatientAuthorizationRequest"
        }
      },
      "UpdateServicingFacilityRequest" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "servicingFacilityLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "authSpecificContactName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "oonReasonOption" : {
            "type" : "string"
          },
          "servicingFacilitySpecialtyOption" : {
            "type" : "string"
          },
          "servicingFacilityPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExt"
          },
          "servicingFacilityPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateServicingFacilityRequest",
          "namespace" : "http://www.casenet.com/UpdateServicingFacilityRequest"
        }
      },
      "ReadmissionRequest" : {
        "type" : "object",
        "properties" : {
          "readmitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "readmitReasonOption" : {
            "type" : "string"
          },
          "readmitNotes" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ReadmissionRequest",
          "namespace" : "http://www.casenet.com/ReadmissionRequest"
        }
      },
      "DischargeRequest" : {
        "type" : "object",
        "properties" : {
          "dischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "verified" : {
            "type" : "boolean"
          },
          "dischargeStatusOption" : {
            "type" : "string"
          },
          "dischargeDispositionOption" : {
            "type" : "string"
          },
          "qualityOfCareIssue" : {
            "type" : "string",
            "xml" : {
              "name" : "UserOptionEnum",
              "namespace" : "http://www.casenet.com/UserOptionEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "qualityOfCareDetails" : {
            "maxLength" : 4000,
            "minLength" : 0,
            "type" : "string"
          },
          "dischargeDiagnosisRequest" : {
            "$ref" : "#/components/schemas/CreateAuthorizationDiagnosisRequest"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        },
        "xml" : {
          "name" : "DischargeRequest",
          "namespace" : "http://www.casenet.com/DischargeRequest"
        }
      },
      "CreateDischargeDiagnosisRequest" : {
        "type" : "object"
      },
      "AuthorizationReopening" : {
        "type" : "object",
        "properties" : {
          "reopenDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "AuthorizationReopening",
          "namespace" : "http://www.casenet.com/AuthorizationReopening"
        }
      },
      "DischargeSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "dischargeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dischargeDisposition" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "primaryDiagnosis" : {
            "$ref" : "#/components/schemas/DiagnosisCodeLite"
          },
          "primaryAxisI" : {
            "$ref" : "#/components/schemas/DiagnosisCodeLite"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        },
        "xml" : {
          "name" : "DischargeSummary",
          "namespace" : "http://www.casenet.com/DischargeSummary"
        }
      },
      "AuthorizationAppeal" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "appealNumber" : {
            "type" : "string"
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "appealDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "appealUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appealReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appealReasonOther" : {
            "type" : "string"
          },
          "appealType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "outcome" : {
            "$ref" : "#/components/schemas/AppealGlobalOutcome"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        },
        "xml" : {
          "name" : "AuthorizationAppeal",
          "namespace" : "http://www.casenet.com/AuthorizationAppeal"
        }
      },
      "AuthorizationReadmission" : {
        "type" : "object",
        "properties" : {
          "readmitDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "readmitReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "readmitNotes" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        },
        "xml" : {
          "name" : "AuthorizationReadmission",
          "namespace" : "http://www.casenet.com/AuthorizationReadmission"
        }
      },
      "PortalAuthorizationSearchAuthorization" : {
        "type" : "object",
        "properties" : {
          "authorizationIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "authorizationType" : {
            "type" : "string"
          },
          "internalMemberId" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinationStatus" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "requestingProvider" : {
            "type" : "string"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "unitCountRequested" : {
            "type" : "integer",
            "format" : "int32"
          },
          "diagnosisType" : {
            "type" : "string"
          },
          "servicingFacility" : {
            "type" : "string"
          },
          "primaryDiagnosisCode" : {
            "type" : "string"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalAuthorizationSearchLineItem"
            }
          }
        },
        "xml" : {
          "name" : "PortalAuthorizationSearchAuthorization",
          "namespace" : "http://www.casenet.com/PortalAuthorizationSearchAuthorization"
        }
      },
      "PortalAuthorizationSearchLineItem" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "lineItemId" : {
            "type" : "string"
          },
          "lineItemType" : {
            "type" : "string"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "requestedDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stayLevel" : {
            "type" : "string"
          },
          "determinationStatus" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "diagnosisName" : {
            "type" : "string"
          },
          "servicingProvider" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string"
          },
          "procedureCode" : {
            "type" : "string"
          },
          "procedureName" : {
            "type" : "string"
          },
          "lengthOfStay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountRequested" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountApproved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDenied" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitCountDetermined" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PortalAuthorizationSearchLineItem",
          "namespace" : "http://www.casenet.com/PortalAuthorizationSearchLineItem"
        }
      },
      "PortalAuthorizationSearchResults" : {
        "type" : "object",
        "properties" : {
          "authorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalAuthorizationSearchAuthorization"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PortalAuthorizationSearchResults",
          "namespace" : "http://www.casenet.com/PortalAuthorizationSearchResults"
        }
      },
      "PortalAuthorizationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "memberIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberId"
            }
          },
          "authorizationNumber" : {
            "type" : "string"
          },
          "authorizationType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationSortField",
              "namespace" : "http://www.casenet.com/UMAuthorizationSortField"
            },
            "enum" : [ "AUTHORIZATION_NUM", "FROM_DATE", "UPDATED_DATE", "END_DATE", "STATUS", "STATE", "MEMBER_NAME", "MEMBER_EXTERNAL_ID", "REQUESTING_PROVIDER", "FACILITY_PROVIDER", "DIAGNOSIS_CODE", "DIAGNOSIS_NAME" ]
          },
          "asc" : {
            "type" : "boolean"
          },
          "includeClosed" : {
            "type" : "boolean"
          },
          "userSubmittedOnly" : {
            "type" : "boolean"
          },
          "ipSrvType" : {
            "type" : "string"
          },
          "spSrvType" : {
            "type" : "string"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          }
        },
        "xml" : {
          "name" : "PortalAuthorizationSearchCriteria",
          "namespace" : "http://www.casenet.com/PortalAuthorizationSearchCriteria"
        }
      },
      "RxAuthorizationHeader" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "stateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canBeDenied" : {
            "type" : "boolean"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "requestSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "caseId" : {
            "type" : "string"
          },
          "authorizationLocks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lock"
            }
          },
          "authorizationDiagnosis" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosis"
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/RequestingProvider"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "appealed" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "RxAuthorizationHeader",
          "namespace" : "http://www.casenet.com/AuthorizationHeader"
        }
      },
      "AddRxLineItemToAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "lineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItems" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddRxLineItemRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          }
        },
        "xml" : {
          "name" : "AddRxLineItemToAuthorizationRequest",
          "namespace" : "http://www.casenet.com/AddRxLineItemToAuthorizationRequest"
        }
      },
      "Drug" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "ndc" : {
            "type" : "string"
          },
          "route" : {
            "type" : "string"
          },
          "dosage" : {
            "type" : "string"
          },
          "dosageUnits" : {
            "type" : "string"
          },
          "medispanDrugClassName" : {
            "type" : "string"
          },
          "medispanDrugClassId" : {
            "type" : "string"
          },
          "doseForm" : {
            "type" : "string"
          },
          "nameTypeCode" : {
            "type" : "string",
            "enum" : [ "GENERIC", "BRANDED_GENERIC", "TRADEMARKED" ]
          },
          "fullDosage" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Drug",
          "namespace" : "http://www.casenet.com/Drug"
        }
      },
      "LineItemMedicationInfo" : {
        "type" : "object",
        "properties" : {
          "medicationCodeId" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "drug" : {
            "$ref" : "#/components/schemas/Drug"
          }
        },
        "xml" : {
          "name" : "LineItemMedicationInfo",
          "namespace" : "http://www.casenet.com/LineItemMedicationInfo"
        }
      },
      "RxLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationId" : {
            "type" : "string"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "clinicalReviewRequired" : {
            "type" : "boolean"
          },
          "advisorReviewRequired" : {
            "type" : "boolean"
          },
          "extension" : {
            "type" : "boolean"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lineItemType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appliedEligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "determinationDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "recommendedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determination" : {
            "$ref" : "#/components/schemas/Determination"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "breAutoApprovable" : {
            "type" : "boolean"
          },
          "productFeatureExternalIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "placeOfService" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "umLineItemMedicationInfo" : {
            "$ref" : "#/components/schemas/LineItemMedicationInfo"
          },
          "inFormulary" : {
            "type" : "boolean"
          },
          "servicingProviderType" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "type" : "string"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "servicingProviderSpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "oonReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "pharmacyProgram" : {
            "type" : "string"
          },
          "prescribingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "prescribingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "servicingProvider" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "unitsToDetermine" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "RxLineItem",
          "namespace" : "http://www.casenet.com/LineItem"
        }
      },
      "SPLineItemMedicationInfo" : {
        "type" : "object",
        "properties" : {
          "medicationCodeId" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "drug" : {
            "$ref" : "#/components/schemas/Drug"
          },
          "routeOther" : {
            "type" : "string"
          },
          "prescribedDose" : {
            "type" : "string"
          },
          "route" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "SPLineItemMedicationInfo",
          "namespace" : "http://www.casenet.com/SPLineItemMedicationInfo"
        }
      },
      "ServiceProcedureLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationId" : {
            "type" : "string"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "clinicalReviewRequired" : {
            "type" : "boolean"
          },
          "advisorReviewRequired" : {
            "type" : "boolean"
          },
          "extension" : {
            "type" : "boolean"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lineItemType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "appliedEligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "determinationDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "recommendedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determination" : {
            "$ref" : "#/components/schemas/Determination"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMLineItemStatus",
              "namespace" : "http://www.casenet.com/UMLineItemStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND", "NO_DECISION", "REVIEWED" ]
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "breAutoApprovable" : {
            "type" : "boolean"
          },
          "productFeatureExternalIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "placeOfService" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "originalRequestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "treatmentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "plCode" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "oonReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "guidelines" : {
            "type" : "string"
          },
          "authBy" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizedByType",
              "namespace" : "http://www.casenet.com/AuthorizedByType"
            },
            "enum" : [ "GROUP", "SPECIALTY", "PROVIDER", "PROCEDURE_CODE" ]
          },
          "locationCode" : {
            "$ref" : "#/components/schemas/LocationCode"
          },
          "servicingProviderType" : {
            "type" : "string"
          },
          "authSpecificContactName" : {
            "type" : "string"
          },
          "authSpecificContactPhone" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "authSpecificContactPhoneI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "servicingProviderPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "servicingProviderPhoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactFax" : {
            "type" : "string"
          },
          "authSpecificContactFaxI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "authSpecificContactAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "useAuthSpecificContactAddressForCorrespondence" : {
            "type" : "boolean"
          },
          "servicingProviderSpecialty" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "umLineItemMedicationInfo" : {
            "$ref" : "#/components/schemas/SPLineItemMedicationInfo"
          },
          "servicingProvider" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "primaryProcedure" : {
            "$ref" : "#/components/schemas/Procedure"
          },
          "procedures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Procedure"
            }
          },
          "unitsToDetermine" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ServiceProcedureLineItem",
          "namespace" : "http://www.casenet.com/LineItem"
        }
      },
      "ServiceProcedureAuthorizationHeader" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SimpleAttributeValueObject"
            }
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "authorizationState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "stateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canBeDenied" : {
            "type" : "boolean"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "requestSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "requestMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "levelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "urgencyRequestedBy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "continuityOfCare" : {
            "type" : "boolean"
          },
          "courtOrdered" : {
            "type" : "boolean"
          },
          "eligibleVerified" : {
            "type" : "boolean"
          },
          "singleCaseAgreement" : {
            "type" : "boolean"
          },
          "caseId" : {
            "type" : "string"
          },
          "authorizationLocks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lock"
            }
          },
          "authorizationDiagnosis" : {
            "$ref" : "#/components/schemas/AuthorizationDiagnosis"
          },
          "requestingProvider" : {
            "$ref" : "#/components/schemas/RequestingProvider"
          },
          "requestedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "approvedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deniedUnits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "appealed" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "locked" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ServiceProcedureAuthorizationHeader",
          "namespace" : "http://www.casenet.com/AuthorizationHeader"
        }
      },
      "AddServiceProcedureLineItemToAuthorizationRequest" : {
        "required" : [ "authorizationVersion", "lineItems" ],
        "type" : "object",
        "properties" : {
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItems" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddServiceProcedureLineItemRequest"
            }
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/ActionPathRequest"
          }
        },
        "xml" : {
          "name" : "AddServiceProcedureLineItemToAuthorizationRequest",
          "namespace" : "http://www.casenet.com/AddServiceProcedureLineItemToAuthorizationRequest"
        }
      },
      "InterqualTransitionPlan" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "transitionPlanId" : {
            "type" : "string"
          },
          "currentChecklist" : {
            "$ref" : "#/components/schemas/InterqualTransitionPlanChecklist"
          },
          "interqualTransitionPlanChecklists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InterqualTransitionPlanChecklist"
            }
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "InterqualTransitionPlanChecklist" : {
        "type" : "object",
        "properties" : {
          "checkListId" : {
            "type" : "string"
          },
          "criteriaExternalXMLInfo" : {
            "type" : "string"
          },
          "source" : {
            "$ref" : "#/components/schemas/UMInterqualReviewSource"
          },
          "notes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "COMPLETE" ]
          },
          "checklistXmlMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UMInterqualReviewSource" : {
        "type" : "object",
        "properties" : {
          "umInterqualReviewSourceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "UMInterqualReviewSourceEnum",
              "namespace" : "http://www.casenet.com/UMInterqualReviewSourceEnum"
            },
            "enum" : [ "REVIEW_MANAGER", "IQCONNECT" ]
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "TransitionPlanNoteRequest" : {
        "type" : "object",
        "properties" : {
          "transitionPlanId" : {
            "type" : "string"
          },
          "checklistId" : {
            "type" : "string"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        }
      },
      "CarePlanBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "interventionTaskRequired" : {
            "type" : "boolean"
          },
          "memberAcknowledgementRequired" : {
            "type" : "boolean"
          },
          "memberAcknowledgementText" : {
            "type" : "string"
          },
          "reopenable" : {
            "type" : "boolean"
          },
          "subComponentsClosureRequired" : {
            "type" : "boolean"
          },
          "actionTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "carePlanDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CarePlanDefinition"
            }
          }
        }
      },
      "CarePlanDefinition" : {
        "type" : "object",
        "properties" : {
          "conditionDefinitionName" : {
            "type" : "string"
          },
          "conditionDefinitionId" : {
            "type" : "string"
          },
          "conditionDefinitionVisibleId" : {
            "type" : "string"
          },
          "resourceName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "lineageIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "userPermissions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Actions",
                "namespace" : "http://www.casenet.com/Actions"
              },
              "enum" : [ "CREATE", "EDIT", "VIEW", "CLAIM", "ASSIGN" ]
            }
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          }
        }
      },
      "CurrencyBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "defaultCurrency" : {
            "type" : "string",
            "enum" : [ "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STD", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "UYI", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL" ]
          },
          "supportedCurrencies" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STD", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "UYI", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWL" ]
            }
          }
        }
      },
      "AuthorizationBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "inpatientAuthorizationBhpConfiguration" : {
            "$ref" : "#/components/schemas/InpatientAuthorizationBhpConfiguration"
          },
          "serviceProcedureAuthorizationBhpConfiguration" : {
            "$ref" : "#/components/schemas/ServiceProcedureAuthorizationBhpConfiguration"
          },
          "rxAuthorizationBhpConfiguration" : {
            "$ref" : "#/components/schemas/RxAuthorizationBhpConfiguration"
          },
          "serviceRequestDisabledInAuthorizationSummary" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AuthorizationBhpConfiguration",
          "namespace" : "http://www.casenet.com/AuthorizationBhpConfiguration"
        }
      },
      "BhpNodeSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "nameFullPath" : {
            "type" : "string"
          },
          "feedId" : {
            "type" : "string"
          },
          "feedFullPath" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "BhpNodeType",
              "namespace" : "http://www.casenet.com/BhpNodeType"
            },
            "enum" : [ "PRIMARY_ENTITY", "LINE_OF_BUSINESS", "REGION", "PRODUCT", "RISK_POPULATION", "EMPLOYER", "SUB_REGION", "DIVISION", "FUNCTION" ]
          },
          "isLeaf" : {
            "type" : "boolean"
          },
          "isAccessible" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "BhpNodeSearchResult",
          "namespace" : "http://www.casenet.com/BhpNodeSearchResult"
        }
      },
      "BhpNodeSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BhpNodeSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "BhpNodeSearchResults",
          "namespace" : "http://www.casenet.com/BhpNodeSearchResults"
        }
      },
      "BhpNodeCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "bhpNodeName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "leafsOnly" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BhpNodeSortField"
            }
          }
        },
        "xml" : {
          "name" : "BhpNodeCriteria",
          "namespace" : "http://www.casenet.com/BhpNodeCriteria"
        }
      },
      "BhpNodeSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "BhpNodeSortColumn",
              "namespace" : "http://www.casenet.com/BhpNodeSortColumn"
            },
            "enum" : [ "NAME", "NAME_FULL_PATH", "FEED_ID", "FEED_FULL_PATH", "TYPE" ]
          }
        },
        "xml" : {
          "name" : "BhpNodeSortField",
          "namespace" : "http://www.casenet.com/BhpNodeSortField"
        }
      },
      "AuthorizationId" : {
        "required" : [ "authorizationIdType", "id" ],
        "type" : "object",
        "properties" : {
          "authorizationIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizationIdType",
              "namespace" : "http://www.casenet.com/AuthorizationIdType"
            },
            "enum" : [ "INTERNAL_ID", "AUTHORIZATION_NUMBER", "TRACKING_NUMBER" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AuthorizationId",
          "namespace" : "http://www.casenet.com/AuthorizationId"
        }
      },
      "BirthEventRequest" : {
        "required" : [ "fiveMinuteApgar", "oneMinuteApgar" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "motherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherMemberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "babyFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyMemberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "fatherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "fatherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyAuthorizationId" : {
            "$ref" : "#/components/schemas/AuthorizationId"
          },
          "babyMedicaidId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "deliveryAuthorizationId" : {
            "$ref" : "#/components/schemas/AuthorizationId"
          },
          "deliveryTypeOption" : {
            "type" : "string"
          },
          "scheduledDelivery" : {
            "type" : "boolean"
          },
          "lastMenstrualPeriod" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "birthDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "genderOption" : {
            "type" : "string"
          },
          "birthOrderOption" : {
            "type" : "string"
          },
          "birthWeightGrams" : {
            "maximum" : 16000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gestationalAgeWeeks" : {
            "maximum" : 99,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gestationalAgeDays" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "oneMinuteApgar" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "fiveMinuteApgar" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "birthStatusOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "BirthEventRequest",
          "namespace" : "http://www.casenet.com/BirthEventRequest"
        }
      },
      "LocalDateTime" : {
        "type" : "object",
        "properties" : {
          "displayString" : {
            "type" : "string"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          },
          "future" : {
            "type" : "boolean"
          },
          "past" : {
            "type" : "boolean"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateBirthEventRequest" : {
        "required" : [ "fiveMinuteApgar", "oneMinuteApgar", "version" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "motherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherMemberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "babyFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyMemberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "fatherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "fatherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyAuthorizationId" : {
            "$ref" : "#/components/schemas/AuthorizationId"
          },
          "babyMedicaidId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "deliveryAuthorizationId" : {
            "$ref" : "#/components/schemas/AuthorizationId"
          },
          "deliveryTypeOption" : {
            "type" : "string"
          },
          "scheduledDelivery" : {
            "type" : "boolean"
          },
          "lastMenstrualPeriod" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "birthDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "genderOption" : {
            "type" : "string"
          },
          "birthOrderOption" : {
            "type" : "string"
          },
          "birthWeightGrams" : {
            "maximum" : 16000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gestationalAgeWeeks" : {
            "maximum" : 99,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gestationalAgeDays" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "oneMinuteApgar" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "fiveMinuteApgar" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "birthStatusOption" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateBirthEventRequest",
          "namespace" : "http://www.casenet.com/UpdateBirthEventRequest"
        }
      },
      "BirthEvent" : {
        "required" : [ "fiveMinuteApgar", "oneMinuteApgar" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "motherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherMember" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "babyFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyMember" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "fatherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "fatherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyAuthorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "babyMedicaidId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "deliveryAuthorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "deliveryType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "scheduledDelivery" : {
            "type" : "boolean"
          },
          "lastMenstrualPeriod" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "birthDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "birthOrder" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "birthWeightGrams" : {
            "maximum" : 16000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gestationalAgeWeeks" : {
            "maximum" : 99,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "gestationalAgeDays" : {
            "maximum" : 6,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "oneMinuteApgar" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "fiveMinuteApgar" : {
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "birthStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "BirthEvent",
          "namespace" : "http://www.casenet.com/BirthEvent"
        }
      },
      "MemberLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "memberFullName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberLite",
          "namespace" : "http://www.casenet.com/MemberLite"
        }
      },
      "BirthEventSummary" : {
        "required" : [ "birthEventId" ],
        "type" : "object",
        "properties" : {
          "birthEventId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "babyFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "babyMember" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "birthDate" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "babyGender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "babyAuthorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "babyAuthDiagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "motherFirstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherLastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "motherMember" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "deliveryAuthorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "deliveryAuthDiagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "BirthEventSummary",
          "namespace" : "http://www.casenet.com/BirthEventSummary"
        }
      },
      "CareOpportunityConfiguration" : {
        "type" : "object",
        "properties" : {
          "riskCategoryOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "CareOpportunityConfiguration",
          "namespace" : "http://www.casenet.com/CareOpportunityConfiguration"
        }
      },
      "CareOpportunityMemberConfiguration" : {
        "type" : "object",
        "properties" : {
          "riskCategoryOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "riskConditionOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        }
      },
      "RiskIndicatorHistory" : {
        "required" : [ "indicatorDate", "riskIndicatorCode" ],
        "type" : "object",
        "properties" : {
          "riskIndicatorCode" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "conditionList" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "acuityLevel" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "indicatorDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValue" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValueType" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorValueType",
              "namespace" : "http://www.casenet.com/RiskIndicatorValueType"
            },
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "PERCENTAGE" ]
          },
          "riskStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorStatusType",
              "namespace" : "http://www.casenet.com/RiskIndicatorStatusType"
            },
            "enum" : [ "OPEN", "INACTIVE", "CLOSED", "REOPENED" ]
          },
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "riskIndicatorName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "riskCategoryOption" : {
            "type" : "string"
          },
          "riskCategory" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "RiskIndicatorHistory",
          "namespace" : "http://www.casenet.com/RiskIndicatorHistory"
        }
      },
      "RiskIndicatorHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "riskIndicatorResponse" : {
            "$ref" : "#/components/schemas/RiskIndicatorResponse"
          },
          "riskIndicatorHistoryList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RiskIndicatorHistory"
            }
          }
        },
        "xml" : {
          "name" : "RiskIndicatorHistoryResponse",
          "namespace" : "http://www.casenet.com/RiskIndicatorHistoryResponse"
        }
      },
      "RiskIndicatorResponse" : {
        "required" : [ "indicatorDate", "riskIndicatorCode" ],
        "type" : "object",
        "properties" : {
          "riskIndicatorCode" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "conditionList" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "acuityLevel" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "indicatorDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValue" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValueType" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorValueType",
              "namespace" : "http://www.casenet.com/RiskIndicatorValueType"
            },
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "PERCENTAGE" ]
          },
          "riskStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorStatusType",
              "namespace" : "http://www.casenet.com/RiskIndicatorStatusType"
            },
            "enum" : [ "OPEN", "INACTIVE", "CLOSED", "REOPENED" ]
          },
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "riskIndicatorName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "riskCategoryOption" : {
            "type" : "string"
          },
          "riskCategory" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "RiskIndicatorResponse",
          "namespace" : "http://www.casenet.com/RiskIndicatorResponse"
        }
      },
      "RiskIndicatorHistorySearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "riskIndicatorResponse" : {
            "$ref" : "#/components/schemas/RiskIndicatorResponse"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RiskIndicatorHistory"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "RiskIndicatorHistorySearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RiskIndicatorSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "RiskIndicatorSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "RISK_INDICATOR", "CATEGORY", "RISK_INDICATOR_NAME", "CONDITION", "ACUITY_RISK", "RISK_INDICATOR_VAL", "RISK_INDICATOR_DATE", "SOURCE", "STATUS", "STATUS_DATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "UpdateRiskIndicatorRequest" : {
        "required" : [ "indicatorDate", "riskIndicatorCode" ],
        "type" : "object",
        "properties" : {
          "riskIndicatorCode" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "conditionList" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "acuityLevel" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "indicatorDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValue" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValueType" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorValueType",
              "namespace" : "http://www.casenet.com/RiskIndicatorValueType"
            },
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "PERCENTAGE" ]
          },
          "riskStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorStatusType",
              "namespace" : "http://www.casenet.com/RiskIndicatorStatusType"
            },
            "enum" : [ "OPEN", "INACTIVE", "CLOSED", "REOPENED" ]
          },
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "riskIndicatorName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "riskCategoryOption" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "UpdateRiskIndicatorRequest",
          "namespace" : "http://www.casenet.com/UpdateRiskIndicatorRequest"
        }
      },
      "UpdateRiskIndicatorsRequest" : {
        "required" : [ "riskIndicatorsUpdate" ],
        "type" : "object",
        "properties" : {
          "riskIndicatorsUpdate" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateRiskIndicatorRequest"
            }
          }
        },
        "xml" : {
          "name" : "UpdateRiskIndicatorsRequest",
          "namespace" : "http://www.casenet.com/UpdateRiskIndicatorsRequest"
        }
      },
      "CreateRiskIndicatorsRequest" : {
        "required" : [ "riskIndicators" ],
        "type" : "object",
        "properties" : {
          "riskIndicators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RiskIndicatorRequest"
            }
          }
        },
        "xml" : {
          "name" : "CreateRiskIndicatorsRequest",
          "namespace" : "http://www.casenet.com/CreateRiskIndicatorsRequest"
        }
      },
      "RiskIndicatorRequest" : {
        "required" : [ "indicatorDate", "riskCategoryOption", "riskIndicatorCode", "riskIndicatorName" ],
        "type" : "object",
        "properties" : {
          "riskIndicatorCode" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "conditionList" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "acuityLevel" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "indicatorDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "source" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValue" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "riskValueType" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorValueType",
              "namespace" : "http://www.casenet.com/RiskIndicatorValueType"
            },
            "enum" : [ "STRING", "INTEGER", "DECIMAL", "PERCENTAGE" ]
          },
          "riskStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "RiskIndicatorStatusType",
              "namespace" : "http://www.casenet.com/RiskIndicatorStatusType"
            },
            "enum" : [ "OPEN", "INACTIVE", "CLOSED", "REOPENED" ]
          },
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "riskIndicatorName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "riskCategoryOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RiskIndicatorRequest",
          "namespace" : "http://www.casenet.com/RiskIndicatorRequest"
        }
      },
      "CareOpportunitySearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RiskIndicatorResponse"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CareOpportunitySearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "riskIndicator" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "riskIndicatorDateFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "riskIndicatorDateTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "categoryOption" : {
            "type" : "string"
          },
          "conditionOption" : {
            "type" : "string"
          },
          "includeOpen" : {
            "type" : "boolean"
          },
          "includeClosed" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CareOpportunitySortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "CareOpportunitySortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "CATEGORY", "RISK_INDICATOR", "CONDITION", "ACUITY_RISK", "RISK_INDICATOR_VAL", "RISK_INDICATOR_DATE", "SOURCE", "STATUS", "STATUS_DATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "ActionDefinition" : {
        "type" : "object",
        "properties" : {
          "definitionId" : {
            "type" : "string"
          },
          "definitionName" : {
            "type" : "string"
          },
          "definitionVisibleId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "targetPublishDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "custom" : {
            "type" : "boolean"
          },
          "allowDuplicates" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "ActionType",
              "namespace" : "http://www.casenet.com/ActionType"
            },
            "enum" : [ "INTERVENTION", "SERVICE_REQUEST", "ASSESSMENT", "TASK", "TEXT" ]
          },
          "subTypeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "mcgInterventionType" : {
            "type" : "string",
            "enum" : [ "SEND", "ASSIST", "COORDINATE", "EDUCATE", "RECONCILE" ]
          },
          "createTask" : {
            "type" : "boolean"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "taskAssigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "defaultAssignee" : {
            "$ref" : "#/components/schemas/TaskAssigneeResponse"
          },
          "taskDueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceCode" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "serviceCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          },
          "mcgPdfFileNames" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "mcgContentVersion" : {
            "type" : "string"
          },
          "assessmentMetaId" : {
            "type" : "string"
          }
        }
      },
      "ObjectiveDefinition" : {
        "type" : "object",
        "properties" : {
          "definitionId" : {
            "type" : "string"
          },
          "definitionName" : {
            "type" : "string"
          },
          "definitionVisibleId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "targetPublishDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "custom" : {
            "type" : "boolean"
          },
          "type" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "actionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionDefinition"
            }
          }
        }
      },
      "ProblemDefinition" : {
        "type" : "object",
        "properties" : {
          "definitionId" : {
            "type" : "string"
          },
          "definitionName" : {
            "type" : "string"
          },
          "definitionVisibleId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "targetPublishDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "custom" : {
            "type" : "boolean"
          },
          "objectiveDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectiveDefinition"
            }
          },
          "actionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionDefinition"
            }
          }
        }
      },
      "CarePlanDefinitionNode" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "problemDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProblemDefinition"
            }
          },
          "actionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionDefinition"
            }
          },
          "objectiveDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectiveDefinition"
            }
          },
          "noteDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteDefinition"
            }
          }
        }
      },
      "CarePlanConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "carePlanElementOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "outcomeCategoryOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "outcomeTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "outcomeTypeToDescriptions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionValueListWrapper"
            }
          }
        },
        "xml" : {
          "name" : "PortableConfiguration",
          "namespace" : "http://www.casenet.com/PortableConfiguration"
        }
      },
      "OptionValueListWrapper" : {
        "type" : "object",
        "properties" : {
          "optionValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        }
      },
      "CarePlanAction" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "priority" : {
            "type" : "string"
          },
          "priorityOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "actionDefinitionId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "ActionType",
              "namespace" : "http://www.casenet.com/ActionType"
            },
            "enum" : [ "INTERVENTION", "SERVICE_REQUEST", "ASSESSMENT", "TASK", "TEXT" ]
          },
          "subType" : {
            "type" : "string"
          },
          "textTypeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeReason" : {
            "type" : "string"
          },
          "closeReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "interventionEffectiveness" : {
            "type" : "string"
          },
          "interventionEffectivenessOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "interventionType" : {
            "type" : "string"
          },
          "interventionTypeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "assessmentId" : {
            "type" : "string"
          },
          "assessmentMetaId" : {
            "type" : "string"
          },
          "serviceRequestId" : {
            "type" : "string"
          },
          "serviceRequestProcedureCode" : {
            "type" : "string"
          },
          "serviceRequestProcedureName" : {
            "type" : "string"
          },
          "serviceRequestProcedureCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          },
          "relatedTask" : {
            "$ref" : "#/components/schemas/RelatedTask"
          },
          "origin" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "urlEnglish" : {
            "type" : "string"
          },
          "urlSpanish" : {
            "type" : "string"
          },
          "isClosedAutomatically" : {
            "type" : "boolean"
          },
          "assessmentMetaResourceName" : {
            "type" : "string"
          },
          "assessmentStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "COMPLETE", "VOID" ]
          },
          "serviceRequestState" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "allowDuplicateActions" : {
            "type" : "boolean"
          },
          "relatedCarePlanId" : {
            "type" : "string"
          },
          "relatedCarePlanName" : {
            "type" : "string"
          },
          "relatedCarePlanStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "relatedCarePlanDefinitionId" : {
            "type" : "string"
          },
          "isCustomRelatedCarePlan" : {
            "type" : "boolean"
          },
          "relatedObjectiveId" : {
            "type" : "string"
          },
          "relatedObjectiveName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CarePlanAction",
          "namespace" : "http://www.casenet.com/CarePlanAction"
        }
      },
      "RelatedTask" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "assignedTo" : {
            "type" : "string"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/TaskAssigneeResponse"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "createTaskonSubmit" : {
            "type" : "boolean"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "description" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RelatedTask",
          "namespace" : "http://www.casenet.com/RelatedTask"
        }
      },
      "CarePlanNoteInstance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "noteDef" : {
            "$ref" : "#/components/schemas/NoteDefinition"
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteComment"
            }
          },
          "noteText" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "noteDefType" : {
            "type" : "string",
            "xml" : {
              "name" : "NoteDefinitionTypeEnum",
              "namespace" : "http://www.casenet.com/NoteDefinitionTypeEnum"
            },
            "enum" : [ "AAG", "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "MEDICATION" ]
          },
          "encounterDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "associatedNoteInstanceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "baseNoteInstanceLink" : {
            "$ref" : "#/components/schemas/BaseNoteLink"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentInfo"
            }
          },
          "relatedProblemId" : {
            "type" : "string"
          },
          "relatedProblemName" : {
            "type" : "string"
          },
          "noteType" : {
            "type" : "string"
          },
          "canAddComment" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CarePlanNoteInstance",
          "namespace" : "http://www.casenet.com/CarePlanNoteInstance"
        }
      },
      "ActionTask" : {
        "type" : "object",
        "properties" : {
          "actionId" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "string"
          }
        }
      },
      "ActionTriggeredArtifact" : {
        "type" : "object",
        "properties" : {
          "actionId" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "string"
          },
          "artifactId" : {
            "type" : "string"
          },
          "artifactType" : {
            "type" : "string",
            "enum" : [ "SERVICE_REQUEST", "ASSESSMENT", "TASK" ]
          }
        }
      },
      "SubmitCarePlanResponse" : {
        "type" : "object",
        "properties" : {
          "carePlanId" : {
            "type" : "string"
          },
          "actionTriggeredArtifacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionTriggeredArtifact"
            }
          },
          "actionClosedTasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionTask"
            }
          }
        }
      },
      "CreateActionRequest" : {
        "type" : "object",
        "properties" : {
          "carePlanElementPriorityOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "relatedTask" : {
            "$ref" : "#/components/schemas/RelatedTaskRequest"
          }
        }
      },
      "CreateCarePlanRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "ownerUserName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "newProblems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProblemRequest"
            }
          },
          "newObjectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateObjectiveRequest"
            }
          },
          "newActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateActionRequest"
            }
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "name" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "definitionId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "CreateObjectiveOutcomeRequest" : {
        "required" : [ "objectiveOutcomeTypeOption" ],
        "type" : "object",
        "properties" : {
          "objectiveOutcomeTypeOption" : {
            "type" : "string"
          },
          "objectiveOutcomeDescriptionOption" : {
            "type" : "string"
          },
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "CreateObjectiveRequest" : {
        "type" : "object",
        "properties" : {
          "carePlanElementPriorityOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "progress" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "readinessToChangeOption" : {
            "type" : "string"
          },
          "longTerm" : {
            "type" : "boolean"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "newActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateActionRequest"
            }
          },
          "newObjectiveOutcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateObjectiveOutcomeRequest"
            }
          }
        }
      },
      "CreateProblemRequest" : {
        "type" : "object",
        "properties" : {
          "carePlanElementPriorityOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "readinessToChangeOption" : {
            "type" : "string"
          },
          "lastReviewedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "resolvedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "newObjectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateObjectiveRequest"
            }
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        }
      },
      "RelatedTaskRequest" : {
        "type" : "object",
        "properties" : {
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "assignedType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "taskAssignee" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createTaskOnSubmit" : {
            "type" : "boolean"
          }
        }
      },
      "RemoveActionRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentProblemId" : {
            "type" : "string"
          },
          "parentObjectiveId" : {
            "type" : "string"
          }
        }
      },
      "RemoveObjectiveOutcomeRequest" : {
        "required" : [ "id", "parentObjectiveId", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentProblemId" : {
            "type" : "string"
          },
          "parentObjectiveId" : {
            "type" : "string"
          }
        }
      },
      "RemoveObjectiveRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentProblemId" : {
            "type" : "string"
          }
        }
      },
      "RemoveProblemRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateActionRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "carePlanElementPriorityOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "relatedTask" : {
            "$ref" : "#/components/schemas/RelatedTaskRequest"
          },
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentProblemId" : {
            "type" : "string"
          },
          "parentObjectiveId" : {
            "type" : "string"
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "UpdateCarePlanRequest" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "ownerUserName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "newProblems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProblemRequest"
            }
          },
          "newObjectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateObjectiveRequest"
            }
          },
          "newActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateActionRequest"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updateProblems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateProblemRequest"
            }
          },
          "updateObjectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateObjectiveRequest"
            }
          },
          "updateObjectiveOutcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateObjectiveOutcomeRequest"
            }
          },
          "updateActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateActionRequest"
            }
          },
          "removeProblems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoveProblemRequest"
            }
          },
          "removeObjectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoveObjectiveRequest"
            }
          },
          "removeObjectiveOutcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoveObjectiveOutcomeRequest"
            }
          },
          "removeActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoveActionRequest"
            }
          }
        }
      },
      "UpdateObjectiveOutcomeRequest" : {
        "required" : [ "id", "objectiveOutcomeTypeOption", "parentObjectiveId", "version" ],
        "type" : "object",
        "properties" : {
          "objectiveOutcomeTypeOption" : {
            "type" : "string"
          },
          "objectiveOutcomeDescriptionOption" : {
            "type" : "string"
          },
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentObjectiveId" : {
            "type" : "string"
          },
          "parentProblemId" : {
            "type" : "string"
          }
        }
      },
      "UpdateObjectiveRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "carePlanElementPriorityOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "progress" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "readinessToChangeOption" : {
            "type" : "string"
          },
          "longTerm" : {
            "type" : "boolean"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "newActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateActionRequest"
            }
          },
          "newObjectiveOutcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateObjectiveOutcomeRequest"
            }
          },
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentProblemId" : {
            "type" : "string"
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "UpdateProblemRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "carePlanElementPriorityOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "readinessToChangeOption" : {
            "type" : "string"
          },
          "lastReviewedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "resolvedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "newObjectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateObjectiveRequest"
            }
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "CarePlanAcknowledgement" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "acknowledgementMessage" : {
            "type" : "string"
          },
          "acknowledgementSelection" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "memberAgreed" : {
            "type" : "boolean"
          },
          "acknowledgementDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "CarePlanAcknowledgement",
          "namespace" : "http://www.casenet.com/CarePlanAcknowledgement"
        }
      },
      "SaveCarePlanResponse" : {
        "type" : "object",
        "properties" : {
          "carePlanId" : {
            "type" : "string"
          },
          "carePlanTaskId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "CarePlanElementRecommendationArtifactRequest" : {
        "required" : [ "artifactId" ],
        "type" : "object",
        "properties" : {
          "artifactId" : {
            "type" : "string"
          },
          "taskDefinitionRequest" : {
            "$ref" : "#/components/schemas/TaskDefinitionRequest"
          }
        }
      },
      "CreateCarePlanFromBuilderRequest" : {
        "type" : "object",
        "properties" : {
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "customCarePlanName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "carePlanDefinitionId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "artifactRequestList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CarePlanElementRecommendationArtifactRequest"
            }
          }
        }
      },
      "CreateCarePlansFromBuilderRequest" : {
        "required" : [ "createCarePlanRequests" ],
        "type" : "object",
        "properties" : {
          "createCarePlanRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateCarePlanFromBuilderRequest"
            }
          }
        }
      },
      "TaskDefinitionRequest" : {
        "required" : [ "assignedType", "dueDateOffset", "taskPriority" ],
        "type" : "object",
        "properties" : {
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "assignedType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "taskAssignee" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dueDateOffset" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Action" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "priority" : {
            "type" : "string"
          },
          "priorityOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "actionDefinitionId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "ActionType",
              "namespace" : "http://www.casenet.com/ActionType"
            },
            "enum" : [ "INTERVENTION", "SERVICE_REQUEST", "ASSESSMENT", "TASK", "TEXT" ]
          },
          "subType" : {
            "type" : "string"
          },
          "textTypeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeReason" : {
            "type" : "string"
          },
          "closeReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "interventionEffectiveness" : {
            "type" : "string"
          },
          "interventionEffectivenessOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "interventionType" : {
            "type" : "string"
          },
          "interventionTypeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "assessmentId" : {
            "type" : "string"
          },
          "assessmentMetaId" : {
            "type" : "string"
          },
          "serviceRequestId" : {
            "type" : "string"
          },
          "serviceRequestProcedureCode" : {
            "type" : "string"
          },
          "serviceRequestProcedureName" : {
            "type" : "string"
          },
          "serviceRequestProcedureCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          },
          "relatedTask" : {
            "$ref" : "#/components/schemas/RelatedTask"
          },
          "origin" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "urlEnglish" : {
            "type" : "string"
          },
          "urlSpanish" : {
            "type" : "string"
          },
          "isClosedAutomatically" : {
            "type" : "boolean"
          },
          "assessmentMetaResourceName" : {
            "type" : "string"
          },
          "assessmentStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "COMPLETE", "VOID" ]
          },
          "serviceRequestState" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "allowDuplicateActions" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "Action",
          "namespace" : "http://www.casenet.com/Action"
        }
      },
      "CarePlan" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "reopenDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "type" : "string"
          },
          "caseId" : {
            "type" : "string"
          },
          "definitionId" : {
            "type" : "string"
          },
          "isCustomCarePlan" : {
            "type" : "boolean"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "problems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "objectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Objective"
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            }
          },
          "tasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskLite"
            }
          },
          "isDraft" : {
            "type" : "boolean"
          },
          "lastAcknowledgementDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "CarePlan",
          "namespace" : "http://www.casenet.com/CarePlan"
        }
      },
      "Objective" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "priority" : {
            "type" : "string"
          },
          "priorityOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "objectiveDefinitionId" : {
            "type" : "string"
          },
          "typeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "type" : {
            "type" : "string"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int32"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reason" : {
            "type" : "string"
          },
          "closeReason" : {
            "type" : "string"
          },
          "closeReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "readinessToChange" : {
            "type" : "string"
          },
          "readinessToChangeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "longTerm" : {
            "type" : "boolean"
          },
          "origin" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "objectiveOutcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectiveOutcome"
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            }
          }
        },
        "xml" : {
          "name" : "Objective",
          "namespace" : "http://www.casenet.com/Objective"
        }
      },
      "ObjectiveOutcome" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "ObjectiveOutcomeType",
              "namespace" : "http://www.casenet.com/ObjectiveOutcomeType"
            },
            "enum" : [ "TREATMENT_NEGOTIATED", "POLY_PHARMACY_REDUCTION", "CARE_LEVEL_CHANGE", "INCREASED_COMMUNICATION", "QUALITY_OF_LIFE_IMPROVEMENT", "SOCIAL_MANAGEMENT", "FUNCTIONAL_CAPABILITIES_IMPROVEMENT", "INCREASED_SELF_MANAGEMENT", "IMPROVED_TREATMENT_ADHERENCE", "POSITIVE_LIFESTYLE_CHANGE", "CLINICAL_IMPROVEMENT", "APPROPRIATE_ED_SERVICES_UTILIZATION", "REPEAT_HOSPITALIZATIONS_REDUCTION" ]
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "ObjectiveOutcomeDescription",
              "namespace" : "http://www.casenet.com/ObjectiveOutcomeDescription"
            },
            "enum" : [ "PREVENTATIVE_TREATMENT_ORDERED", "AVOIDED_UNNECESSARY_MODIFICATION_OF_TREATMENT", "DISCONTINUED_INAPPROPRIATE", "AVOIDED_DUPLICATE_TREATMENT", "TREATMENT_PLAN_ALIGNED", "REDUCED_MEDICATIONS", "SIMPLIFIED_DOSING_SCHEDULE", "ELIMINATED_DUPLICATE_THERAPY", "ELIMINATED_ADVERSE_DRUG_REACTIONS", "INCORRECT_DOSING_CORRECTED", "ELIMINATED_AGE_INAPPROPRIATE_MEDICATIONS", "MOVED_TO_ALTERNATE_ENVIRONMENT", "INCREASED_SUPERVISION", "MAXIMIZED_INDEPENDENT_FUNCTION_CARE", "REFERRED_TO_APPROPRIATE_PROVIDER", "ENHANCED_COMMUNICATION", "PCP_AWARE_OF_PLAN", "SIMPLIFIED_TREATMENT_REGIMEN", "ESTABLISHED_TEAM_QUARTERBACK", "BEHAVIORAL_HEALTH_PROVIDERS_AWARE_OF_PLAN", "COORDINATION_WITH_BEHAVIORAL_HEALTH_PROVIDERS", "PHYSICAL_HEALTH", "SPIRITUAL_BELIEFS", "SOCIAL_INCLUSION", "SELF_ESTEEM", "RELAXATION", "IMPROVED_INTERPERSONAL_RELATIONSHIPS", "ADEQUATE_SUPPORT", "PERSONAL_DEVELOPMENT", "SELF_EFFICACY", "PAIN_MANAGEMENT", "RETURN_TO_WORK", "SAFE_HOUSING", "ACCESS_TO_COMMUNITY_RESOURCES", "ACCESS_TO_FINANCIAL_RESOURCES", "ACCESS_TO_SUPPORT_GROUPS", "RESPITE_PLAN_FOR_CAREGIVERS", "LIFE_PLANNING_ESTABLISHED", "AMBULATION", "GROOMING", "MEAL_PREPARATION", "MAXIMIZED_INDEPENDENT_FUNCTION_CAPABILITIES", "ADAPTIVE_DEVICES_OBTAINED", "INCREASED_KNOWLEDGE", "PROBLEM_SOLVING_SKILLS", "TREATMENT_PLAN_PARTICIPATION", "KNOWLEDGE_OF_PREVENTATIVE_CARE", "ABILITY_TO_MANAGE_TREATMENT_REGIME", "ABILITY_TO_MANAGE_SELF_CARE_PROCEDURES", "NAVIGATION_OF_HEALTH_CARE_SYSTEM", "MEDICATION", "DIET", "MONITORING_CLINICAL_VALUES", "ROUTINE_EXAMS", "WEIGHT_REDUCTION", "ROUTINE_PHYSICAL_ACTIVITY", "HEALTHFUL_EATING_PLAN", "SMOKING_CESSATION", "ALCOHOL_INTAKE_MODERATION", "ELIMINATED_INAPPROPRIATE_DRUG_USE", "STRESS_REDUCTION", "ALCOHOL_ABSTENTION", "ILLEGAL_DRUG_ABSTENTION", "BP", "HBA1C", "BLOOD_SUGAR", "LIPID_PROFILE", "LEAD_LEVEL", "PEF", "DECREASED_RESCUE_INHALER_USE", "SKIN_INTEGRITY", "DAYS_OUT_OF_WORK", "REDUCTION_OF_BEHAVIORAL_HEALTH_SYMPTOMS", "DECREASE_OF_ED_VISITS", "REPEAT_HOSPITALIZATIONS_DECREASE_FOR_SAME_DIAGNOSIS", "OTHER" ]
          },
          "detail" : {
            "type" : "string"
          },
          "addedOnDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ObjectiveOutcome",
          "namespace" : "http://www.casenet.com/ObjectiveOutcome"
        }
      },
      "Problem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "priority" : {
            "type" : "string"
          },
          "priorityOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "problemDefinitionId" : {
            "type" : "string"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastReviewed" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "resolvedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reason" : {
            "type" : "string"
          },
          "closeReason" : {
            "type" : "string"
          },
          "closeReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "readinessToChange" : {
            "type" : "string"
          },
          "readinessToChangeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "origin" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "objectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Objective"
            }
          }
        },
        "xml" : {
          "name" : "Problem",
          "namespace" : "http://www.casenet.com/Problem"
        }
      },
      "CarePlanObjective" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "priority" : {
            "type" : "string"
          },
          "priorityOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "objectiveDefinitionId" : {
            "type" : "string"
          },
          "typeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "type" : {
            "type" : "string"
          },
          "targetDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int32"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reason" : {
            "type" : "string"
          },
          "closeReason" : {
            "type" : "string"
          },
          "closeReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "readinessToChange" : {
            "type" : "string"
          },
          "readinessToChangeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "longTerm" : {
            "type" : "boolean"
          },
          "origin" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "objectiveOutcomes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectiveOutcome"
            }
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            }
          },
          "relatedCarePlanId" : {
            "type" : "string"
          },
          "relatedCarePlanName" : {
            "type" : "string"
          },
          "relatedCarePlanStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "relatedCarePlanDefinitionId" : {
            "type" : "string"
          },
          "isCustomRelatedCarePlan" : {
            "type" : "boolean"
          },
          "relatedProblemId" : {
            "type" : "string"
          },
          "relatedProblemName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CarePlanObjective",
          "namespace" : "http://www.casenet.com/CarePlanObjective"
        }
      },
      "UpdateCarePlanFromBuilderRequest" : {
        "required" : [ "artifactRequestList", "carePlanId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "carePlanId" : {
            "type" : "string"
          },
          "artifactRequestList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CarePlanElementRecommendationArtifactRequest"
            }
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "UpdateCarePlansFromBuilderRequest" : {
        "required" : [ "updateCarePlanRequests" ],
        "type" : "object",
        "properties" : {
          "updateCarePlanRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateCarePlanFromBuilderRequest"
            }
          }
        }
      },
      "CarePlanProblem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "category" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "priority" : {
            "type" : "string"
          },
          "priorityOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "problemDefinitionId" : {
            "type" : "string"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastReviewed" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "resolvedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reason" : {
            "type" : "string"
          },
          "closeReason" : {
            "type" : "string"
          },
          "closeReasonOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "readinessToChange" : {
            "type" : "string"
          },
          "readinessToChangeOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "origin" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "objectives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Objective"
            }
          },
          "relatedCarePlanId" : {
            "type" : "string"
          },
          "relatedCarePlanName" : {
            "type" : "string"
          },
          "relatedCarePlanStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "relatedCarePlanDefinitionId" : {
            "type" : "string"
          },
          "isCustomRelatedCarePlan" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CarePlanProblem",
          "namespace" : "http://www.casenet.com/CarePlanProblem"
        }
      },
      "RelatedAssessment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mcgCustom" : {
            "type" : "boolean"
          },
          "assessmentMetaId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentType",
              "namespace" : "http://www.casenet.com/AssessmentType"
            },
            "enum" : [ "INITIAL", "GENERAL", "SPECIALTY" ]
          },
          "statusType" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "COMPLETE", "VOID" ]
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "mcgVersion" : {
            "type" : "string"
          },
          "assessmentMetaVisibleId" : {
            "type" : "string"
          }
        }
      },
      "CarePlanRelatedElement" : {
        "type" : "object",
        "properties" : {
          "elementId" : {
            "type" : "string"
          },
          "elementName" : {
            "type" : "string"
          },
          "elementCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "elementStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanElementStatus",
              "namespace" : "http://www.casenet.com/CarePlanElementStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "elementUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assessmentId" : {
            "type" : "string"
          },
          "assessmentName" : {
            "type" : "string"
          },
          "questionText" : {
            "type" : "string"
          },
          "questionGroupName" : {
            "type" : "string"
          },
          "answer" : {
            "$ref" : "#/components/schemas/Answer"
          },
          "assessmentCompletedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assessmentCompletedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "CarePlanRelatedElementsSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CarePlanRelatedElement"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CarePlanRelatedElementSortField" : {
        "required" : [ "columnType" ],
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "ASSESSMENT_NAME", "QUESTION_TEXT", "ASSESSMENT_COMPLETED_DATE", "ASSESSMENT_COMPLETED_BY", "ELEMENT_CATEGORY", "ELEMENT_STATUS", "UPDATE_DATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "CarePlanRelatedElementsSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "assessmentName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CarePlanRelatedElementSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "ObjectiveOutcomeSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "ObjectiveOutcomeType",
              "namespace" : "http://www.casenet.com/ObjectiveOutcomeType"
            },
            "enum" : [ "TREATMENT_NEGOTIATED", "POLY_PHARMACY_REDUCTION", "CARE_LEVEL_CHANGE", "INCREASED_COMMUNICATION", "QUALITY_OF_LIFE_IMPROVEMENT", "SOCIAL_MANAGEMENT", "FUNCTIONAL_CAPABILITIES_IMPROVEMENT", "INCREASED_SELF_MANAGEMENT", "IMPROVED_TREATMENT_ADHERENCE", "POSITIVE_LIFESTYLE_CHANGE", "CLINICAL_IMPROVEMENT", "APPROPRIATE_ED_SERVICES_UTILIZATION", "REPEAT_HOSPITALIZATIONS_REDUCTION" ]
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "ObjectiveOutcomeDescription",
              "namespace" : "http://www.casenet.com/ObjectiveOutcomeDescription"
            },
            "enum" : [ "PREVENTATIVE_TREATMENT_ORDERED", "AVOIDED_UNNECESSARY_MODIFICATION_OF_TREATMENT", "DISCONTINUED_INAPPROPRIATE", "AVOIDED_DUPLICATE_TREATMENT", "TREATMENT_PLAN_ALIGNED", "REDUCED_MEDICATIONS", "SIMPLIFIED_DOSING_SCHEDULE", "ELIMINATED_DUPLICATE_THERAPY", "ELIMINATED_ADVERSE_DRUG_REACTIONS", "INCORRECT_DOSING_CORRECTED", "ELIMINATED_AGE_INAPPROPRIATE_MEDICATIONS", "MOVED_TO_ALTERNATE_ENVIRONMENT", "INCREASED_SUPERVISION", "MAXIMIZED_INDEPENDENT_FUNCTION_CARE", "REFERRED_TO_APPROPRIATE_PROVIDER", "ENHANCED_COMMUNICATION", "PCP_AWARE_OF_PLAN", "SIMPLIFIED_TREATMENT_REGIMEN", "ESTABLISHED_TEAM_QUARTERBACK", "BEHAVIORAL_HEALTH_PROVIDERS_AWARE_OF_PLAN", "COORDINATION_WITH_BEHAVIORAL_HEALTH_PROVIDERS", "PHYSICAL_HEALTH", "SPIRITUAL_BELIEFS", "SOCIAL_INCLUSION", "SELF_ESTEEM", "RELAXATION", "IMPROVED_INTERPERSONAL_RELATIONSHIPS", "ADEQUATE_SUPPORT", "PERSONAL_DEVELOPMENT", "SELF_EFFICACY", "PAIN_MANAGEMENT", "RETURN_TO_WORK", "SAFE_HOUSING", "ACCESS_TO_COMMUNITY_RESOURCES", "ACCESS_TO_FINANCIAL_RESOURCES", "ACCESS_TO_SUPPORT_GROUPS", "RESPITE_PLAN_FOR_CAREGIVERS", "LIFE_PLANNING_ESTABLISHED", "AMBULATION", "GROOMING", "MEAL_PREPARATION", "MAXIMIZED_INDEPENDENT_FUNCTION_CAPABILITIES", "ADAPTIVE_DEVICES_OBTAINED", "INCREASED_KNOWLEDGE", "PROBLEM_SOLVING_SKILLS", "TREATMENT_PLAN_PARTICIPATION", "KNOWLEDGE_OF_PREVENTATIVE_CARE", "ABILITY_TO_MANAGE_TREATMENT_REGIME", "ABILITY_TO_MANAGE_SELF_CARE_PROCEDURES", "NAVIGATION_OF_HEALTH_CARE_SYSTEM", "MEDICATION", "DIET", "MONITORING_CLINICAL_VALUES", "ROUTINE_EXAMS", "WEIGHT_REDUCTION", "ROUTINE_PHYSICAL_ACTIVITY", "HEALTHFUL_EATING_PLAN", "SMOKING_CESSATION", "ALCOHOL_INTAKE_MODERATION", "ELIMINATED_INAPPROPRIATE_DRUG_USE", "STRESS_REDUCTION", "ALCOHOL_ABSTENTION", "ILLEGAL_DRUG_ABSTENTION", "BP", "HBA1C", "BLOOD_SUGAR", "LIPID_PROFILE", "LEAD_LEVEL", "PEF", "DECREASED_RESCUE_INHALER_USE", "SKIN_INTEGRITY", "DAYS_OUT_OF_WORK", "REDUCTION_OF_BEHAVIORAL_HEALTH_SYMPTOMS", "DECREASE_OF_ED_VISITS", "REPEAT_HOSPITALIZATIONS_DECREASE_FOR_SAME_DIAGNOSIS", "OTHER" ]
          },
          "detail" : {
            "type" : "string"
          },
          "addedOnDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "carePlanId" : {
            "type" : "string"
          },
          "carePlanName" : {
            "type" : "string"
          },
          "relatedCarePlanStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "relatedCarePlanDefinitionId" : {
            "type" : "string"
          },
          "isCustomRelatedCarePlan" : {
            "type" : "boolean"
          },
          "objectiveId" : {
            "type" : "string"
          },
          "objectiveName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ObjectiveOutcome",
          "namespace" : "http://www.casenet.com/ObjectiveOutcome"
        }
      },
      "CloseCarePlanRequest" : {
        "type" : "object",
        "properties" : {
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "carePlanElementReasonsOptions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "details" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "closureReasonOption" : {
            "type" : "string"
          }
        }
      },
      "ReopenCarePlanRequest" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "reopenReasonOption" : {
            "type" : "string"
          }
        }
      },
      "CarePlanSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "definitionId" : {
            "type" : "string"
          },
          "isCustomCarePlan" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "reopenDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "caseId" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastAcknowledgementDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "hasChildren" : {
            "type" : "boolean"
          },
          "closedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "CarePlanSummary",
          "namespace" : "http://www.casenet.com/CarePlanSummary"
        }
      },
      "CarePlanStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "statusChangeReason" : {
            "type" : "string"
          },
          "date" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "details" : {
            "type" : "string"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "statusChangeDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "CarePlanStatus",
          "namespace" : "http://www.casenet.com/CarePlanStatus"
        }
      },
      "CarePlanAcknowledgementRequest" : {
        "required" : [ "acknowledgementDate", "acknowledgementMessage", "memberAgreedOption" ],
        "type" : "object",
        "properties" : {
          "acknowledgementMessage" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "acknowledgementDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "memberAgreedOption" : {
            "type" : "string"
          }
        }
      },
      "ProblemDefinitionSearchResult" : {
        "type" : "object",
        "properties" : {
          "problemDefinitionId" : {
            "type" : "string"
          },
          "problemDefinitionName" : {
            "type" : "string"
          },
          "problemDefinitionVisibleId" : {
            "type" : "string"
          },
          "problemCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "custom" : {
            "type" : "boolean"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ProblemDefinitionSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProblemDefinitionSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ProblemDefinitionSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "problemDefinitionName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "problemDefinitionVisibleId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "problemCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "licenseFeature" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProblemDefinitionSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "ProblemDefinitionSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "PROBLEM_DEFINITION_NAME", "PROBLEM_DEFINITION_VISIBLE_ID", "PROBLEM_CATEGORY", "CUSTOM", "SOURCE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "ActionDefinitionSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionDefinition"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ActionDefinitionSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "actionDefinitionName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "actionDefinitionVisibleId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "actionCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "actionTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "ActionType",
                "namespace" : "http://www.casenet.com/ActionType"
              },
              "enum" : [ "INTERVENTION", "SERVICE_REQUEST", "ASSESSMENT", "TASK", "TEXT" ]
            }
          },
          "actionSubType" : {
            "type" : "string"
          },
          "mcgInterventionType" : {
            "type" : "string",
            "enum" : [ "SEND", "ASSIST", "COORDINATE", "EDUCATE", "RECONCILE" ]
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActionDefinitionSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "ActionDefinitionSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "ACTION_DEFINITION_NAME", "ACTION_DEFINITION_VISIBLE_ID", "ACTION_CATEGORY", "CUSTOM" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "ObjectiveDefinitionSearchResult" : {
        "type" : "object",
        "properties" : {
          "objectiveDefinitionId" : {
            "type" : "string"
          },
          "objectiveDefinitionName" : {
            "type" : "string"
          },
          "objectiveDefinitionVisibleId" : {
            "type" : "string"
          },
          "objectiveCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "objectiveType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "custom" : {
            "type" : "boolean"
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentSource",
              "namespace" : "http://www.casenet.com/AssessmentSource"
            },
            "enum" : [ "MCG", "TRUCARE" ]
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ObjectiveDefinitionSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectiveDefinitionSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ObjectiveDefinitionSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "objectiveDefinitionName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "objectiveDefinitionVisibleId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "objectiveCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "objectiveType" : {
            "type" : "string"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectiveDefinitionSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "ObjectiveDefinitionSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "OBJECTIVE_DEFINITION_NAME", "OBJECTIVE_DEFINITION_VISIBLE_ID", "OBJECTIVE_CATEGORY", "CUSTOM" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "CaseConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "alwaysOpenCase" : {
            "type" : "boolean"
          },
          "primaryDiagnosisRequired" : {
            "type" : "boolean"
          },
          "displayCreateCase" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CaseConfiguration",
          "namespace" : "http://www.casenet.com/CaseConfiguration"
        }
      },
      "CaseIdentity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CaseIdentity",
          "namespace" : "http://www.casenet.com/CaseIdentity"
        }
      },
      "CreateCaseRequest" : {
        "required" : [ "caseNameOption", "caseTypeOption", "primaryOwnerUsername" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "caseTypeOption" : {
            "type" : "string"
          },
          "caseNameOption" : {
            "type" : "string"
          },
          "caseNameOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "primaryOwnerUsername" : {
            "type" : "string"
          },
          "secondaryOwnerUsernames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "primaryDiagnosisId" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        },
        "xml" : {
          "name" : "CreateCaseRequest",
          "namespace" : "http://www.casenet.com/CreateCaseRequest"
        }
      },
      "ReopenCaseRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "statusChangeAuthorizedByUserName" : {
            "type" : "string"
          },
          "statusChangeAuthorizedByOther" : {
            "type" : "string"
          },
          "statusChangeReasonOption" : {
            "type" : "string"
          },
          "statusChangeDetail" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "CloseCaseRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "authorizedByUsername" : {
            "type" : "string"
          },
          "externalAuthorizedBy" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "caseClosureReasonOption" : {
            "type" : "string"
          },
          "detail" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CloseCaseRequest",
          "namespace" : "http://www.casenet.com/CloseCaseRequest"
        }
      },
      "SummaryAuthorization" : {
        "type" : "object",
        "properties" : {
          "authorizationNum" : {
            "type" : "string"
          },
          "authTrackingNumber" : {
            "type" : "string"
          },
          "primaryDiagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "internalMemberId" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          },
          "memberDateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "id" : {
            "type" : "string"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "appealed" : {
            "type" : "boolean"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "caseId" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "requestingProviderName" : {
            "type" : "string"
          },
          "requestingProviderExternalLocationId" : {
            "type" : "string"
          },
          "requestingProviderInternalLocationId" : {
            "type" : "string"
          },
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "internalUIState" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "lockedSinceDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lockedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "authEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasUnvoidedNotifications" : {
            "type" : "boolean"
          },
          "hasNonVoidedAttachments" : {
            "type" : "boolean"
          },
          "interqualEpisodeId" : {
            "type" : "string"
          },
          "hasOpenManualTasks" : {
            "type" : "boolean"
          },
          "hasDischarges" : {
            "type" : "boolean"
          },
          "hasReadmits" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "SummaryAuthorization",
          "namespace" : "http://www.casenet.com/SummaryAuthorization"
        }
      },
      "CloseTasksRequest" : {
        "type" : "object",
        "properties" : {
          "taskIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UpdateCaseRequest" : {
        "required" : [ "caseNameOption", "caseTypeOption", "primaryOwnerUsername" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "caseTypeOption" : {
            "type" : "string"
          },
          "caseNameOption" : {
            "type" : "string"
          },
          "caseNameOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "primaryOwnerUsername" : {
            "type" : "string"
          },
          "secondaryOwnerUsernames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "primaryDiagnosisId" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "acuityLabel" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        },
        "xml" : {
          "name" : "UpdateCaseRequest",
          "namespace" : "http://www.casenet.com/UpdateCaseRequest"
        }
      },
      "CaseStatus" : {
        "required" : [ "statusType" ],
        "type" : "object",
        "properties" : {
          "statusType" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "reason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "detail" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "externalAuthorizedBy" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "CaseStatus",
          "namespace" : "http://www.casenet.com/CaseStatus"
        }
      },
      "CnCase" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "caseType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "primaryOwner" : {
            "$ref" : "#/components/schemas/User"
          },
          "acuityScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "acuityLabel" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "primaryDiagnosis" : {
            "$ref" : "#/components/schemas/Diagnosis"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/CaseStatus"
          },
          "secondaryOwners" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closed" : {
            "type" : "boolean"
          },
          "inProgress" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CnCase",
          "namespace" : "http://www.casenet.com/CnCase"
        }
      },
      "Diagnosis" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "reportedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reportedBy" : {
            "type" : "string"
          },
          "reportedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "diagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedBy" : {
            "type" : "string"
          },
          "closedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "primaryDiagnosis" : {
            "type" : "boolean"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "closed" : {
            "type" : "boolean"
          },
          "diagnosisStatusForDisplay" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Diagnosis",
          "namespace" : "http://www.casenet.com/Diagnosis"
        }
      },
      "NoteRequest" : {
        "required" : [ "noteDefinitionVisibleId" ],
        "type" : "object",
        "properties" : {
          "noteDefinitionVisibleId" : {
            "type" : "string"
          },
          "noteText" : {
            "maxLength" : 1000000,
            "minLength" : 0,
            "type" : "string"
          },
          "offlineCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "NoteRequest",
          "namespace" : "http://www.casenet.com/NoteRequest"
        }
      },
      "CreateCaseNotificationRequest" : {
        "required" : [ "caseNotificationType", "taskId" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "createPhoneNotificationRequest" : {
            "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
          },
          "caseNotificationType" : {
            "type" : "string",
            "enum" : [ "welcome", "closure" ]
          }
        }
      },
      "TeamInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TeamInfo",
          "namespace" : "http://www.casenet.com/TeamInfo"
        }
      },
      "WaiverEnrollment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityId" : {
            "type" : "string"
          },
          "caseIdentity" : {
            "$ref" : "#/components/schemas/CaseIdentity"
          },
          "closeReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "closeReasonOther" : {
            "type" : "string"
          },
          "waiverEnrollmentDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WaiverEnrollmentDetails"
            }
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "appliedEligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CLOSED", "HISTORICAL", "SCHEDULED", "VOIDED" ]
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "WaiverEnrollment",
          "namespace" : "http://www.casenet.com/WaiverEnrollment"
        }
      },
      "WaiverEnrollmentDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "teamName" : {
            "type" : "string"
          },
          "fundingSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "stateClassifications" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CLOSED", "HISTORICAL", "SCHEDULED", "VOIDED" ]
          },
          "team" : {
            "$ref" : "#/components/schemas/TeamInfo"
          }
        },
        "xml" : {
          "name" : "WaiverEnrollmentDetails",
          "namespace" : "http://www.casenet.com/WaiverEnrollmentDetails"
        }
      },
      "AbstractTaskRecurrenceOptions" : {
        "required" : [ "taskRecurrenceEndDate" ],
        "type" : "object",
        "properties" : {
          "taskRecurrenceEndDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AbstractTaskRecurrenceOptions",
          "namespace" : "http://www.casenet.com/AbstractTaskRecurrenceOptions"
        }
      },
      "CaseTasks" : {
        "type" : "object",
        "properties" : {
          "taskDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDetails"
            }
          },
          "hasManualTask" : {
            "type" : "boolean"
          }
        }
      },
      "TaskDetails" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assigneeName" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "taskLinkArtifactType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskLinkArtifactType",
              "namespace" : "http://www.casenet.com/TaskLinkArtifactType"
            },
            "enum" : [ "INPATIENT", "SP", "RX", "CASE", "MEDICATION", "ASSESSMENT", "CARE_PLAN" ]
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "taskActivity" : {
            "type" : "string"
          },
          "taskName" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskRecurrenceOptions" : {
            "$ref" : "#/components/schemas/AbstractTaskRecurrenceOptions"
          },
          "taskInstanceLink" : {
            "$ref" : "#/components/schemas/TaskInstanceLink"
          },
          "variablesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "workflowTask" : {
            "type" : "boolean"
          },
          "teamName" : {
            "type" : "string"
          },
          "queueName" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "triggerSource" : {
            "$ref" : "#/components/schemas/TaskTriggerSource"
          }
        },
        "xml" : {
          "name" : "TaskDetails",
          "namespace" : "http://www.casenet.com/TaskDetails"
        }
      },
      "TaskInstanceLink" : {
        "type" : "object",
        "properties" : {
          "instanceId" : {
            "type" : "string"
          },
          "artifactDefId" : {
            "type" : "string"
          },
          "screenTypeName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TaskInstanceLink",
          "namespace" : "http://www.casenet.com/TaskInstanceLink"
        }
      },
      "TaskTriggerSource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TaskTriggerSource",
          "namespace" : "http://www.casenet.com/TaskTriggerSource"
        }
      },
      "TimeTrackingActivity" : {
        "type" : "object",
        "properties" : {
          "activityType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "activityName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "comments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "minutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nonTruCareName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "activityDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "ServiceRequestLineItemLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "serviceRequestProvider" : {
            "$ref" : "#/components/schemas/Provider"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "ServiceRequestLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "ownerUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "ownerTeam" : {
            "$ref" : "#/components/schemas/TeamInfo"
          },
          "memberDirected" : {
            "type" : "boolean"
          },
          "serviceRequestLineItemLites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestLineItemLite"
            }
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "ServiceRequestStatus" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "statusValue" : {
            "type" : "string"
          },
          "statusLabel" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceRequestStatus",
          "namespace" : "http://www.casenet.com/ServiceRequestStatus"
        }
      },
      "EnrollmentSource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cnCaseId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "EnrollmentSource",
          "namespace" : "http://www.casenet.com/EnrollmentSource"
        }
      },
      "EnrollmentStatus" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reasonOther" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "engagementLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "EnrollmentStatus",
          "namespace" : "http://www.casenet.com/EnrollmentStatus"
        }
      },
      "ProgramEnrollment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "program" : {
            "$ref" : "#/components/schemas/Program"
          },
          "statuses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnrollmentStatus"
            }
          },
          "cnCaseId" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "currentStatus" : {
            "$ref" : "#/components/schemas/EnrollmentStatus"
          },
          "assessmentSource" : {
            "type" : "boolean"
          },
          "enrollmentSource" : {
            "$ref" : "#/components/schemas/EnrollmentSource"
          }
        },
        "xml" : {
          "name" : "ProgramEnrollment",
          "namespace" : "http://www.casenet.com/ProgramEnrollment"
        }
      },
      "CaseFieldChange" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "enum" : [ "CASE_TYPE", "CASE_NAME", "CASE_STATUS_TYPE", "PRIMARY_OWNER", "ACUITY_SCORE", "ACUITY_LABEL", "PRIMARY_DIAGNOSIS", "SECONDARY_OWNERS", "CASE_START_DATE", "CASE_NUMBER", "CASE_STATUS", "CASE_EXTENDED_ATTRIBUTE_VALUE" ]
          },
          "udfLabel" : {
            "type" : "string"
          },
          "oldValue" : {
            "type" : "string"
          },
          "newValue" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "authorizedByCustomUsername" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          }
        }
      },
      "UpdateCaseNotificationRequest" : {
        "required" : [ "caseNotificationType", "taskId", "version" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "createPhoneNotificationRequest" : {
            "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
          },
          "caseNotificationType" : {
            "type" : "string",
            "enum" : [ "welcome", "closure" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AuthorizationWithSelectedLineItems" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "trackingNum" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "selectedLineItems" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationLineItemInfoLite"
            }
          }
        },
        "xml" : {
          "name" : "AuthorizationWithSelectedLineItems",
          "namespace" : "http://www.casenet.com/AuthorizationWithSelectedLineItems"
        }
      },
      "CarePlanLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CarePlanLite",
          "namespace" : "http://www.casenet.com/CarePlanLite"
        }
      },
      "CaseIdentityExtended" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CaseIdentityExtended",
          "namespace" : "http://www.casenet.com/CaseIdentityExtended"
        }
      },
      "CaseNotificationDetails" : {
        "required" : [ "caseId", "caseNotificationType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseNotificationType" : {
            "type" : "string",
            "enum" : [ "welcome", "closure" ]
          },
          "caseId" : {
            "type" : "string"
          },
          "letterDetails" : {
            "$ref" : "#/components/schemas/InternalLetterDetails"
          },
          "phoneNotificationDetails" : {
            "$ref" : "#/components/schemas/PhoneNotificationDetails"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "InternalLetterDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "letterName" : {
            "type" : "string"
          },
          "letterDescription" : {
            "type" : "string"
          },
          "licenseType" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          },
          "carePlan" : {
            "$ref" : "#/components/schemas/CarePlanLite"
          },
          "caseIdentity" : {
            "$ref" : "#/components/schemas/CaseIdentityExtended"
          },
          "programEnrollment" : {
            "$ref" : "#/components/schemas/ProgramEnrollmentLite"
          },
          "authorization" : {
            "$ref" : "#/components/schemas/AuthorizationWithSelectedLineItems"
          },
          "userNotes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bhpLogo" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "companyGroupLogo" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "logoThree" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "logoFour" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "logoSignature" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentInfo"
            }
          },
          "latestMailing" : {
            "$ref" : "#/components/schemas/LetterMailingInternal"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "internalLetterTemplateVersionId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "InternalLetterDetails",
          "namespace" : "http://www.casenet.com/InternalLetterDetails"
        }
      },
      "LetterDelivery" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "DeliveryStatus",
              "namespace" : "http://www.casenet.com/DeliveryStatus"
            },
            "enum" : [ "SUCCESS", "FAILURE", "PENDING" ]
          },
          "deliveryMethod" : {
            "type" : "string",
            "xml" : {
              "name" : "DeliveryMethod",
              "namespace" : "http://www.casenet.com/DeliveryMethod"
            },
            "enum" : [ "UI", "QUEUE", "FAX", "EMAIL" ]
          }
        },
        "xml" : {
          "name" : "LetterDelivery",
          "namespace" : "http://www.casenet.com/LetterDelivery"
        }
      },
      "LetterLogo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LetterLogo",
          "namespace" : "http://www.casenet.com/LetterLogo"
        }
      },
      "LetterMailingInternal" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "dateSent" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          },
          "recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterRecipient"
            }
          }
        },
        "xml" : {
          "name" : "LetterMailingInternal",
          "namespace" : "http://www.casenet.com/LetterMailingInternal"
        }
      },
      "LetterRecipient" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "lastName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "middleName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "nameSuffix" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "nameTitle" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "deliveries" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterDelivery"
            }
          }
        },
        "xml" : {
          "name" : "LetterRecipient",
          "namespace" : "http://www.casenet.com/LetterRecipient"
        }
      },
      "PhoneNotificationDetails" : {
        "required" : [ "phoneDate" ],
        "type" : "object",
        "properties" : {
          "phoneRecipient" : {
            "$ref" : "#/components/schemas/PhoneRecipient"
          },
          "phoneDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "phoneNote" : {
            "type" : "string"
          }
        }
      },
      "PhoneRecipient" : {
        "required" : [ "firstName", "id", "recipientType" ],
        "type" : "object",
        "properties" : {
          "recipientType" : {
            "type" : "string",
            "enum" : [ "member", "provider", "serviceProvider", "externalContact", "personalContact", "providerContact", "organizationContact", "pcp" ]
          },
          "id" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          }
        }
      },
      "ProgramEnrollmentLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "programId" : {
            "type" : "string"
          },
          "programName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProgramEnrollmentLite",
          "namespace" : "http://www.casenet.com/ProgramEnrollmentLite"
        }
      },
      "CaseSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "acuityLabel" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "acuityScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "casePrimaryOwner" : {
            "$ref" : "#/components/schemas/User"
          },
          "casePrimaryOwnerPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "createdDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "updatedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "updatedBy" : {
            "type" : "string"
          },
          "caseSecondaryOwnersCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "CaseSearchResult",
          "namespace" : "http://www.casenet.com/CaseSearchResult"
        }
      },
      "CaseSearchResults" : {
        "type" : "object",
        "properties" : {
          "cases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseSearchResult"
            }
          },
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "CaseSearchResults",
          "namespace" : "http://www.casenet.com/CaseSearchResults"
        }
      },
      "CaseSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "caseNameLabel" : {
            "type" : "string"
          },
          "caseTypeOption" : {
            "type" : "string"
          },
          "acuity" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "caseStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "casePrimaryOwnerUsername" : {
            "type" : "string"
          },
          "includeClosedCases" : {
            "type" : "boolean"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "contactedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "contactedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "CaseSearchCriteria",
          "namespace" : "http://www.casenet.com/CaseSearchCriteria"
        }
      },
      "CaseSearchResultV2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "acuityLabel" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "acuityScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "casePrimaryOwner" : {
            "$ref" : "#/components/schemas/User"
          },
          "casePrimaryOwnerPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "caseSecondaryOwnersCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "secondaryOwners" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "CaseSearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "cases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseSearchResultV2"
            }
          },
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CaseSearchCriteriaV2" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CaseSortField"
            }
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "caseNameLabel" : {
            "type" : "string"
          },
          "caseTypeOption" : {
            "type" : "string"
          },
          "acuity" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "caseStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          },
          "casePrimaryOwnerUsername" : {
            "type" : "string"
          },
          "includeClosedCases" : {
            "type" : "boolean"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "contactedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "contactedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "CaseSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseSortColumn",
              "namespace" : "http://www.casenet.com/CaseSortColumn"
            },
            "enum" : [ "CASE_NUMBER", "CASE_NAME", "ACUITY", "SCORE", "START_DATE", "CASE_TYPE", "STATUS", "PRIMARY_CASE_OWNER", "CREATED_DATE", "UPDATED_DATE", "SECONDARY_OWNERS_COUNT" ]
          }
        },
        "xml" : {
          "name" : "CaseSortField",
          "namespace" : "http://www.casenet.com/CaseSortField"
        }
      },
      "BaseClaim" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "claimNumber" : {
            "type" : "string"
          },
          "claimStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "totalCharges" : {
            "type" : "number"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "ClaimsSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "claimId" : {
            "type" : "string"
          },
          "claimType" : {
            "type" : "string",
            "enum" : [ "All", "Institutional", "Professional", "Pharmacy" ]
          },
          "batchDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "claimDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "claimNumber" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "status" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "codeDescription" : {
            "type" : "string"
          },
          "provider" : {
            "type" : "string"
          },
          "totalCharges" : {
            "type" : "number"
          },
          "amountPaid" : {
            "type" : "number"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "ClaimsSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimsSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ClaimsBaseSearchCriteria" : {
        "required" : [ "claimType" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "claimType" : {
            "type" : "string",
            "enum" : [ "All", "Institutional", "Professional", "Pharmacy" ]
          },
          "claimID" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimsSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "ClaimsSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "CLAIM_TYPE", "BATCH_DATE", "CLAIM_DATE", "CLAIM_NUMBER", "FROM_DATE", "TO_DATE", "STATUS", "DIAGNOSIS", "PROVIDER", "TOTAL_CHARGES", "AMOUNT_PAID" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MedicationsDonutHoleResult" : {
        "type" : "object",
        "properties" : {
          "claimsTotalPrice" : {
            "type" : "number"
          },
          "remainingBeforeGapAmount" : {
            "type" : "number"
          },
          "remainingInGapAmount" : {
            "type" : "number"
          },
          "beforeGapMaxAmount" : {
            "type" : "number"
          },
          "inGapMaxAmount" : {
            "type" : "number"
          }
        }
      },
      "AllergyConfiguration" : {
        "type" : "object",
        "properties" : {
          "voidConfig" : {
            "$ref" : "#/components/schemas/VoidConfig"
          },
          "allergyOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "reactionOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "severityOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "sourceOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "allergyRequired" : {
            "type" : "boolean"
          },
          "reactionRequired" : {
            "type" : "boolean"
          },
          "severityRequired" : {
            "type" : "boolean"
          },
          "sourceRequired" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AllergyConfiguration",
          "namespace" : "http://www.casenet.com/AllergyConfiguration"
        }
      },
      "DiagnosisCodeSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisCode"
            }
          }
        },
        "xml" : {
          "name" : "DiagnosisCodeSearchResults",
          "namespace" : "http://www.casenet.com/DiagnosisCodeSearchResults"
        }
      },
      "DiagnosisCodeSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "name" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "code" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "codeType" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeType",
              "namespace" : "http://www.casenet.com/DiagnosisCodeType"
            },
            "enum" : [ "ICD9", "ICD10" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisCodeSortField"
            }
          },
          "effectiveOnDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "DiagnosisCodeSearchCriteria",
          "namespace" : "http://www.casenet.com/DiagnosisCodeSearchCriteria"
        }
      },
      "DiagnosisCodeSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisCodeSortColumn",
              "namespace" : "http://www.casenet.com/DiagnosisCodeSortColumn"
            },
            "enum" : [ "DIAGNOSIS_NAME", "DIAGNOSIS_CODE" ]
          }
        },
        "xml" : {
          "name" : "DiagnosisCodeSortField",
          "namespace" : "http://www.casenet.com/DiagnosisCodeSortField"
        }
      },
      "DiagnosesSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisSearchResult"
            }
          },
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "DiagnosesSearchResults",
          "namespace" : "http://www.casenet.com/DiagnosesSearchResults"
        }
      },
      "DiagnosisSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "reportedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reportedBy" : {
            "type" : "string"
          },
          "reportedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "diagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedBy" : {
            "type" : "string"
          },
          "closedByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "voidInfoExists" : {
            "type" : "boolean"
          },
          "primaryDiagnosis" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "closed" : {
            "type" : "boolean"
          },
          "displayClosedDate" : {
            "type" : "string"
          },
          "displayReportedDate" : {
            "type" : "string"
          },
          "diagnosisStatusForDisplay" : {
            "type" : "string"
          },
          "displayDiagnosisCode" : {
            "type" : "string"
          },
          "displayDiagnosisName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "DiagnosisSearchResult",
          "namespace" : "http://www.casenet.com/DiagnosisSearchResult"
        }
      },
      "DiagnosisSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "diagnosisCodeId" : {
            "type" : "string"
          },
          "dateFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reportedBy" : {
            "type" : "string"
          },
          "primaryOnly" : {
            "type" : "boolean"
          },
          "includeOpen" : {
            "type" : "boolean"
          },
          "includeClosed" : {
            "type" : "boolean"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "DiagnosisSearchCriteria",
          "namespace" : "http://www.casenet.com/DiagnosisSearchCriteria"
        }
      },
      "SimpleDrug" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SimpleDrug",
          "namespace" : "http://www.casenet.com/SimpleDrug"
        }
      },
      "DrugSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Drug"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "DrugSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "nameCriteria" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "ndcCriteria" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DrugSortField"
            }
          },
          "searchType" : {
            "type" : "string",
            "enum" : [ "DISPENSED_DRUG", "DRUG_BASE_NAME", "DRUG_CLASS", "PACKAGED_DRUG", "REFINE_DRUG_NAME", "DISPENSED_DRUG_EQUIVALENT", "PACKAGED_DRUG_EQUIVALENT" ]
          },
          "gpiDrugClassification" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "DrugSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "NAME", "NDC" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MedicationConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "medicationPropertyMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesConfiguration",
          "namespace" : "http://www.casenet.com/ExtendedAttributesConfiguration"
        }
      },
      "MedicationRegimenSearchResult" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "medicationName" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "adjustedDose" : {
            "type" : "string"
          },
          "adjustedRoute" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "adjustedRouteOther" : {
            "type" : "string"
          },
          "medicationId" : {
            "type" : "string"
          },
          "isCurrentlyTaking" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string"
          },
          "lastUpdatedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastReviewedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "nextReviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastReviewedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "dateAdded" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "drugDescription" : {
            "type" : "string"
          },
          "drugEntryType" : {
            "type" : "string",
            "enum" : [ "NDC", "DISPENSED_DRUG", "DRUG_BASE_NAME" ]
          },
          "source" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "sourceOther" : {
            "type" : "string"
          },
          "expectedRefillDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "isRxClaim" : {
            "type" : "boolean"
          },
          "filledDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "daysSupply" : {
            "type" : "integer",
            "format" : "int32"
          },
          "allergyMedRegimenReactionExists" : {
            "type" : "boolean"
          }
        }
      },
      "MedicationRegimensSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationRegimenSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MedicationRegimensSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "searchParams" : {
            "$ref" : "#/components/schemas/MedicationRegimensSearchParam"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationRegimensSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "MedicationRegimensSearchParam" : {
        "required" : [ "medicationKey" ],
        "type" : "object",
        "properties" : {
          "medicationKey" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "medicationName" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "medicationStatus" : {
            "type" : "string",
            "enum" : [ "ALL", "OPEN", "DISCONTINUED", "COMPLETED" ]
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "reviewDateTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reviewDateFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reviewedBy" : {
            "type" : "string"
          }
        }
      },
      "MedicationRegimensSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "MEDICATION_NAME", "STATUS", "DATE_ADDED", "LAST_UPDATED_DATE", "REGIMEN_START_DATE", "REGIMEN_END_DATE", "LAST_REVIEWED_DATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MedicationSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "prescribedDose" : {
            "type" : "string"
          },
          "dateAdded" : {
            "type" : "string",
            "format" : "date-time"
          },
          "active" : {
            "type" : "boolean"
          },
          "lastReviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastReviewer" : {
            "$ref" : "#/components/schemas/User"
          },
          "voidInfoExists" : {
            "type" : "boolean"
          },
          "lastRegimenCreatedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "route" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "routeOtherDescription" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "providerLocation" : {
            "type" : "string"
          },
          "prescriber" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "procurementMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "medicationCodeId" : {
            "type" : "string"
          },
          "drug" : {
            "$ref" : "#/components/schemas/Drug"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "addedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "closed" : {
            "type" : "boolean"
          },
          "dateAddedDisplayString" : {
            "type" : "string"
          },
          "lastReviewerDisplayName" : {
            "type" : "string"
          },
          "medicationName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MedicationSearchResult",
          "namespace" : "http://www.casenet.com/MedicationSearchResult"
        }
      },
      "MedicationSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationSearchResult"
            }
          },
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MedicationSearchResults",
          "namespace" : "http://www.casenet.com/MedicationSearchResults"
        }
      },
      "MedicationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "drugId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "MedicationStatus",
              "namespace" : "http://www.casenet.com/MedicationStatus"
            },
            "enum" : [ "OPEN", "DISCONTINUED" ]
          },
          "reviewDateFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reviewDateTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reviewedById" : {
            "type" : "string"
          },
          "voided" : {
            "type" : "string",
            "xml" : {
              "name" : "VoidedStatus",
              "namespace" : "http://www.casenet.com/VoidedStatus"
            },
            "enum" : [ "ACTIVE", "VOIDED", "ALL" ]
          }
        },
        "xml" : {
          "name" : "MedicationSearchCriteria",
          "namespace" : "http://www.casenet.com/MedicationSearchCriteria"
        }
      },
      "GroupedMedication" : {
        "type" : "object",
        "properties" : {
          "medicationSummaryGroupingType" : {
            "type" : "string",
            "enum" : [ "NDC", "DRUG_NAME", "DRUG_BASE_NAME", "DRUG_CLASS", "DRUG_GROUP", "SUPPLEMENT_NAME", "SUPPLEMENT_TYPE", "SUPPLEMENT_TYPE_OTHER" ]
          },
          "medicationKey" : {
            "type" : "string"
          },
          "groupingName" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "dateAdded" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastReviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastReviewedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "allergyMedicationReactionExists" : {
            "type" : "boolean"
          },
          "isRefillDatePastDue" : {
            "type" : "boolean"
          },
          "needsDosingInfo" : {
            "type" : "boolean"
          }
        }
      },
      "MedicationSummarySearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupedMedication"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MedicationSummarySearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "searchParams" : {
            "$ref" : "#/components/schemas/MedicationSummarySearchParam"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationSummarySortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "MedicationSummarySearchParam" : {
        "type" : "object",
        "properties" : {
          "medicationName" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "medicationStatus" : {
            "type" : "string",
            "enum" : [ "ALL", "OPEN", "DISCONTINUED", "COMPLETED" ]
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "includeSupplements" : {
            "type" : "boolean"
          },
          "reviewDateTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reviewDateFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reviewedByUserName" : {
            "type" : "string"
          }
        }
      },
      "MedicationSummarySortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "DATE_ADDED", "MEDICATION", "STATUS", "LAST_REVIEWED_DATE", "LAST_UPDATED_DATE", "LAST_REVIEWED_BY", "LAST_UPDATED_BY" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MedispanAllergen" : {
        "type" : "object",
        "properties" : {
          "medispanAllergenId" : {
            "type" : "string"
          },
          "medispanAllergenDescription" : {
            "type" : "string"
          },
          "medispanAllergyCodeType" : {
            "type" : "string",
            "enum" : [ "C", "M", "T" ]
          }
        }
      },
      "MedispanAllergenSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedispanAllergen"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MedispanAllergenReactionResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReactingMedication"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ReactingMedication" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          }
        }
      },
      "MedispanAllergenReactionSearchCriteria" : {
        "required" : [ "medispanAllergenDescription", "medispanAllergenId", "medispanAllergyCodeType" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "medispanAllergenId" : {
            "maxLength" : 10,
            "minLength" : 2,
            "type" : "string"
          },
          "medispanAllergenDescription" : {
            "maxLength" : 50,
            "minLength" : 2,
            "type" : "string"
          },
          "medispanAllergyCodeType" : {
            "type" : "string",
            "enum" : [ "C", "M", "T" ]
          }
        },
        "xml" : {
          "name" : "SearchCriteria",
          "namespace" : "http://www.casenet.com/SearchCriteria"
        }
      },
      "MedispanAllergenSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "allergenDescriptionCriteria" : {
            "$ref" : "#/components/schemas/StringCriteria"
          }
        },
        "xml" : {
          "name" : "SearchCriteria",
          "namespace" : "http://www.casenet.com/SearchCriteria"
        }
      },
      "MedispanDrugReactionResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReactingAllergy"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ReactingAllergy" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          }
        }
      },
      "DrugLite" : {
        "required" : [ "drugId" ],
        "type" : "object",
        "properties" : {
          "drugId" : {
            "type" : "string"
          },
          "gpiClassification" : {
            "maxLength" : 65,
            "minLength" : 0,
            "type" : "string"
          },
          "drugDescription" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "MedispanDrugReactionSearchCriteria" : {
        "required" : [ "entryType" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "drugLite" : {
            "$ref" : "#/components/schemas/DrugLite"
          },
          "entryType" : {
            "type" : "string",
            "enum" : [ "NDC", "DISPENSED_DRUG", "DRUG_BASE_NAME" ]
          }
        },
        "xml" : {
          "name" : "SearchCriteria",
          "namespace" : "http://www.casenet.com/SearchCriteria"
        }
      },
      "Allergy" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "allergy" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reaction" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherAllergy" : {
            "type" : "string"
          },
          "otherReaction" : {
            "type" : "string"
          },
          "allergyDetail" : {
            "type" : "string"
          },
          "source" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "dateIdentified" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "severity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "active" : {
            "type" : "boolean"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "allergyType" : {
            "type" : "string",
            "xml" : {
              "name" : "AllergyType",
              "namespace" : "http://www.casenet.com/AllergyType"
            },
            "enum" : [ "TRUCARE", "MEDISPAN" ]
          },
          "medispanAllergyDescription" : {
            "type" : "string"
          },
          "voided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "Allergy",
          "namespace" : "http://www.casenet.com/Allergy"
        }
      },
      "UpdateAllergyRequest" : {
        "type" : "object",
        "properties" : {
          "allergyDetail" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "severityOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "UpdateAllergyRequest",
          "namespace" : "http://www.casenet.com/UpdateAllergyRequest"
        }
      },
      "CreateAllergyRequest" : {
        "required" : [ "allergyOptionValueId", "reactionOptionValueId" ],
        "type" : "object",
        "properties" : {
          "allergyOptionValueId" : {
            "type" : "string"
          },
          "reactionOptionValueId" : {
            "type" : "string"
          },
          "otherAllergy" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "otherReaction" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "allergyDetail" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceOptionValueId" : {
            "type" : "string"
          },
          "dateIdentified" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "severityOptionValueId" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CreateAllergyRequest",
          "namespace" : "http://www.casenet.com/CreateAllergyRequest"
        }
      },
      "CreateBaseAllergyRequest" : {
        "required" : [ "reactionOption" ],
        "type" : "object",
        "properties" : {
          "reactionOption" : {
            "type" : "string"
          },
          "reactionOther" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "allergyDetail" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceOption" : {
            "type" : "string"
          },
          "dateIdentified" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "severityOption" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "AllergySearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Allergy"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CreateDiagnosisRequest" : {
        "required" : [ "diagnosisCodeId", "reportedBy" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "reportedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reportedBy" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "diagnosisCodeId" : {
            "type" : "string"
          },
          "primaryDiagnosis" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CreateDiagnosisRequest",
          "namespace" : "http://www.casenet.com/CreateDiagnosisRequest"
        }
      },
      "CloseDiagnosisRequest" : {
        "type" : "object",
        "properties" : {
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedBy" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "UpdateDiagnosisRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closedBy" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "primaryDiagnosis" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateDiagnosisRequest",
          "namespace" : "http://www.casenet.com/UpdateDiagnosisRequest"
        }
      },
      "DuplicateMedication" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "source" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "sourceOther" : {
            "type" : "string"
          },
          "isClaimMedication" : {
            "type" : "boolean"
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "addedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "matchType" : {
            "type" : "string",
            "enum" : [ "EXACT_MATCH", "EQUIVALENT", "SIMILAR" ]
          },
          "medicationId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DuplicateMedicationResults" : {
        "type" : "object",
        "properties" : {
          "searchResults" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DuplicateMedicationsListWrapper"
            }
          }
        }
      },
      "DuplicateMedicationsListWrapper" : {
        "type" : "object",
        "properties" : {
          "duplicateMedications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DuplicateMedication"
            }
          }
        }
      },
      "DuplicateMedicationCriteria" : {
        "required" : [ "drugIds", "searchType" ],
        "type" : "object",
        "properties" : {
          "drugIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "searchType" : {
            "type" : "string",
            "enum" : [ "NDC", "DISPENSED_DRUG", "DRUG_BASE_NAME" ]
          }
        }
      },
      "MemberMedicationAlert" : {
        "required" : [ "medicationKey" ],
        "type" : "object",
        "properties" : {
          "medicationKey" : {
            "type" : "string"
          },
          "netSeverity" : {
            "type" : "string",
            "enum" : [ "MODERATE", "MAJOR" ]
          },
          "interactionList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberMedicationInteraction"
            }
          }
        }
      },
      "MemberMedicationInteraction" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "severity" : {
            "type" : "string",
            "enum" : [ "MODERATE", "MAJOR" ]
          },
          "monographId" : {
            "type" : "string"
          },
          "monographType" : {
            "type" : "string",
            "enum" : [ "DRUG", "FOOD", "ALLERGEN" ]
          },
          "summary" : {
            "type" : "string"
          }
        }
      },
      "MediSpanMedication" : {
        "type" : "object",
        "properties" : {
          "gpi" : {
            "type" : "string"
          },
          "gpiDrugClass" : {
            "type" : "string"
          },
          "gpiDrugBaseName" : {
            "type" : "string"
          },
          "drugNameId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dispensableDrugId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MediSpanMedication",
          "namespace" : "http://www.casenet.com/MediSpanMedication"
        }
      },
      "Medication" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "prescribedDose" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "route" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "routeOtherDescription" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "providerLocation" : {
            "type" : "string"
          },
          "prescriber" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "procurementMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "procurementMethodOther" : {
            "type" : "string"
          },
          "medicationCodeId" : {
            "type" : "string"
          },
          "reviews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationReview"
            }
          },
          "drug" : {
            "$ref" : "#/components/schemas/Drug"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "source" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "sourceOther" : {
            "type" : "string"
          },
          "isCurrentlyTaking" : {
            "type" : "boolean"
          },
          "drugQuantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memberSupplement" : {
            "$ref" : "#/components/schemas/MemberSupplement"
          },
          "mediSpanMedication" : {
            "$ref" : "#/components/schemas/MediSpanMedication"
          },
          "medicationStatus" : {
            "type" : "string"
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "lastReviewedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "lastReviewedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "drugEntryType" : {
            "type" : "string"
          },
          "drugDescription" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "discontinueReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "discontinueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "discontinueReasonOther" : {
            "type" : "string"
          },
          "discontinueAuthorizedBy" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "isNewClaimMedication" : {
            "type" : "boolean"
          },
          "isVoidedByClaim" : {
            "type" : "boolean"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          },
          "medicationPharmacyClaimDetailLite" : {
            "$ref" : "#/components/schemas/MedicationPharmacyClaimDetailLite"
          },
          "name" : {
            "type" : "string"
          },
          "closed" : {
            "type" : "boolean"
          },
          "prescriberName" : {
            "type" : "string"
          },
          "doseString" : {
            "type" : "string"
          },
          "routeString" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Medication",
          "namespace" : "http://www.casenet.com/Medication"
        }
      },
      "MedicationPharmacyClaimDetailLite" : {
        "type" : "object",
        "properties" : {
          "fillDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "newfill" : {
            "type" : "boolean"
          },
          "refill" : {
            "type" : "boolean"
          },
          "ndc" : {
            "type" : "string"
          },
          "medicationInfo" : {
            "type" : "string"
          },
          "daysSupply" : {
            "type" : "integer",
            "format" : "int32"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rxPrice" : {
            "type" : "number"
          },
          "claim" : {
            "$ref" : "#/components/schemas/MedicationPharmacyClaimLite"
          },
          "diagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCode"
          },
          "prescriber" : {
            "$ref" : "#/components/schemas/Location"
          },
          "rxNumber" : {
            "type" : "string"
          },
          "rxWrittenDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "numTimesFilled" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numRefillsAuthorized" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mailOrderPharmacyIndicator" : {
            "type" : "boolean"
          },
          "rxIngredientCostAmt" : {
            "type" : "number"
          },
          "rxDispensingFeeAmt" : {
            "type" : "number"
          },
          "rxCopayAmt" : {
            "type" : "number"
          },
          "rxAppliedToDeductibleAmt" : {
            "type" : "number"
          },
          "rxPatientCostAmt" : {
            "type" : "number"
          },
          "rxSalesTaxAmt" : {
            "type" : "number"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "dispensedAsWritten" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MedicationPharmacyClaimDetailLite",
          "namespace" : "http://www.casenet.com/MedicationPharmacyClaimDetailLite"
        }
      },
      "MedicationPharmacyClaimLite" : {
        "type" : "object",
        "properties" : {
          "pharmacy" : {
            "$ref" : "#/components/schemas/Location"
          },
          "lowIncomeSubsidyLevel" : {
            "type" : "string"
          },
          "claimNumber" : {
            "type" : "string"
          },
          "claimStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "totalPrice" : {
            "type" : "number"
          }
        },
        "xml" : {
          "name" : "MedicationPharmacyClaimLite",
          "namespace" : "http://www.casenet.com/MedicationPharmacyClaimLite"
        }
      },
      "MedicationReview" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isCurrentlyTakingMedication" : {
            "type" : "boolean"
          },
          "usageStatus" : {
            "type" : "string"
          },
          "actualDose" : {
            "type" : "string"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "frequencyOther" : {
            "type" : "string"
          },
          "quantityOnHand" : {
            "type" : "string"
          },
          "missedDoseInLast30Days" : {
            "type" : "boolean"
          },
          "lastMissedDoseDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "missedDoseReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "missedDoseOtherReason" : {
            "type" : "string"
          },
          "takingAsOrdered" : {
            "type" : "boolean"
          },
          "knowsWhy" : {
            "type" : "boolean"
          },
          "followUpRequired" : {
            "type" : "boolean"
          },
          "nextReviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasAdverseEffects" : {
            "type" : "boolean"
          },
          "adverseEffects" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "adverseEffectsDetails" : {
            "type" : "string"
          },
          "isContactPrescriber" : {
            "type" : "boolean"
          },
          "reviewReason" : {
            "type" : "string"
          },
          "primaryFactor" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "memberEducation" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "MedicationReview",
          "namespace" : "http://www.casenet.com/MedicationReview"
        }
      },
      "MemberSupplement" : {
        "type" : "object",
        "properties" : {
          "supplementName" : {
            "type" : "string"
          },
          "supplementDescription" : {
            "type" : "string"
          },
          "supplementType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "supplementTypeOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberSupplement",
          "namespace" : "http://www.casenet.com/MemberSupplement"
        }
      },
      "CreateMedicationRequest" : {
        "required" : [ "drugId" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "drugId" : {
            "type" : "string"
          },
          "frequencyOption" : {
            "type" : "string"
          },
          "adjustedRouteOption" : {
            "type" : "string"
          },
          "prescriberId" : {
            "type" : "string"
          },
          "adjustedDose" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "adjustedRouteOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "frequencyOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "procurementMethodOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CreateMedicationRequest",
          "namespace" : "http://www.casenet.com/CreateMedicationRequest"
        }
      },
      "MonographRequest" : {
        "type" : "object",
        "properties" : {
          "drugDescription" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "interactingItemDescription" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "ProcedureCodeDescriptionOtherLanguage" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "procedureDescription" : {
            "type" : "string"
          }
        }
      },
      "ProcedureCodeDescriptions" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "defaultProcedureDescription" : {
            "type" : "string"
          },
          "otherLanguageDescriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcedureCodeDescriptionOtherLanguage"
            }
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "Service" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "serviceDescription" : {
            "type" : "string"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "externalId" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProcedureCodePaginatedSearchResult" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcedureCode"
            }
          }
        },
        "xml" : {
          "name" : "ProcedureCodePaginatedSearchResult",
          "namespace" : "http://www.casenet.com/ProcedureCodePaginatedSearchResult"
        }
      },
      "ProcedureCodeSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeSortColumn",
              "namespace" : "http://www.casenet.com/ProcedureCodeSortColumn"
            },
            "enum" : [ "PROCEDURE_NAME", "PROCEDURE_CODE" ]
          }
        },
        "xml" : {
          "name" : "ProcedureCodeSortField",
          "namespace" : "http://www.casenet.com/ProcedureCodeSortField"
        }
      },
      "ProcedureCodesSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "name" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "code" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "procedureCodeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcedureCodeType",
              "namespace" : "http://www.casenet.com/ProcedureCodeType"
            },
            "enum" : [ "CPT", "ICD9", "HCPCS", "REVENUE", "ICD10", "EXTENDED" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcedureCodeSortField"
            }
          },
          "serviceOfferProviderId" : {
            "type" : "string"
          },
          "languageOption" : {
            "type" : "string"
          },
          "effectiveOnDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "ProcedureCodesSearchCriteria",
          "namespace" : "http://www.casenet.com/ProcedureCodesSearchCriteria"
        }
      },
      "MedicalRecord" : {
        "type" : "object",
        "properties" : {
          "requestDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sourceName" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "sequence" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "infoReceivedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      },
      "QIAdvisorReview" : {
        "type" : "object",
        "properties" : {
          "advisorReviewNotesDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewerName" : {
            "type" : "string"
          },
          "advisorSeverity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "advisorReviewNotes" : {
            "type" : "string"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleDocumentInfo"
            }
          }
        }
      },
      "QIOutcome" : {
        "type" : "object",
        "properties" : {
          "finalSeverity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "finalSeverityAssignedBy" : {
            "type" : "string"
          },
          "qiOutcomeCompletedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "resolutionLetterSentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "outcomeNotes" : {
            "type" : "string"
          },
          "trackAndTrend" : {
            "type" : "boolean"
          },
          "trackAndTrendDateReferred" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "trackAndTrendDateCompleted" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "trackAndTrendComments" : {
            "type" : "string"
          },
          "followUpAction" : {
            "type" : "boolean"
          },
          "followUpActionDateReferred" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "followUpActionDateCompleted" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "followUpActionComments" : {
            "type" : "string"
          },
          "correctiveActionPlan" : {
            "type" : "boolean"
          },
          "correctiveActionPlanDateReferred" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "correctiveActionPlanDateCompleted" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "correctiveActionPlanComments" : {
            "type" : "string"
          },
          "peerReviewCommittee" : {
            "type" : "boolean"
          },
          "peerReviewCommitteeDateReferred" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "peerReviewCommitteeDateCompleted" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "peerReviewCommitteeComments" : {
            "type" : "string"
          },
          "other" : {
            "type" : "boolean"
          },
          "otherDateReferred" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "otherDateCompleted" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "otherComments" : {
            "type" : "string"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleDocumentInfo"
            }
          }
        }
      },
      "QIReview" : {
        "type" : "object",
        "properties" : {
          "reviewerDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/User"
          },
          "reviewerNotes" : {
            "type" : "string"
          },
          "informationReviewed" : {
            "type" : "string"
          },
          "completionDueDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preliminarySeverity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "preliminarySeverityAssignedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "clinicalSummaryNotes" : {
            "type" : "string"
          },
          "medicalRecordRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicalRecord"
            }
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleDocumentInfo"
            }
          }
        }
      },
      "QualityIncident" : {
        "type" : "object",
        "properties" : {
          "incidentNumber" : {
            "type" : "string"
          },
          "reportingCategory" : {
            "type" : "string",
            "enum" : [ "ACCESS_AVAILABILITY", "ATTITUDE_AND_SERVICE", "BILLING", "FRAUD", "MEMBER_R_R", "OFFICE_SITE_QUALITY", "POTENTIAL_PREVENT_HEALTH_INCIDENT", "QUALITY_OF_CARE" ]
          },
          "closedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "incidentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleDocumentInfo"
            }
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "incidentOwner" : {
            "$ref" : "#/components/schemas/User"
          },
          "incidentLocation" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "incidentLocationOther" : {
            "type" : "string"
          },
          "openDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "referralDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "referralSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "referredBy" : {
            "type" : "string",
            "enum" : [ "CM", "FACILITY", "MEMBER", "PROVIDER", "UM" ]
          },
          "referredByDetails" : {
            "type" : "string"
          },
          "planNotifiedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "benefitCategory" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "relatedAuthorization" : {
            "type" : "string"
          },
          "relatedProvider" : {
            "type" : "string"
          },
          "relatedProviderId" : {
            "type" : "string"
          },
          "relatedFacility" : {
            "type" : "string"
          },
          "relatedFacilityId" : {
            "type" : "string"
          },
          "additionalDetails" : {
            "type" : "string"
          },
          "incidentType" : {
            "type" : "string",
            "enum" : [ "ACCESS_TO_PROVIDERS", "AFTERHOURS_ACCESS", "APPOINTMENT_AVAILABILITY", "CAR_SEAT_PROBLEMS", "CULTURAL_BARRIER", "DELAYS_IN_SERVICE", "LANGUAGE_BARRIER", "PHARMACY_ACCESSIBILITY", "PROVIDER_NO_LONGER_ACCEPTING_MBRS", "PROVIDER_REFUSAL_TO_TREAT_MEMBER", "TRANSPORTATION", "TRANSPORTATION_SOURCE_REFUSALS", "PROVIDER_BILLING_MEMBER", "CO_PAY_ISSUES", "COB_ISSUE", "CLAIMS_PAYMENT_PROCESSING", "ELIGIBILITY_ENROLLMENT_ISSUES", "COMPLAINT_RE_HEALTH_PLAN_AS", "COMPLAINT_RE_PROVIDER_AS", "PHYSICAL_APPEARANCE", "ADEQUACY_OF_EXAM_ROOM", "ADEQUACY_OF_WAITING_ROOM", "EXCESSIVE_WAIT_TIME", "OFFICE_QUALITY_CONTROLS", "PHYSICAL_ACCESSIBILITY", "COMPLAINT_RE_HEALTH_PLAN_MRR", "COMPLAINT_RE_PROVIDER_MRR", "SERVICES_NOT_PROVIDED", "LICENSURE_CERTIFICATION_ETC", "ADVERSE_MEDICAL_EVENT", "ADVERSE_SURGICAL_EVENT", "READMISSION", "UNEXPECTED_DEATH", "MEDICAL_CARE_BELOW_STANDARD", "SAFETY_RISK_MANAGEMENT", "ADVERSE_BEHAV_HEALTH_INCIDENT", "ADMISSIONS_FOR", "HOSPITAL_ACQUIRED_CONDITIONS" ]
          },
          "incidentSubType" : {
            "type" : "string",
            "enum" : [ "PCP", "BH_ALLIED_HEALTH_PROFESSIONAL", "BH_PSYCHIATRIST", "BH_RESIDENTIAL", "DME", "HOME_HEALTH", "HOSPITAL", "NURSING_HOME", "OTHER", "OTHER_ANCILLARY", "SPECIALIST", "EXCESSIVE_PHONE_WAIT", "COMPLAINT_PROCEDURES", "CULTURAL_COMPETENCY_ISSUE", "DISSATISFACTION_WITH_CM", "DISSATISFACTION_WITH_UM_PROCESS", "FAILURE_TO_PROVIDE_REFERRALS", "LANGUAGE_BARRIER", "MARKETING", "PROBLEM_GETTING_CARE_AUTHORIZED", "RUDE_UNPROFESSIONAL_STAFF", "DISSATISFIED_WITH_PROVIDER", "PROVIDER_TERMED", "RUDE_UNPROFESSIONAL_OFFICE_STAFF", "RUDE_UNPROFESSIONAL_PROVIDER", "TELEPHONE_RESPONSIVENESS", "ADVANCE_DIRECTIVES", "DELAY_IN_SERVICE", "DISCRIMINATION", "EXCESSIVE_WAIT_TIME", "EXPLOITATION_OF_MEMBER", "MEMBER_CHOICE", "MEMBER_REFUSED_TX", "OTHER_R_R", "PHYSICAL_CHEMICAL_RESTRAINTS", "PRIVACY_CONFIDENTIALITY", "RESPECT", "RIGHT_TO_RECEIVE_INFORMATION", "REFUSAL_TO_PROVIDE_CARE", "STAFFING_ISSUES_PROVIDER", "FOURTH_DEGREE_PERINEAL_LAC", "AIR_EMBOLISM", "ALLERGIC_ADVERSE_REACTION", "CARDIAC_ARREST", "NEURO_IMPAIRMENT_NEW", "NOSOCOMIAL_INFECTION", "REINTUBATION_OR_GT_3_ATTEMPTS", "RESPIRATORY_ARREST", "SKIN_INTEGRITY_PRESSURE_ULCER", "TRANSFUSION_REACTION", "ULCER", "VASC_IMPAIRMENT_NEW", "VENTILATOR", "ANESTHESIA_COMPLICATIONS", "DAY_OP_SURGERY_TO_IP_ADMIT", "DEEP_VEIN_THROMBOSIS_FOLLOWING_ORTHO_SURG", "HEMORRHAGE", "LACERATIONS_PERFORATION_TEAR", "LOSS_OF_BODY_PART_NEW", "OTHER_COMPLICATIONS_OF_SURGERY_OR_VAGINAL_DELIVERY", "POST_OP_INFECTION", "REMOVAL_INJ_ORGAN_NEW", "RETAINED_FOREIGN_BODY", "RUPTURED_APPENDIX", "RUPTURED_UTERUS", "SURGICAL_SITE_INFECTION_FOLLOWING_BARIATRIC_SURGERY", "SURGICAL_SITE_INFECTION_FOLLOWING_CABG", "SURGICAL_SITE_INFECTION_FOLLOWING_ORTHO_PROCEDURE", "WOUND_DEHISCENCE", "NEWBORN_ADMIT_W_IN_30_DAYS", "READMISSION_W_IN_1_WEEK_SAME_DX", "READMISSION_W_IN_30_DAYS_SAME_SIMILAR_DX", "READMISSION_W_IN_6_MONTHS", "UNPLANNED_RETURN_TO_SURGERY_OR_DELIVERY_ROOM", "FETAL_DEMISE", "SUICIDE", "UNEXPECTED_DEATH_WHILE_IP", "UNEXPECTED_DEATH_WHILE_OP", "ADMISSION_W_72_HRS_OF_ED", "COMPLICATIONS", "COORDINATION_OF_CARE", "DELAYED_DX", "DELAYED_TX", "DISSATISFIED_WITH_CARE", "DRUG_REACTION", "HYGIENE", "INAPPROPRIATE_PROCEDURE", "INAPPROPRIATE_RESTRAINT", "INAPPROPRIATE_TREATMENT", "INCREASED_UNEXPECTED_EXT_LOS", "INEFFECTIVE_BELOW_STANDARDS_OF_MEDICAL_CARE", "INEFFECTIVE_DISCHARGE_PLANNING", "LACK_OF_PROVIDER_FOLLOW_UP", "MEDICATION_ISSUE_ERROR_OMISSION_ETC", "MISSED_DIAGNOSIS", "OBSTETRICAL_COMPLICATIONS", "OP_PROCEDURE_TO_IP_ADMIT", "POST_PROCEDURE_COMPLICATION_PLAN", "POTENTIAL_PREMATURE_DISCHARGE", "QUESTIONABLE_CARE", "REFERRALS_NOT_REQUESTED_ORDERED", "REFUSAL_TO_TREAT", "UNPLANNED_TRANSFER_IN_LOC", "UNPLANNED_TRANSFER_TO_ICU", "WRONG_DIAGNOSIS", "ABUSE_BY_CAREGIVER", "COMMUNITY_COMPLAINT_DISTURBANCE_THEFT_ETC", "DOCUMENTATION", "ENVIRONMENTAL_SAFETY", "EQUIPMENT_SUPPLIES", "FALL", "INJURY_OTHER_THAN_FALL", "LEFT_AMA", "MBR_REFUSED_TO_TX_OR_SERVICES", "NEGLECT", "PHYSICAL_MISCONDUCT", "PROVIDER_CONTRACT_COMPLIANCE", "SEXUAL_MISCONDUCT", "ELOPEMENT", "HOMICIDE", "HOMICIDE_ATTEMPT", "INAPPROPRIATE_INTERPERSONAL_INTERACTIONS", "OTHER_1", "OTHER_2", "SUICIDE_OP", "SUICIDE_IP", "SUICIDE_ATTEMPT_OP", "SUICIDE_ATTEMPT_IP", "ANGINA", "ASTHMA", "BACTERIAL_PNEUMONIA", "BREAST_CANCER", "CERVICAL_CANCER", "CHF", "COPD", "DEHYDRATION", "DIABETIC_COMPLICATIONS", "HYPERTENSION", "LEAD_INPATIENT_ADMISSION", "PERFORATED_RUPTURED_APPENDIX", "UTI", "BLOOD_INCOMPATIBILITY", "CATHETER_ASSOCIATED_UTI", "HYPOGLYCEMIC_COMA", "NONKETOTIC_HYPEROSMOLAR_COMA", "PRESSURE_ULCER_STAGE_III_IV", "SECONDARY_DIABETES_W_KETOACIDOSIS", "SECONDARY_DIABETES_W_HYPEROSMOLARITY", "VASCULAR_CATHETER_ASSOCIATED_INFECTION" ]
          },
          "subTypeOther" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "QualityIncidentOutcome" : {
        "type" : "object",
        "properties" : {
          "qualityIncident" : {
            "$ref" : "#/components/schemas/QualityIncident"
          },
          "qualityIncidentReview" : {
            "$ref" : "#/components/schemas/QIReview"
          },
          "qualityIncidentAdvisorReview" : {
            "$ref" : "#/components/schemas/QIAdvisorReview"
          },
          "qiOutcome" : {
            "$ref" : "#/components/schemas/QIOutcome"
          }
        }
      },
      "SimpleDocumentInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "documentSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "controlNumber" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "fullFilename" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "receiptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string"
          },
          "documentFormat" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "SimpleDocumentInfo",
          "namespace" : "http://www.casenet.com/DocumentInfo"
        }
      },
      "QualityIncidentSummary" : {
        "type" : "object",
        "properties" : {
          "incidentId" : {
            "type" : "string"
          },
          "incidentNumber" : {
            "type" : "string"
          },
          "reportingCategory" : {
            "type" : "string",
            "enum" : [ "ACCESS_AVAILABILITY", "ATTITUDE_AND_SERVICE", "BILLING", "FRAUD", "MEMBER_R_R", "OFFICE_SITE_QUALITY", "POTENTIAL_PREVENT_HEALTH_INCIDENT", "QUALITY_OF_CARE" ]
          },
          "closedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "incidentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleDocumentInfo"
            }
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        }
      },
      "BRSProxyStatus" : {
        "required" : [ "available", "serviceURL" ],
        "type" : "object",
        "properties" : {
          "serviceURL" : {
            "type" : "string"
          },
          "available" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "BRSProxyStatus",
          "namespace" : "http://www.casenet.com/BRSProxyStatus"
        }
      },
      "BRSProxyStatusSummary" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BRSProxyStatus"
            }
          }
        },
        "xml" : {
          "name" : "BRSProxyStatusSummary",
          "namespace" : "http://www.casenet.com/BRSProxyStatusSummary"
        }
      },
      "BuildInfo" : {
        "required" : [ "apiBuildNumber", "apiClientRevision", "apiRevision", "apiVersion" ],
        "type" : "object",
        "properties" : {
          "apiBuildNumber" : {
            "type" : "string"
          },
          "apiVersion" : {
            "type" : "string"
          },
          "apiRevision" : {
            "type" : "string"
          },
          "apiClientRevision" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "BuildInfo",
          "namespace" : "http://www.casenet.com/BuildInfo"
        }
      },
      "EnvironmentDetails" : {
        "required" : [ "localizationDateFormat", "localizationDateSeparator", "localizationUse24HourTime", "trucareVersion" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "boolean"
          },
          "color" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trucareVersion" : {
            "type" : "string"
          },
          "buildInfo" : {
            "$ref" : "#/components/schemas/BuildInfo"
          },
          "localizationDateFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "LocalizationDateFormat",
              "namespace" : "http://www.casenet.com/LocalizationDateFormat"
            },
            "enum" : [ "ISO_8601", "MONTH_DAY_YEAR", "DAY_MONTH_YEAR", "YEAR_MONTH_DAY" ]
          },
          "localizationDateSeparator" : {
            "type" : "string"
          },
          "localizationUse24HourTime" : {
            "type" : "boolean"
          },
          "productName" : {
            "type" : "string"
          },
          "trucareEventingEnabled" : {
            "type" : "boolean"
          },
          "ssoTrucareEnabled" : {
            "type" : "boolean"
          },
          "sessionTimeoutLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "locale" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "EnvironmentDetails",
          "namespace" : "http://www.casenet.com/EnvironmentDetails"
        }
      },
      "LocationBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "searchSpanStartDateOffsetInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchSpanEndDateOffsetInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memberLocationEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "AddressConfiguration" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "addressFieldConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddressFieldConfiguration"
            }
          },
          "multiLineFormat" : {
            "type" : "string"
          },
          "singleLineFormat" : {
            "type" : "string"
          },
          "stateOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "AddressConfiguration",
          "namespace" : "http://www.casenet.com/AddressConfiguration"
        }
      },
      "AddressFieldConfiguration" : {
        "type" : "object",
        "properties" : {
          "addressFieldType" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressFieldType",
              "namespace" : "http://www.casenet.com/AddressFieldType"
            },
            "enum" : [ "ADDRESS_LINE_1", "ADDRESS_LINE_2", "ADDRESS_LINE_3", "CITY", "STATE", "STATE_TEXT", "COUNTY", "COUNTRY", "POSTAL_CODE" ]
          },
          "label" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "AddressFieldConfiguration",
          "namespace" : "http://www.casenet.com/AddressFieldConfiguration"
        }
      },
      "OrganizationContactConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "addressTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "phoneNumberTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "emailTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "addressTypeRequired" : {
            "type" : "boolean"
          },
          "phoneNumberTypeRequired" : {
            "type" : "boolean"
          },
          "emailTypeRequired" : {
            "type" : "boolean"
          },
          "releaseMethodOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "releaseMethodRequired" : {
            "type" : "boolean"
          },
          "defaultAddressTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultEmailTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultPhoneNumberTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultReleaseMethodOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "OrganizationContactConfiguration",
          "namespace" : "http://www.casenet.com/OrganizationContactConfiguration"
        }
      },
      "ContactAddress" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "addressType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preferredAddress" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "addressForDisplayAsSingleLine" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ContactAddress",
          "namespace" : "http://www.casenet.com/ContactAddress"
        }
      },
      "ContactEmail" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "emailType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "preferredEmail" : {
            "type" : "boolean"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "active" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ContactEmail",
          "namespace" : "http://www.casenet.com/ContactEmail"
        }
      },
      "ContactPhoneNumber" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/VersionedPhoneNumber"
          },
          "phoneNumberType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preferredPhoneNumber" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "formattedPhoneNumber" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ContactPhoneNumber",
          "namespace" : "http://www.casenet.com/ContactPhoneNumber"
        }
      },
      "OrganizationContact" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "preferredName" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "preferredContact" : {
            "type" : "boolean"
          },
          "releaseInformation" : {
            "type" : "boolean"
          },
          "releaseMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date"
          },
          "middleName" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "VersionedPhoneNumber" : {
        "required" : [ "alpha2Code", "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "alpha2Code" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "phoneCountryCode" : {
            "maxLength" : 3,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "phoneNumber" : {
            "pattern" : "^[0-9]+$",
            "type" : "string"
          },
          "phoneExtension" : {
            "maxLength" : 7,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "phoneExtensionString" : {
            "type" : "string"
          },
          "phoneNumberString" : {
            "type" : "string"
          },
          "formattedPhoneNumber" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VersionedPhoneNumber",
          "namespace" : "http://www.casenet.com/VersionedPhoneNumber"
        }
      },
      "PersonalContactConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "designeeMethodOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "addressTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "phoneNumberTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "emailTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "addressTypeRequired" : {
            "type" : "boolean"
          },
          "phoneNumberTypeRequired" : {
            "type" : "boolean"
          },
          "emailTypeRequired" : {
            "type" : "boolean"
          },
          "relationshipOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "relationshipRequired" : {
            "type" : "boolean"
          },
          "extendedFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "releaseMethodOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "releaseMethodRequired" : {
            "type" : "boolean"
          },
          "defaultAddressTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultEmailTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultPhoneNumberTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultRelationshipOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultReleaseMethodOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "PersonalContactConfiguration",
          "namespace" : "http://www.casenet.com/PersonalContactConfiguration"
        }
      },
      "PersonalContact" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "contactType" : {
            "type" : "string"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "middleName" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "suffix" : {
            "type" : "string"
          },
          "preferredName" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "preferredContact" : {
            "type" : "boolean"
          },
          "medicalHomeTeamMember" : {
            "type" : "boolean"
          },
          "designee" : {
            "type" : "boolean"
          },
          "designeeMethod" : {
            "type" : "string"
          },
          "designeeDate" : {
            "type" : "string",
            "format" : "date"
          },
          "releaseInformation" : {
            "type" : "boolean"
          },
          "releaseMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date"
          },
          "relationship" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "relationshipOther" : {
            "type" : "string"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "member" : {
            "$ref" : "#/components/schemas/Member"
          },
          "middleInitial" : {
            "type" : "string"
          },
          "validAttributes" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PhoneConfiguration" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/Country"
          },
          "maxCharsPhoneNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minCharsPhoneNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PhoneConfiguration",
          "namespace" : "http://www.casenet.com/PhoneConfiguration"
        }
      },
      "ProviderContactConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "providerTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "specialtyOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "addressTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "phoneNumberTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "emailTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "releaseMethodOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "releaseMethodRequired" : {
            "type" : "boolean"
          },
          "addressTypeRequired" : {
            "type" : "boolean"
          },
          "phoneNumberTypeRequired" : {
            "type" : "boolean"
          },
          "emailTypeRequired" : {
            "type" : "boolean"
          },
          "defaultAddressTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultEmailTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultPhoneNumberTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "defaultReleaseMethodOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "ProviderContactConfiguration",
          "namespace" : "http://www.casenet.com/ProviderContactConfiguration"
        }
      },
      "ProviderContact" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "facilityName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "contactName" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "providerType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "providerNumber" : {
            "type" : "string"
          },
          "tin" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "medicareNumber" : {
            "type" : "string"
          },
          "medicaidNumber" : {
            "type" : "string"
          },
          "specialties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderContactSpecialty"
            }
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "releaseInformation" : {
            "type" : "boolean"
          },
          "releaseMethod" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "releaseDate" : {
            "type" : "string",
            "format" : "date"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "member" : {
            "$ref" : "#/components/schemas/Member"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "providerContactName" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProviderContactSpecialty" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "specialtyOptionValue" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date"
          },
          "terminationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalLetterEnclosure" : {
        "type" : "object",
        "properties" : {
          "letterEnclosureId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "documentId" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "documentName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "documentCategory" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExternalLetterEnclosure",
          "namespace" : "http://www.casenet.com/ExternalLetterEnclosure"
        }
      },
      "ExternalLetterConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "voidConfig" : {
            "$ref" : "#/components/schemas/VoidConfig"
          },
          "externalLetterTemplates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalLetterTemplate"
            }
          }
        },
        "xml" : {
          "name" : "ExternalLetterConfiguration",
          "namespace" : "http://www.casenet.com/ExternalLetterConfiguration"
        }
      },
      "ExternalLetterTemplate" : {
        "type" : "object",
        "properties" : {
          "templateId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "templateName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "templateDescription" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string"
          },
          "allowManual" : {
            "type" : "boolean"
          },
          "allowTriggered" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ExternalLetterTemplate",
          "namespace" : "http://www.casenet.com/ExternalLetterTemplate"
        }
      },
      "AbstractCarePlanTriggerableDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "updateAvailableForTriggerable" : {
            "type" : "string",
            "enum" : [ "NO_UPDATE", "UPDATE_AVAILABLE", "UPDATE_APPLIED", "UPDATE_APPLIED_WITH_NEW_VERSION" ]
          },
          "definition" : {
            "$ref" : "#/components/schemas/CarePlanElementDefinition"
          },
          "exportable" : {
            "$ref" : "#/components/schemas/Exportable"
          },
          "triggeredArtifactID" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AbstractConditionalResponseDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "questionDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QuestionDefinition"
            }
          },
          "answerDefinition" : {
            "$ref" : "#/components/schemas/AnswerDefinition"
          },
          "conditionalResponseDefinition" : {
            "type" : "object"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssessmentTriggeredArtifactsDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "carePlanTriggerableDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractCarePlanTriggerableDefinition"
            }
          },
          "triggerableAssessmentRecommendation" : {
            "$ref" : "#/components/schemas/AssessmentMeta"
          },
          "taskDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDefinition"
            }
          },
          "programTriggerableDefinitions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramTriggerableDefinition"
            }
          },
          "copy" : {
            "$ref" : "#/components/schemas/AssessmentTriggeredArtifactsDefinition"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Availability" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "dayOfWeek" : {
            "type" : "string",
            "enum" : [ "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" ]
          },
          "timeOfDay" : {
            "type" : "string",
            "enum" : [ "MORNING", "AFTERNOON", "EVENING" ]
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CarePlanBhpSetup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "memberAcknowledgementText" : {
            "type" : "string"
          },
          "memberAcknowledgementRequired" : {
            "type" : "boolean"
          },
          "interventionTaskRequired" : {
            "type" : "boolean"
          },
          "subcomponentsClosureRequired" : {
            "type" : "boolean"
          },
          "carePlanReopenable" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CaseOpenBhpSetup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "queue" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "jbpmTaskPriority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "alwaysOpenCase" : {
            "type" : "boolean"
          },
          "primaryDiagnosisRequired" : {
            "type" : "boolean"
          },
          "displayAddCaseOnReferral" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CorrespondenceTextLogoBhpSetup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "bhpLogo" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "correspondenceValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CorrespondenceValue"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "CorrespondenceValue" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "DataTypeConfiguration" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "dataTypeName" : {
            "type" : "string",
            "enum" : [ "INTEGER", "STRING", "META_OPTION", "BOOLEAN", "BOOLEAN_DATE", "DATE", "DIAGNOSIS", "PHONE_NUMBER" ]
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "DateTimeZone" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "fixed" : {
            "type" : "boolean"
          }
        }
      },
      "DefinitionVersion" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "currentVersionNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "DisplayTypeConfiguration" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "displayTypeName" : {
            "type" : "string",
            "enum" : [ "TEXT_FIELD", "VERTICAL_RADIO_BUTTONS", "HORIZONTAL_RADIO_BUTTONS", "LABEL", "VERTICAL_CHECKBOXES", "VERTICAL_CHECKBOXES_DATES", "DROPDOWN_LIST", "DATE_FIELD_CALENDAR", "PHONE_NUMBER", "DIAGNOSIS_FIELD", "THREE_COLUMN_RADIO_BUTTONS", "THREE_COLUMN_CHECKBOXES", "TEXT_AREA", "VERTICAL_CHECKBOX_GROUP", "LINK" ]
          },
          "dataTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DataTypeConfiguration"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "EnumClass" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      },
      "Exportable" : {
        "type" : "object",
        "properties" : {
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "published" : {
            "type" : "boolean"
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          }
        }
      },
      "ExternalAnswerDefMetadata" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "answerDefinition" : {
            "$ref" : "#/components/schemas/AnswerDefinition"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalAssessmentMetadata" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "assessmentMeta" : {
            "$ref" : "#/components/schemas/AssessmentMeta"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalLetterTemplateVersion" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "letterTemplateVersionStatus" : {
            "type" : "string",
            "enum" : [ "Published", "Draft", "Disabled" ]
          },
          "letterTemplate" : {
            "$ref" : "#/components/schemas/LetterTemplate"
          },
          "allowManual" : {
            "type" : "boolean"
          },
          "allowTriggered" : {
            "type" : "boolean"
          },
          "defaultRequiredRecipientTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultOptionalRecipientTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalMetaOptionMetadata" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "metaOption" : {
            "$ref" : "#/components/schemas/MetaOption"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ExternalQuestionGroupMetadata" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "assessmentQuestionGroupDefinition" : {
            "$ref" : "#/components/schemas/AssessmentQuestionGroupDefinition"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "LetterTemplateVersion" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "letterTemplateVersionStatus" : {
            "type" : "string",
            "enum" : [ "Published", "Draft", "Disabled" ]
          },
          "letterTemplate" : {
            "$ref" : "#/components/schemas/LetterTemplate"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Member" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "memberOwnerId" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "suffix" : {
            "type" : "string"
          },
          "preferredName" : {
            "type" : "string"
          },
          "ssn" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "mrn" : {
            "type" : "string"
          },
          "medicaidId" : {
            "type" : "string"
          },
          "medicareId" : {
            "type" : "string"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date"
          },
          "hasAllergy" : {
            "type" : "boolean"
          },
          "familyMgmtId" : {
            "type" : "string"
          },
          "maritalStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "citizenshipStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "employmentStatus" : {
            "type" : "string"
          },
          "ethnicity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "race" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "religion" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "religionOther" : {
            "type" : "string"
          },
          "primaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "secondaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "writtenLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "ethnicityOther" : {
            "type" : "string"
          },
          "raceOther" : {
            "type" : "string"
          },
          "primaryLanguageOther" : {
            "type" : "string"
          },
          "secondaryLanguageOther" : {
            "type" : "string"
          },
          "writtenLanguageOther" : {
            "type" : "string"
          },
          "citizenshipStatusOther" : {
            "type" : "string"
          },
          "userAlert" : {
            "type" : "string"
          },
          "systemAlert" : {
            "type" : "string"
          },
          "optOut" : {
            "type" : "boolean"
          },
          "lockedInStatus" : {
            "type" : "boolean"
          },
          "lockedInPharmacy" : {
            "$ref" : "#/components/schemas/Pharmacy"
          },
          "employer" : {
            "type" : "string"
          },
          "groupNumber" : {
            "type" : "string"
          },
          "bhpNode" : {
            "$ref" : "#/components/schemas/BhpNode"
          },
          "previousBhpNode" : {
            "type" : "object"
          },
          "timezone" : {
            "$ref" : "#/components/schemas/DateTimeZone"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "availability" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Availability"
            }
          },
          "personalContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonalContact"
            }
          },
          "organizationContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationContact"
            }
          },
          "providerContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderContact"
            }
          },
          "pcps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PCP"
            }
          },
          "specialNeeds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "specialNeedsOther" : {
            "type" : "string"
          },
          "attachments" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentInfo"
            }
          },
          "primaryHealthCoach" : {
            "$ref" : "#/components/schemas/User"
          },
          "ageString" : {
            "type" : "string"
          },
          "userOfflineState" : {
            "$ref" : "#/components/schemas/UserOfflineState"
          },
          "mostPreferredActiveAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "memberDesignee" : {
            "$ref" : "#/components/schemas/PersonalContact"
          },
          "calculatedAgeString" : {
            "type" : "string"
          },
          "lastNameCommaFirstName" : {
            "type" : "string"
          },
          "preferredAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "memberFullName" : {
            "type" : "string"
          },
          "age" : {
            "type" : "integer",
            "format" : "int32"
          },
          "middleInitial" : {
            "type" : "string"
          },
          "memberOffline" : {
            "type" : "boolean"
          },
          "currentPCP" : {
            "$ref" : "#/components/schemas/PCP"
          },
          "validAttributes" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MemberFilterGroup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "bhpNodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BhpNode"
            }
          },
          "bhpNodesToLeaves" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BhpNode"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MessageTriggerBhpSetup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "triggerType" : {
            "type" : "string",
            "enum" : [ "CASE_OWNERSHIP_CHANGE" ]
          },
          "message" : {
            "type" : "string"
          },
          "associateWithMember" : {
            "type" : "boolean"
          },
          "boardMessageRecipient" : {
            "type" : "string",
            "enum" : [ "CASE_OWNER" ]
          },
          "urgentMessage" : {
            "type" : "boolean"
          },
          "program" : {
            "$ref" : "#/components/schemas/Program"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Money" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "enum" : [ "UAE Dirham", "Afghani", "Lek", "Armenian Dram", "Netherlands Antillean Guilder", "Kwanza", "Argentine Peso", "Australian Dollar", "Aruban Florin", "Azerbaijanian Manat", "Convertible Mark", "Barbados Dollar", "Taka", "Bulgarian Lev", "Bahraini Dinar", "Burundi Franc", "Bermudian Dollar", "Brunei Dollar", "Boliviano", "Mvdol", "Brazilian Real", "Bahamian Dollar", "Ngultrum", "Pula", "Belarussian Ruble", "Belize Dollar", "Canadian Dollar", "Congolese Franc", "WIR Euro", "Swiss Franc", "WIR Franc", "Unidad de Fomento", "Chilean Peso", "Yuan Renminbi", "Colombian Peso", "Unidad de Valor Real", "Costa Rican Colon", "Peso Convertible", "Cuban Peso", "Cabo Verde Escudo", "Czech Koruna", "Djibouti Franc", "Danish Krone", "Dominican Peso", "Algerian Dinar", "Egyptian Pound", "Nakfa", "Ethiopian Birr", "Euro", "Fiji Dollar", "Falkland Islands Pound", "Pound Sterling", "Lari", "Ghana Cedi", "Gibraltar Pound", "Dalasi", "Guinea Franc", "Quetzal", "Guyana Dollar", "Hong Kong Dollar", "Lempira", "Kuna", "Gourde", "Forint", "Rupiah", "New Israeli Sheqel", "Indian Rupee", "Iraqi Dinar", "Iranian Rial", "Iceland Krona", "Jamaican Dollar", "Jordanian Dinar", "Yen", "Kenyan Shilling", "Som", "Riel", "Comoro Franc", "North Korean Won", "Won", "Kuwaiti Dinar", "Cayman Islands Dollar", "Tenge", "Kip", "Lebanese Pound", "Sri Lanka Rupee", "Liberian Dollar", "Loti", "Libyan Dinar", "Moroccan Dirham", "Moldovan Leu", "Malagasy Ariary", "Denar", "Kyat", "Tugrik", "Pataca", "Ouguiya", "Mauritius Rupee", "Rufiyaa", "Kwacha", "Mexican Peso", "Mexican Unidad de Inversion", "Malaysian Ringgit", "Mozambique Metical", "Namibia Dollar", "Naira", "Cordoba Oro", "Norwegian Krone", "Nepalese Rupee", "New Zealand Dollar", "Rial Omani", "Balboa", "Nuevo Sol", "Kina", "Philippine Peso", "Pakistan Rupee", "Zloty", "Guarani", "Qatari Rial", "Romanian Leu", "Serbian Dinar", "Russian Ruble", "Rwanda Franc", "Saudi Riyal", "Solomon Islands Dollar", "Seychelles Rupee", "Sudanese Pound", "Swedish Krona", "Singapore Dollar", "Saint Helena Pound", "Leone", "Somali Shilling", "Surinam Dollar", "South Sudanese Pound", "Dobra", "El Salvador Colon", "Syrian Pound", "Lilangeni", "Baht", "Somoni", "Turkmenistan New Manat", "Tunisian Dinar", "Pa’anga", "Turkish Lira", "Trinidad and Tobago Dollar", "New Taiwan Dollar", "Tanzanian Shilling", "Hryvnia", "Uganda Shilling", "US Dollar", "US Dollar (Next day)", "Uruguay Peso en Unidades Indexadas", "Peso Uruguayo", "Uzbekistan Sum", "Bolivar", "Dong", "Vatu", "Tala", "CFA Franc BEAC", "Silver", "Gold", "Bond Markets Unit European Composite Unit", "Bond Markets Unit European Monetary Unit", "Bond Markets Unit European Unit of Account 9", "Bond Markets Unit European Unit of Account 17", "East Caribbean Dollar", "Special Drawing Right", "CFA Franc BCEAO", "Palladium", "CFP Franc", "Platinum", "Sucre", "Codes specifically reserved for testing purposes", "ADB Unit of Account", "No currency", "Yemeni Rial", "Rand", "Zambian Kwacha", "Zimbabwe Dollar" ]
          },
          "value" : {
            "type" : "number"
          }
        }
      },
      "Network" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "networkLocations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkLocation"
            }
          },
          "networkNetworkSets" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkNetworkSet"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "name" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NetworkLocation" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "network" : {
            "$ref" : "#/components/schemas/Network"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "medicareParticipant" : {
            "type" : "boolean"
          },
          "medicaidParticipant" : {
            "type" : "boolean"
          },
          "tricareParticipant" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NetworkNetworkSet" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "networkSet" : {
            "$ref" : "#/components/schemas/NetworkSet"
          },
          "network" : {
            "$ref" : "#/components/schemas/Network"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NetworkSet" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "networkNetworkSets" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetworkNetworkSet"
            }
          },
          "productNetworkSets" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductNetworkSet"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "name" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PCP" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "terminationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "provider" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Pharmacy" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "externalId" : {
            "type" : "string"
          },
          "lockedInName" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProductNetworkSet" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "networkSet" : {
            "$ref" : "#/components/schemas/NetworkSet"
          },
          "product" : {
            "$ref" : "#/components/schemas/Product"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ProviderAddress" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "addressLine1" : {
            "type" : "string"
          },
          "addressLine2" : {
            "type" : "string"
          },
          "addressLine3" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "stateText" : {
            "type" : "string"
          },
          "county" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "countryEntity" : {
            "$ref" : "#/components/schemas/Country"
          },
          "zipCode" : {
            "type" : "string"
          },
          "undeliverable" : {
            "type" : "boolean"
          },
          "latitude" : {
            "type" : "number"
          },
          "longitude" : {
            "type" : "number"
          },
          "other" : {
            "type" : "boolean"
          },
          "us" : {
            "type" : "boolean"
          },
          "canada" : {
            "type" : "boolean"
          },
          "canadaWithNullCountry" : {
            "type" : "boolean"
          },
          "uswithNullCountry" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Publishable" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "published" : {
            "type" : "boolean"
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          }
        }
      },
      "ReadyToExportInfo" : {
        "type" : "object",
        "properties" : {
          "readyToExport" : {
            "type" : "boolean"
          },
          "readyToExportDt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "editable" : {
            "type" : "boolean"
          }
        }
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Screen", "Queue", "Assessment", "LetterTemplate", "Careplan", "Problem", "NoteDefinition", "KeyMetric", "CostSavings", "Task" ]
          },
          "customerFeatures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerFeature"
            }
          },
          "programs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Program"
            }
          },
          "hcsResource" : {
            "type" : "boolean"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ResourceVersion" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "customerFeatures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerFeature"
            }
          },
          "programs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Program"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ServiceOffer" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "contactName" : {
            "type" : "string"
          },
          "additionalInformation" : {
            "type" : "string"
          },
          "rate" : {
            "$ref" : "#/components/schemas/Money"
          },
          "rateUnit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Location"
            }
          },
          "service" : {
            "$ref" : "#/components/schemas/Service"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "externalId" : {
            "type" : "string"
          },
          "provider" : {
            "$ref" : "#/components/schemas/Provider"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ServiceProcedureDefinitionAdjustedRoute" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "serviceProcedureDefinition" : {
            "$ref" : "#/components/schemas/ServiceProcedureDefinition"
          },
          "defaultAdjustedRoute" : {
            "type" : "boolean"
          },
          "adjustedRoute" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "isSystem" : {
            "type" : "boolean"
          }
        }
      },
      "SimpleLineage" : {
        "type" : "object",
        "properties" : {
          "definitionVersion" : {
            "$ref" : "#/components/schemas/DefinitionVersion"
          },
          "definitionVersionNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SystemActor" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "username" : {
            "type" : "string"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TailoredOptionValues" : {
        "type" : "object",
        "properties" : {
          "availableOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        }
      },
      "TaskAttemptsBhpSetup" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "maxNumberOfTaskAttempts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "closeTask" : {
            "type" : "boolean"
          },
          "sendCorrespondence" : {
            "$ref" : "#/components/schemas/LetterTemplate"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TaskDefinition" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "activity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "activityOther" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "visibleId" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "assignee" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "priority" : {
            "type" : "string",
            "enum" : [ "HIGH", "NORMAL", "LOW" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resource" : {
            "$ref" : "#/components/schemas/Resource"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "readyToExport" : {
            "type" : "boolean"
          },
          "triggerSectionId" : {
            "type" : "string"
          },
          "published" : {
            "type" : "boolean"
          },
          "taskDefinitionType" : {
            "type" : "string",
            "enum" : [ "TASK_DEFINITION", "APPOINTMENT", "ASSESSMENT", "CARE_PLAN_CREATE", "CARE_PLAN_REVIEW", "MEDICATION_REVIEW" ]
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          },
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TaskPackage" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "visibleId" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "GENERIC", "HCS_ENROLLMENT_CREATE", "HCS_ENROLLMENT_EDIT", "HCS_ENROLLMENT_CLOSE", "HCS_ENROLLMENT_VOID" ]
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "metaStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "targetPublishDate" : {
            "type" : "string",
            "format" : "date"
          },
          "readyToExportInfo" : {
            "$ref" : "#/components/schemas/ReadyToExportInfo"
          },
          "taskDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDefinition"
            }
          },
          "requiredTaskDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDefinition"
            }
          },
          "finalTaskDefinition" : {
            "$ref" : "#/components/schemas/TaskDefinition"
          },
          "hasDisabledAssignee" : {
            "type" : "boolean"
          },
          "hasAllowUserToSelect" : {
            "type" : "boolean"
          },
          "hasAssignedTeam" : {
            "type" : "boolean"
          },
          "hasPrimaryCaseOwner" : {
            "type" : "boolean"
          },
          "published" : {
            "type" : "boolean"
          },
          "pastPublishDate" : {
            "type" : "boolean"
          },
          "publishDateToday" : {
            "type" : "boolean"
          },
          "exportEntityDetails" : {
            "type" : "string"
          },
          "childrenWithReadyToExport" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Exportable"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UserOfflineState" : {
        "type" : "object",
        "properties" : {
          "obsolete" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/SystemActor"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "takenOfflineDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "deviceId" : {
            "type" : "string"
          },
          "membersOffline" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Member"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UpdateExternalLetterRequest" : {
        "type" : "object",
        "properties" : {
          "requiredRecipientTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "enclosureIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "optionalRecipientTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "eventType" : {
            "type" : "string",
            "xml" : {
              "name" : "DistributedCorrespondenceEventType",
              "namespace" : "http://www.casenet.com/DistributedCorrespondenceEventType"
            },
            "enum" : [ "MANUAL", "CM", "CM_PROGRAM_ENROLLMENT", "CM_PROGRAM_CLOSURE", "UM", "TCA_UM", "TASK_ATTEMPT" ]
          },
          "letterOperations" : {
            "type" : "string",
            "enum" : [ "SAVE", "SUBMIT", "RESEND", "RESEND_EXACT_COPY" ]
          },
          "letterStatus" : {
            "type" : "string"
          },
          "memberId" : {
            "type" : "string"
          },
          "userNote" : {
            "maxLength" : 8000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "VoidLetterRequest" : {
        "required" : [ "reasonOptionValueId", "voidDate" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "reasonOptionValueId" : {
            "type" : "string"
          },
          "voidDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidLetterRequest",
          "namespace" : "http://www.casenet.com/VoidLetterRequest"
        }
      },
      "CorrespondenceValueObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "CorrespondenceValue",
          "namespace" : "http://www.casenet.com/CorrespondenceValue"
        }
      },
      "InternalLetterTemplateVersionDetail" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "letterTemplateVersionStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "LetterTemplateVersionStatus",
              "namespace" : "http://www.casenet.com/LetterTemplateVersionStatus"
            },
            "enum" : [ "Published", "Draft", "Disabled" ]
          },
          "effectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "expirationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "LocalizationDateFormat",
              "namespace" : "http://www.casenet.com/LocalizationDateFormat"
            },
            "enum" : [ "ISO_8601", "MONTH_DAY_YEAR", "DAY_MONTH_YEAR", "YEAR_MONTH_DAY" ]
          },
          "dateSeparator" : {
            "type" : "string",
            "xml" : {
              "name" : "LocalizationDateSeparator",
              "namespace" : "http://www.casenet.com/LocalizationDateSeparator"
            },
            "enum" : [ "SLASH", "DASH", "DOT" ]
          },
          "use24HrTime" : {
            "type" : "boolean"
          },
          "hideRecipientCountry" : {
            "type" : "boolean"
          },
          "userDefinedCorrespondenceTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDefinedCorrespondenceTag"
            }
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentInfo"
            }
          },
          "bhpLogo" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "companyGroupLogo" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "logoThree" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "logoFour" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "logoSignature" : {
            "$ref" : "#/components/schemas/LetterLogo"
          },
          "userNoteInfos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserNoteInfo"
            }
          },
          "letterTemplateVersionLite" : {
            "$ref" : "#/components/schemas/LetterTemplateVersionLite"
          }
        },
        "xml" : {
          "name" : "InternalLetterTemplateVersionDetail",
          "namespace" : "http://www.casenet.com/InternalLetterTemplateVersionDetail"
        }
      },
      "UserDefinedCorrespondenceTag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/CorrespondenceValueObject"
          },
          "defaultValue" : {
            "$ref" : "#/components/schemas/CorrespondenceValueObject"
          }
        },
        "xml" : {
          "name" : "UserDefinedCorrespondenceTag",
          "namespace" : "http://www.casenet.com/UserDefinedCorrespondenceTag"
        }
      },
      "UserNoteInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "defaultNote" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "mandatory" : {
            "type" : "boolean"
          },
          "contextBeforeText" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "UserNoteInfo",
          "namespace" : "http://www.casenet.com/UserNoteInfo"
        }
      },
      "InternalLetterTemplate" : {
        "type" : "object",
        "properties" : {
          "templateId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "templateResourceId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "templateName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "templateDescription" : {
            "maxLength" : 200,
            "minLength" : 0,
            "type" : "string"
          },
          "templateVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InternalLetterTemplateVersion"
            }
          }
        },
        "xml" : {
          "name" : "InternalLetterTemplate",
          "namespace" : "http://www.casenet.com/InternalLetterTemplate"
        }
      },
      "InternalLetterTemplateVersion" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "letterTemplateVersionStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "LetterTemplateVersionStatus",
              "namespace" : "http://www.casenet.com/LetterTemplateVersionStatus"
            },
            "enum" : [ "Published", "Draft", "Disabled" ]
          },
          "effectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "expirationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "InternalLetterTemplateVersion",
          "namespace" : "http://www.casenet.com/InternalLetterTemplateVersion"
        }
      },
      "AbstractLetterMailing" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "letterType" : {
            "type" : "string",
            "xml" : {
              "name" : "LetterType",
              "namespace" : "http://www.casenet.com/LetterType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          },
          "sentBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "sentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mailingInstanceId" : {
            "type" : "string"
          },
          "mailingInstanceDocumentId" : {
            "type" : "string"
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          },
          "recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterRecipient"
            }
          }
        },
        "xml" : {
          "name" : "AbstractLetterMailing",
          "namespace" : "http://www.casenet.com/AbstractLetterMailing"
        }
      },
      "LetterMailingPaginatedResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractLetterMailing"
            }
          }
        },
        "xml" : {
          "name" : "LetterMailingPaginatedResults",
          "namespace" : "http://www.casenet.com/LetterMailingPaginatedResults"
        }
      },
      "LetterMailingRequest" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "letterType" : {
            "type" : "string",
            "xml" : {
              "name" : "LetterType",
              "namespace" : "http://www.casenet.com/LetterType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          }
        },
        "xml" : {
          "name" : "LetterMailingRequest",
          "namespace" : "http://www.casenet.com/LetterMailingRequest"
        }
      },
      "ExternalLetter" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "externalLetterId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "letterMailingExternals" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterMailingExternal"
            }
          },
          "requiredRecipientTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "optionalRecipientTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "eventType" : {
            "type" : "string",
            "xml" : {
              "name" : "DistributedCorrespondenceEventType",
              "namespace" : "http://www.casenet.com/DistributedCorrespondenceEventType"
            },
            "enum" : [ "MANUAL", "CM", "CM_PROGRAM_ENROLLMENT", "CM_PROGRAM_CLOSURE", "UM", "TCA_UM", "TASK_ATTEMPT" ]
          },
          "userNote" : {
            "maxLength" : 8000,
            "minLength" : 0,
            "type" : "string"
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalLetterEnclosure"
            }
          },
          "dateGenerated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "letterStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "LetterStatus",
              "namespace" : "http://www.casenet.com/LetterStatus"
            },
            "enum" : [ "RequestSent", "InProgress", "Failed", "Cancelled", "Draft", "Locked", "Complete" ]
          },
          "member" : {
            "$ref" : "#/components/schemas/Member"
          },
          "caseId" : {
            "type" : "string"
          },
          "caseName" : {
            "type" : "string"
          },
          "caseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "letterName" : {
            "type" : "string"
          },
          "letterDesc" : {
            "type" : "string"
          },
          "carePlanName" : {
            "type" : "string"
          },
          "authType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          }
        },
        "xml" : {
          "name" : "ExternalLetter",
          "namespace" : "http://www.casenet.com/ExternalLetter"
        }
      },
      "LetterMailingExternal" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "dateSent" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalUrl" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ExternalLetterStatus",
              "namespace" : "http://www.casenet.com/ExternalLetterStatus"
            },
            "enum" : [ "RequestSent", "InProgress", "Complete", "Cancelled", "Failed" ]
          },
          "statusMessage" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          },
          "letterMailingExternalId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "recipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LetterRecipient"
            }
          }
        },
        "xml" : {
          "name" : "LetterMailingExternal",
          "namespace" : "http://www.casenet.com/LetterMailingExternal"
        }
      },
      "Pcp" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "terminationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "provider" : {
            "$ref" : "#/components/schemas/Provider"
          }
        },
        "xml" : {
          "name" : "Pcp",
          "namespace" : "http://www.casenet.com/Pcp"
        }
      },
      "CorrespondenceRecipient" : {
        "required" : [ "recipientTypeOption", "required" ],
        "type" : "object",
        "properties" : {
          "recipientTypeOption" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CorrespondenceRecipient",
          "namespace" : "http://www.casenet.com/CorrespondenceRecipient"
        }
      },
      "CreateExternalLetterRequest" : {
        "required" : [ "correspondenceRecipients", "correspondenceTemplateId" ],
        "type" : "object",
        "properties" : {
          "correspondenceTemplateId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "correspondenceRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrespondenceRecipient"
            }
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "externalLetterData" : {
            "$ref" : "#/components/schemas/ExternalLetterData"
          }
        },
        "xml" : {
          "name" : "CreateExternalLetterRequest",
          "namespace" : "http://www.casenet.com/CreateExternalLetterRequest"
        }
      },
      "ExternalLetterData" : {
        "type" : "object",
        "properties" : {
          "eventType" : {
            "type" : "string",
            "xml" : {
              "name" : "CorrespondenceEventType",
              "namespace" : "http://www.casenet.com/CorrespondenceEventType"
            },
            "enum" : [ "MANUAL", "CM", "CM_PROGRAM_ENROLLMENT", "CM_PROGRAM_CLOSURE", "UM", "TCA_UM", "TASK_ATTEMPT" ]
          }
        },
        "xml" : {
          "name" : "ExternalLetterData",
          "namespace" : "http://www.casenet.com/ExternalLetterData"
        }
      },
      "UpdateLetterStatusRequest" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "dateGenerated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "letterMailingExternal" : {
            "$ref" : "#/components/schemas/LetterMailingExternal"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateLetterStatusRequest",
          "namespace" : "http://www.casenet.com/UpdateLetterStatusRequest"
        }
      },
      "LetterStatusMessageRequest" : {
        "type" : "object",
        "properties" : {
          "letterStatusMessage" : {
            "maxLength" : 300,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "CorrespondenceSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "letterName" : {
            "type" : "string"
          },
          "letterStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "InternalLetterStatus",
              "namespace" : "http://www.casenet.com/InternalLetterStatus"
            },
            "enum" : [ "Complete", "Draft", "Locked" ]
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CaseIdentity"
          },
          "authorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "hasEnclosures" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CorrespondenceSummary",
          "namespace" : "http://www.casenet.com/CorrespondenceSummary"
        }
      },
      "CorrespondenceSummarySearchResults" : {
        "type" : "object",
        "properties" : {
          "correspondenceSummaries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrespondenceSummary"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "CorrespondenceSummarySearchResults",
          "namespace" : "http://www.casenet.com/CorrespondenceSummarySearchResults"
        }
      },
      "CorrespondenceSummarySearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "licenseFeature" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "InternalLetterStatus",
              "namespace" : "http://www.casenet.com/InternalLetterStatus"
            },
            "enum" : [ "Complete", "Draft", "Locked" ]
          },
          "dateGeneratedFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateGeneratedTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "letterName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "CorrespondenceSummarySortField",
              "namespace" : "http://www.casenet.com/CorrespondenceSummarySortField"
            },
            "enum" : [ "LETTER_NAME", "LETTER_STATUS", "UPDATED_DATE", "UPDATED_BY", "CREATED_DATE", "CREATED_BY", "VOID_STATUS", "STATUS_NAME", "GENERATED_DATE", "CN_CASE", "ARTIFACT" ]
          },
          "sortAsc" : {
            "type" : "boolean"
          },
          "authorizationType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          }
        },
        "xml" : {
          "name" : "CorrespondenceSummarySearchCriteria",
          "namespace" : "http://www.casenet.com/CorrespondenceSummarySearchCriteria"
        }
      },
      "AbstractCorrespondenceSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "letterName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CaseIdentity"
          },
          "authorization" : {
            "$ref" : "#/components/schemas/AuthorizationInfo"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "artifact" : {
            "type" : "string"
          },
          "artifactWithId" : {
            "type" : "string"
          }
        }
      },
      "CorrespondenceSummarySearchResultsV2" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "correspondenceSummaries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractCorrespondenceSummary"
            }
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrespondenceSummary"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CorrespondenceSummarySearchCriteriaV2" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "licenseFeature" : {
            "type" : "string",
            "xml" : {
              "name" : "CasenetFeature",
              "namespace" : "http://www.casenet.com/CasenetFeature"
            },
            "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
          },
          "dateGeneratedFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateGeneratedTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "letterName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "CorrespondenceSummarySortField",
              "namespace" : "http://www.casenet.com/CorrespondenceSummarySortField"
            },
            "enum" : [ "LETTER_NAME", "LETTER_STATUS", "UPDATED_DATE", "UPDATED_BY", "CREATED_DATE", "CREATED_BY", "VOID_STATUS", "STATUS_NAME", "GENERATED_DATE", "CN_CASE", "ARTIFACT" ]
          },
          "sortAsc" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "SearchCriteria",
          "namespace" : "http://www.casenet.com/SearchCriteria"
        }
      },
      "CorrespondenceConfiguration" : {
        "type" : "object",
        "properties" : {
          "distributedCorrespondenceEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "CreateExternalLetterRequestV2" : {
        "required" : [ "correspondenceRecipients", "correspondenceTemplateId" ],
        "type" : "object",
        "properties" : {
          "correspondenceTemplateId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "correspondenceRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrespondenceRecipient"
            }
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "externalLetterData" : {
            "$ref" : "#/components/schemas/ExternalLetterData"
          }
        }
      },
      "AssociableArtifactRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "AssociableArtifactType",
              "namespace" : "http://www.casenet.com/AssociableArtifactType"
            },
            "enum" : [ "Authorization", "CarePlan", "Case", "ProgramEnrollment", "ServiceRequest", "Appeal" ]
          },
          "idValue" : {
            "type" : "object"
          }
        },
        "xml" : {
          "name" : "AssociableArtifactRequest",
          "namespace" : "http://www.casenet.com/AssociableArtifactRequest"
        }
      },
      "CreateInternalLetterRequest" : {
        "type" : "object",
        "properties" : {
          "letterRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLetterRecipientRequest"
            }
          },
          "userNotes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bhpLogo" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "companyGroupLogo" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoThree" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoFour" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoSignature" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnclosureBase"
            }
          },
          "associatedArtifacts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociableArtifactRequest"
            }
          }
        },
        "xml" : {
          "name" : "CreateInternalLetterRequest",
          "namespace" : "http://www.casenet.com/CreateInternalLetterRequest"
        }
      },
      "UpdateInternalLetterRequest" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "letterRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLetterRecipientRequest"
            }
          },
          "userNotes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bhpLogo" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "companyGroupLogo" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoThree" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoFour" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "logoSignature" : {
            "$ref" : "#/components/schemas/LetterLogoRequest"
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnclosureBase"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateInternalLetterRequest",
          "namespace" : "http://www.casenet.com/UpdateInternalLetterRequest"
        }
      },
      "InternalLetterResendRequest" : {
        "type" : "object",
        "properties" : {
          "letterRecipients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateLetterRecipientRequest"
            }
          },
          "resendAsDuplicate" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "InternalLetterResendRequest",
          "namespace" : "http://www.casenet.com/InternalLetterResendRequest"
        }
      },
      "VoidInternalLetterRequest" : {
        "required" : [ "voidDate", "voidReasonOption" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VoidInternalLetterRequest",
          "namespace" : "http://www.casenet.com/VoidInternalLetterRequest"
        }
      },
      "CostSavingsConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesConfiguration",
          "namespace" : "http://www.casenet.com/ExtendedAttributesConfiguration"
        }
      },
      "CostSavingsBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "costSavingsEnabled" : {
            "type" : "boolean"
          },
          "umCostSavingsEnabled" : {
            "type" : "boolean"
          },
          "cmCostSavingsEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "CostSavingsDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "costSavingsType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "costSavingsCategory" : {
            "$ref" : "#/components/schemas/CostSavingsOptionFieldConfig"
          },
          "costSavingsUnitType" : {
            "$ref" : "#/components/schemas/CostSavingsOptionFieldConfig"
          },
          "costSavingsDetail" : {
            "$ref" : "#/components/schemas/CostSavingsOptionFieldConfig"
          },
          "typeOfService" : {
            "$ref" : "#/components/schemas/CostSavingsOptionFieldConfig"
          },
          "provider" : {
            "$ref" : "#/components/schemas/CostSavingsFieldConfig"
          },
          "procedureCode" : {
            "$ref" : "#/components/schemas/CostSavingsFieldConfig"
          },
          "finalize" : {
            "$ref" : "#/components/schemas/CostSavingsFieldConfig"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "CostSavingsFieldConfig" : {
        "type" : "object",
        "properties" : {
          "fieldDisplayed" : {
            "type" : "boolean"
          },
          "fieldRequired" : {
            "type" : "boolean"
          }
        }
      },
      "CostSavingsOptionFieldConfig" : {
        "type" : "object",
        "properties" : {
          "fieldDisplayed" : {
            "type" : "boolean"
          },
          "fieldRequired" : {
            "type" : "boolean"
          },
          "defaultOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "availableOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        }
      },
      "CostSavingsAmountRequest" : {
        "type" : "object",
        "properties" : {
          "finalSavingsAmount" : {
            "$ref" : "#/components/schemas/Money"
          }
        }
      },
      "UpdateCostSavingsRequest" : {
        "required" : [ "costSavingsTypeOption", "version" ],
        "type" : "object",
        "properties" : {
          "costSavingsTypeOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "costSavingsCategoryOption" : {
            "type" : "string"
          },
          "costSavingsDetailsOption" : {
            "type" : "string"
          },
          "typeOfServiceOption" : {
            "type" : "string"
          },
          "careProviderId" : {
            "type" : "string"
          },
          "procedureCodeId" : {
            "type" : "string"
          },
          "finalizeFlag" : {
            "type" : "boolean"
          },
          "currencyOption" : {
            "type" : "string"
          },
          "costSavingsAmountRequest" : {
            "$ref" : "#/components/schemas/CostSavingsAmountRequest"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteRequest"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CostSavingsArtifact" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      },
      "CreateCostSavingsRequest" : {
        "required" : [ "costSavingsTypeOption" ],
        "type" : "object",
        "properties" : {
          "costSavingsTypeOption" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "costSavingsCategoryOption" : {
            "type" : "string"
          },
          "costSavingsDetailsOption" : {
            "type" : "string"
          },
          "typeOfServiceOption" : {
            "type" : "string"
          },
          "careProviderId" : {
            "type" : "string"
          },
          "procedureCodeId" : {
            "type" : "string"
          },
          "finalizeFlag" : {
            "type" : "boolean"
          },
          "currencyOption" : {
            "type" : "string"
          },
          "costSavingsAmountRequest" : {
            "$ref" : "#/components/schemas/CostSavingsAmountRequest"
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteRequest"
            }
          }
        }
      },
      "AbstractCostSavingsAreaLinkLite" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AbstractCostSavingsAreaLinkLite",
          "namespace" : "http://www.casenet.com/AbstractCostSavingsAreaLinkLite"
        }
      },
      "CostSavingsInstanceSummaryLite" : {
        "required" : [ "costSavingsSource", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "costSavingsType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "costSavingsSource" : {
            "type" : "string",
            "xml" : {
              "name" : "CostSavingsArea",
              "namespace" : "http://www.casenet.com/CostSavingsArea"
            },
            "enum" : [ "CASE", "AUTH", "GENERIC" ]
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "costSavingsCategory" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "costSavingsDetail" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "typeOfService" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "providerLocation" : {
            "$ref" : "#/components/schemas/AuthorizationLocation"
          },
          "procedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "persistedState" : {
            "type" : "string",
            "xml" : {
              "name" : "PersistentEntityState",
              "namespace" : "http://www.casenet.com/PersistentEntityState"
            },
            "enum" : [ "DRAFT", "SUBMITTED" ]
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "finalizeInfo" : {
            "$ref" : "#/components/schemas/FinalizeInfo"
          },
          "savingsEntryMode" : {
            "type" : "string",
            "xml" : {
              "name" : "CostSavingsResultType",
              "namespace" : "http://www.casenet.com/CostSavingsResultType"
            },
            "enum" : [ "AMOUNT_DIRECT", "AMOUNT_CALCULATED", "AMOUNT_PERCENTAGE_DIRECT", "AMOUNT_PERCENTAGE_CALCULATED", "UNIT_DIRECT" ]
          },
          "costSavingsResult" : {
            "$ref" : "#/components/schemas/CostSavingsResultLite"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "member" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "areaLink" : {
            "$ref" : "#/components/schemas/AbstractCostSavingsAreaLinkLite"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "CostSavingsInstanceSummaryLite",
          "namespace" : "http://www.casenet.com/CostSavingsInstanceSummaryLite"
        }
      },
      "CostSavingsResultLite" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "finalSavingAmount" : {
            "$ref" : "#/components/schemas/Money"
          }
        },
        "xml" : {
          "name" : "CostSavingsResultLite",
          "namespace" : "http://www.casenet.com/CostSavingsResultLite"
        }
      },
      "FinalizeInfo" : {
        "type" : "object",
        "properties" : {
          "finalizedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "finalizedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "FinalizeInfo",
          "namespace" : "http://www.casenet.com/FinalizeInfo"
        }
      },
      "CostSavingsSearchResults" : {
        "type" : "object",
        "properties" : {
          "costSavings" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CostSavingsInstanceSummaryLite"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hasMoreResults" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CostSavingsSearchResults",
          "namespace" : "http://www.casenet.com/CostSavingsSearchResults"
        }
      },
      "CostSavingsSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "authorizationId" : {
            "$ref" : "#/components/schemas/AuthorizationId"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CostSavingsSortField"
            }
          }
        },
        "xml" : {
          "name" : "CostSavingsSearchCriteria",
          "namespace" : "http://www.casenet.com/CostSavingsSearchCriteria"
        }
      },
      "CostSavingsSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "SOURCE", "CATEGORY", "TYPE", "PROVIDER", "FROM_DATE", "TO_DATE", "SAVINGS", "CREATED_BY", "FINAL", "STATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "CostSavingsSearchAdvancedCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "authorizationId" : {
            "$ref" : "#/components/schemas/AuthorizationId"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CostSavingsSortField"
            }
          },
          "caseTypeOption" : {
            "type" : "string"
          },
          "savingsSourceOption" : {
            "type" : "string"
          },
          "savingsCategoryOption" : {
            "type" : "string"
          },
          "savingsTypeOption" : {
            "type" : "string"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "providerId" : {
            "type" : "string"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "includeFinal" : {
            "type" : "boolean"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "persistedState" : {
            "type" : "string",
            "xml" : {
              "name" : "PersistentEntityState",
              "namespace" : "http://www.casenet.com/PersistentEntityState"
            },
            "enum" : [ "DRAFT", "SUBMITTED" ]
          }
        },
        "xml" : {
          "name" : "CostSavingsSearchCriteria",
          "namespace" : "http://www.casenet.com/CostSavingsSearchCriteria"
        }
      },
      "MemberDashboardConfiguration" : {
        "type" : "object",
        "properties" : {
          "enabledPods" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberPod"
            }
          }
        }
      },
      "MemberPod" : {
        "type" : "object",
        "properties" : {
          "podType" : {
            "type" : "string",
            "enum" : [ "BANNER", "DEMOGRAPHICS", "ELIGIBILITY", "DIAGNOSIS", "ALERTS", "ALLERGIES", "PROGRAMS", "KEY_METRICS", "AUTHORIZATIONS", "REFERRALS", "MEDICATIONS", "CARE_OPPORTUNITIES", "TIMELINE" ]
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "podSize" : {
            "type" : "string",
            "enum" : [ "FULL_WIDTH", "HALF_WIDTH" ]
          }
        }
      },
      "TimelineAssessment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "AssessmentType",
              "namespace" : "http://www.casenet.com/AssessmentType"
            },
            "enum" : [ "INITIAL", "GENERAL", "SPECIALTY" ]
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TimelineAuth" : {
        "type" : "object",
        "properties" : {
          "authId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "lineItemRanges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineRange"
            }
          }
        }
      },
      "TimelineCarePlan" : {
        "type" : "object",
        "properties" : {
          "carePlanName" : {
            "type" : "string"
          },
          "statusHistories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineCarePlanStatus"
            }
          },
          "carePlanOwner" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "TimelineCarePlanStatus" : {
        "type" : "object",
        "properties" : {
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "statusType" : {
            "type" : "string",
            "xml" : {
              "name" : "CarePlanStatusType",
              "namespace" : "http://www.casenet.com/CarePlanStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          }
        }
      },
      "TimelineCase" : {
        "type" : "object",
        "properties" : {
          "caseId" : {
            "type" : "string"
          },
          "caseHistories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineCaseStatus"
            }
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "contactedOn" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      },
      "TimelineCaseStatus" : {
        "type" : "object",
        "properties" : {
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "statusType" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseStatusType",
              "namespace" : "http://www.casenet.com/CaseStatusType"
            },
            "enum" : [ "IN_PROGRESS", "CLOSED" ]
          }
        }
      },
      "TimelineDataResults" : {
        "type" : "object",
        "properties" : {
          "ipAuths" : {
            "$ref" : "#/components/schemas/TimelineItemsAuth"
          },
          "spAuths" : {
            "$ref" : "#/components/schemas/TimelineItemsAuth"
          },
          "rxAuths" : {
            "$ref" : "#/components/schemas/TimelineItemsAuth"
          },
          "referrals" : {
            "$ref" : "#/components/schemas/TimelineItemsReferral"
          },
          "programs" : {
            "$ref" : "#/components/schemas/TimelineItemsProgram"
          },
          "cases" : {
            "$ref" : "#/components/schemas/TimelineItemsCase"
          },
          "carePlans" : {
            "$ref" : "#/components/schemas/TimelineItemsCarePlan"
          },
          "assessments" : {
            "$ref" : "#/components/schemas/TimelineItemsAssessment"
          },
          "serviceRequests" : {
            "$ref" : "#/components/schemas/TimelineItemsServiceRequest"
          }
        }
      },
      "TimelineItemsAssessment" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineAssessment"
            }
          }
        }
      },
      "TimelineItemsAuth" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineAuth"
            }
          }
        }
      },
      "TimelineItemsCarePlan" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineCarePlan"
            }
          }
        }
      },
      "TimelineItemsCase" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineCase"
            }
          }
        }
      },
      "TimelineItemsProgram" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineProgram"
            }
          }
        }
      },
      "TimelineItemsReferral" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineReferral"
            }
          }
        }
      },
      "TimelineItemsServiceRequest" : {
        "type" : "object",
        "properties" : {
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "license" : {
            "type" : "string",
            "enum" : [ "LICENSED", "UNKNOWN" ]
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineServiceRequest"
            }
          }
        }
      },
      "TimelineProgram" : {
        "type" : "object",
        "properties" : {
          "programName" : {
            "type" : "string"
          },
          "programEnrollmentHistories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineProgramEnrollmentStatus"
            }
          }
        }
      },
      "TimelineProgramEnrollmentStatus" : {
        "type" : "object",
        "properties" : {
          "statusDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "statusType" : {
            "type" : "string"
          }
        }
      },
      "TimelineRange" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TimelineReferral" : {
        "type" : "object",
        "properties" : {
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referralSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "referralSourceOther" : {
            "type" : "string"
          },
          "decision" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          }
        }
      },
      "TimelineServiceRequest" : {
        "type" : "object",
        "properties" : {
          "serviceRequestId" : {
            "type" : "string"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "lineItemRanges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelineRange"
            }
          }
        }
      },
      "MemberFilterGroupSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberGroupInfoResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MemberGroupInfoResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "MemberFilterGroupSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberFilterGroupSortField"
            }
          },
          "memberFilterGroupName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "MemberFilterGroupSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "MEMBER_FILTER_GROUP_NAME", "MEMBER_FILTER_GROUP_DESCRIPTION" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "QueueStatistic" : {
        "type" : "object",
        "properties" : {
          "queue" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "numberOfTasks" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "QueueStatistics" : {
        "type" : "object",
        "properties" : {
          "queueStatistics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueueStatistic"
            }
          },
          "totalNumberOfTasks" : {
            "type" : "integer",
            "format" : "int64"
          },
          "numberOfNotIncludedTasks" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DiagnosisLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "reportedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "diagnosisCode" : {
            "$ref" : "#/components/schemas/DiagnosisCodeLite"
          },
          "diagnosisStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "DiagnosisStatus",
              "namespace" : "http://www.casenet.com/DiagnosisStatus"
            },
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "primaryDiagnosis" : {
            "type" : "boolean"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "UserDashboardCaseSearchResult" : {
        "type" : "object",
        "properties" : {
          "memberEligible" : {
            "type" : "boolean"
          },
          "member" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "caseId" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseNameOther" : {
            "type" : "string"
          },
          "caseType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "caseAcuity" : {
            "type" : "string",
            "xml" : {
              "name" : "CaseAcuity",
              "namespace" : "http://www.casenet.com/CaseAcuity"
            },
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "primaryDiagnosis" : {
            "$ref" : "#/components/schemas/DiagnosisLite"
          },
          "programEnrollment" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramEnrollmentLite"
            }
          },
          "caseOwnerRole" : {
            "type" : "string",
            "enum" : [ "PRIMARY", "SECONDARY", "BOTH" ]
          },
          "userAccessToMember" : {
            "type" : "boolean"
          },
          "contactedOnDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UserDashboardCaseSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDashboardCaseSearchResult"
            }
          },
          "noAcuityCasesCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowAcuityCasesCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mediumAcuityCasesCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "highAcuityCasesCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "criticalAcuityCasesCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "UserDashboardCaseSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "updatedDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "memberLastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "memberFirstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "caseName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "caseTypeValue" : {
            "type" : "string"
          },
          "caseOwnerRole" : {
            "type" : "string",
            "enum" : [ "PRIMARY", "SECONDARY", "BOTH" ]
          },
          "includeIneligibleMembers" : {
            "type" : "boolean"
          },
          "acuity" : {
            "type" : "string",
            "enum" : [ "NONE", "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDashboardCaseSearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "UserDashboardCaseSearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "MEMBER_NAME", "MEMBER_FIRST_NAME", "MEMBER_LAST_NAME", "CASE_NUMBER", "CASE_NAME", "CASE_TYPE", "ACUITY", "START_DATE", "UPDATED_DATE", "CONTACTED_ON_DATE", "OWNERSHIP_TYPE", "PRIMARY_DIAGNOSIS" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "UserDashboardPodStatusResult" : {
        "type" : "object",
        "properties" : {
          "podsWithData" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CASES" ]
            }
          }
        }
      },
      "TaskMetricsResponse" : {
        "type" : "object",
        "properties" : {
          "overdueCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dueTodayCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reminderTodayCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startThisWeekCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SystemMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "beginDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SystemMessageResponse" : {
        "type" : "object",
        "properties" : {
          "systemMessage" : {
            "$ref" : "#/components/schemas/SystemMessage"
          }
        }
      },
      "Api" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string"
          },
          "operations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiMethod"
            }
          }
        },
        "xml" : {
          "name" : "Api",
          "namespace" : "http://www.casenet.com/Api"
        }
      },
      "ApiGroup" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "apiVersion" : {
            "type" : "string"
          },
          "resourcePath" : {
            "type" : "string"
          },
          "apis" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Api"
            }
          },
          "path" : {
            "type" : "string",
            "writeOnly" : true
          }
        },
        "xml" : {
          "name" : "ApiGroup",
          "namespace" : "http://www.casenet.com/ApiGroup"
        }
      },
      "ApiMethod" : {
        "type" : "object",
        "properties" : {
          "operationId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "method" : {
            "type" : "string",
            "xml" : {
              "name" : "HttpMethod",
              "namespace" : "http://www.casenet.com/HttpMethod"
            },
            "enum" : [ "GET", "POST", "PUT", "DELETE" ]
          },
          "summary" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiParameter"
            }
          },
          "consumes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "enum"
              }
            }
          },
          "produces" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "enum"
              }
            }
          }
        },
        "xml" : {
          "name" : "ApiMethod",
          "namespace" : "http://www.casenet.com/ApiMethod"
        }
      },
      "ApiParameter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string"
          },
          "paramType" : {
            "type" : "string"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "enum" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "enum"
              }
            }
          }
        },
        "xml" : {
          "name" : "ApiParameter",
          "namespace" : "http://www.casenet.com/ApiParameter"
        }
      },
      "EligibilityConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "medicareExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "medicaidExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "EligibilityConfiguration",
          "namespace" : "http://www.casenet.com/EligibilityConfiguration"
        }
      },
      "AdditionalBenefit" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "benefit" : {
            "type" : "string"
          },
          "coInsurance" : {
            "$ref" : "#/components/schemas/Money"
          },
          "coPay" : {
            "$ref" : "#/components/schemas/Money"
          },
          "deductible" : {
            "$ref" : "#/components/schemas/Money"
          },
          "maxOOP" : {
            "$ref" : "#/components/schemas/Money"
          },
          "usedOOP" : {
            "$ref" : "#/components/schemas/Money"
          },
          "usedAsOf" : {
            "type" : "string",
            "format" : "date-time"
          },
          "indicator" : {
            "type" : "string",
            "enum" : [ "IN", "OUT" ]
          }
        },
        "xml" : {
          "name" : "ExtensibleObject",
          "namespace" : "http://www.casenet.com/ExtensibleObject"
        }
      },
      "Benefit" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "pharmacy" : {
            "$ref" : "#/components/schemas/RxDTO"
          },
          "totalDollarMax" : {
            "$ref" : "#/components/schemas/Money"
          },
          "expensesOOP" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OOPExpense"
            }
          },
          "additionalBenefits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdditionalBenefit"
            }
          }
        },
        "xml" : {
          "name" : "ExtensibleObject",
          "namespace" : "http://www.casenet.com/ExtensibleObject"
        }
      },
      "EligibilityBenefit" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "eligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "benefit" : {
            "$ref" : "#/components/schemas/Benefit"
          }
        },
        "xml" : {
          "name" : "ExtensibleObject",
          "namespace" : "http://www.casenet.com/ExtensibleObject"
        }
      },
      "OOPExpense" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "category" : {
            "type" : "string"
          },
          "coInsurance" : {
            "$ref" : "#/components/schemas/Money"
          },
          "deductible" : {
            "$ref" : "#/components/schemas/Money"
          },
          "maxOOP" : {
            "$ref" : "#/components/schemas/Money"
          },
          "usedOOP" : {
            "$ref" : "#/components/schemas/Money"
          },
          "usedAsOf" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ExtensibleObject",
          "namespace" : "http://www.casenet.com/ExtensibleObject"
        }
      },
      "RxDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "coverage" : {
            "type" : "boolean"
          },
          "deductible" : {
            "$ref" : "#/components/schemas/Money"
          },
          "coPay" : {
            "$ref" : "#/components/schemas/Money"
          }
        },
        "xml" : {
          "name" : "ExtensibleObject",
          "namespace" : "http://www.casenet.com/ExtensibleObject"
        }
      },
      "EnrollmentStatusEnrolledFull" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reasonOther" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          },
          "authorizedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "engagementLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "enrollmentSource" : {
            "$ref" : "#/components/schemas/EnrollmentSource"
          },
          "serviceLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "taskPackageInstances" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskPackageInstance"
            }
          },
          "consecutiveUnsuccessfulTaskAttemptsCounter" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "EnrollmentStatusEnrolled",
          "namespace" : "http://www.casenet.com/EnrollmentStatus"
        }
      },
      "ProgramTaskDetails" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assigneeName" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "taskLinkArtifactType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskLinkArtifactType",
              "namespace" : "http://www.casenet.com/TaskLinkArtifactType"
            },
            "enum" : [ "INPATIENT", "SP", "RX", "CASE", "MEDICATION", "ASSESSMENT", "CARE_PLAN" ]
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "taskActivity" : {
            "type" : "string"
          },
          "taskName" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskRecurrenceOptions" : {
            "$ref" : "#/components/schemas/AbstractTaskRecurrenceOptions"
          },
          "taskInstanceLink" : {
            "$ref" : "#/components/schemas/TaskInstanceLink"
          },
          "variablesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "workflowTask" : {
            "type" : "boolean"
          },
          "teamName" : {
            "type" : "string"
          },
          "queueName" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "triggerSource" : {
            "$ref" : "#/components/schemas/TaskTriggerSource"
          },
          "taskDefinitionType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskDefinitionType",
              "namespace" : "http://www.casenet.com/TaskDefinitionType"
            },
            "enum" : [ "TASK_DEFINITION", "APPOINTMENT", "ASSESSMENT", "CARE_PLAN_CREATE", "CARE_PLAN_REVIEW", "MEDICATION_REVIEW" ]
          }
        },
        "xml" : {
          "name" : "TaskDetails",
          "namespace" : "http://www.casenet.com/TaskDetails"
        }
      },
      "TaskPackageInstance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requiredTasks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramTaskDetails"
            }
          },
          "optionalTasks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramTaskDetails"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "NOT_STARTED", "COMPLETED", "CANCELLED" ]
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "taskPackageInfo" : {
            "$ref" : "#/components/schemas/TaskPackageInfo"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "EnrollmentRestrictionResponse" : {
        "type" : "object",
        "properties" : {
          "programName" : {
            "type" : "string"
          },
          "programId" : {
            "type" : "string"
          },
          "programEnrollmentId" : {
            "type" : "string"
          },
          "programFamily" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "enrollmentRestrictionType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProgramEnrollmentRestriction",
              "namespace" : "http://www.casenet.com/ProgramEnrollmentRestriction"
            },
            "enum" : [ "SINGLE", "MULTIPLE", "ONE_PER_PROGRAM_FAMILY", "PROGRAM_DISABLED", "PROGRAM_NOT_IN_HIERARCHY", "NO_SERVICE_LEVEL_CONFIG" ]
          }
        }
      },
      "CurrentProgramEnrollment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "program" : {
            "$ref" : "#/components/schemas/Program"
          },
          "currentStatus" : {
            "$ref" : "#/components/schemas/EnrollmentStatus"
          }
        },
        "xml" : {
          "name" : "CurrentProgramEnrollment",
          "namespace" : "http://www.casenet.com/CurrentProgramEnrollment"
        }
      },
      "CompleteProgramTaskPackageRequest" : {
        "required" : [ "programEnrollmentStatusId", "programEnrollmentStatusVersion", "taskPackageInstanceId", "taskPackageInstanceVersion" ],
        "type" : "object",
        "properties" : {
          "programEnrollmentStatusVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "programEnrollmentStatusId" : {
            "type" : "string"
          },
          "taskPackageInstanceId" : {
            "type" : "string"
          },
          "taskPackageInstanceVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "StartProgramTaskPackageRequest" : {
        "required" : [ "programEnrollmentStatusId", "programEnrollmentStatusVersion", "taskPackageId" ],
        "type" : "object",
        "properties" : {
          "programEnrollmentStatusVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "programEnrollmentStatusId" : {
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          }
        }
      },
      "CloseProgramEnrollmentRequest" : {
        "required" : [ "authorizedByUsername" ],
        "type" : "object",
        "properties" : {
          "engagementLevelOption" : {
            "type" : "string"
          },
          "authorizedByUsername" : {
            "type" : "string"
          },
          "details" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "reasonOther" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string"
          },
          "closureOutcomeOption" : {
            "type" : "string"
          },
          "outcomeOther" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "CloseProgramEnrollmentRequest",
          "namespace" : "http://www.casenet.com/CloseProgramEnrollmentRequest"
        }
      },
      "ProgramCaseAssociationRequest" : {
        "required" : [ "programEnrollmentVersion" ],
        "type" : "object",
        "properties" : {
          "programEnrollmentVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          }
        }
      },
      "CreateProgramEnrollmentRequest" : {
        "required" : [ "authorizedByUsername", "programName" ],
        "type" : "object",
        "properties" : {
          "engagementLevelOption" : {
            "type" : "string"
          },
          "authorizedByUsername" : {
            "type" : "string"
          },
          "details" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "serviceLevelOption" : {
            "type" : "string"
          },
          "firstSessionTaskPackageVisibleId" : {
            "type" : "string"
          },
          "programName" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "CreateProgramEnrollmentRequest",
          "namespace" : "http://www.casenet.com/CreateProgramEnrollmentRequest"
        }
      },
      "ReenrollProgramEnrollmentRequest" : {
        "required" : [ "authorizedByUsername" ],
        "type" : "object",
        "properties" : {
          "engagementLevelOption" : {
            "type" : "string"
          },
          "authorizedByUsername" : {
            "type" : "string"
          },
          "details" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "serviceLevelOption" : {
            "type" : "string"
          },
          "firstSessionTaskPackageVisibleId" : {
            "type" : "string"
          },
          "reenrollDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "reenrollReasonOption" : {
            "type" : "string"
          },
          "reenrollReasonOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ReenrollProgramEnrollmentRequest",
          "namespace" : "http://www.casenet.com/ReenrollProgramEnrollmentRequest"
        }
      },
      "ReinstateProgramEnrollmentRequest" : {
        "required" : [ "authorizedByUsername" ],
        "type" : "object",
        "properties" : {
          "engagementLevelOption" : {
            "type" : "string"
          },
          "authorizedByUsername" : {
            "type" : "string"
          },
          "details" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "reinstateReasonOption" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "ReinstateProgramEnrollmentRequest",
          "namespace" : "http://www.casenet.com/ReinstateProgramEnrollmentRequest"
        }
      },
      "UpdateEngagementLevelRequest" : {
        "required" : [ "programEnrollmentVersion" ],
        "type" : "object",
        "properties" : {
          "engagementLevelOption" : {
            "type" : "string"
          },
          "programEnrollmentVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CreateOptionalTaskRequest" : {
        "required" : [ "assigneeType", "dueDateOffset", "priority", "taskDefinitionId", "taskPackageInstanceId", "taskPackageInstanceVersion" ],
        "type" : "object",
        "properties" : {
          "taskPackageInstanceId" : {
            "type" : "string"
          },
          "taskPackageInstanceVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taskDefinitionId" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "assignee" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "ReopenProgramTaskPackageRequest" : {
        "required" : [ "programEnrollmentStatusId", "programEnrollmentStatusVersion", "taskPackageInstanceId", "taskPackageInstanceVersion" ],
        "type" : "object",
        "properties" : {
          "programEnrollmentStatusVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "programEnrollmentStatusId" : {
            "type" : "string"
          },
          "taskPackageInstanceId" : {
            "type" : "string"
          },
          "taskPackageInstanceVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ProgramEnrollmentConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "availablePrograms" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Program"
            }
          },
          "programServiceLevelTaskPackagesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ServiceLevelAndTaskPackagesListWrapper"
            }
          },
          "enrollmentRestrictionType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProgramEnrollmentRestriction",
              "namespace" : "http://www.casenet.com/ProgramEnrollmentRestriction"
            },
            "enum" : [ "SINGLE", "MULTIPLE", "ONE_PER_PROGRAM_FAMILY", "PROGRAM_DISABLED", "PROGRAM_NOT_IN_HIERARCHY", "NO_SERVICE_LEVEL_CONFIG" ]
          }
        },
        "xml" : {
          "name" : "ProgramEnrollmentConfiguration",
          "namespace" : "http://www.casenet.com/ProgramEnrollmentConfiguration"
        }
      },
      "ServiceLevelAndTaskPackages" : {
        "type" : "object",
        "properties" : {
          "serviceLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "initialTaskPackages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskPackageInfo"
            }
          }
        },
        "xml" : {
          "name" : "ServiceLevelAndTaskPackages",
          "namespace" : "http://www.casenet.com/ServiceLevelAndTaskPackages"
        }
      },
      "ServiceLevelAndTaskPackagesListWrapper" : {
        "type" : "object",
        "properties" : {
          "serviceLevelTaskPackagesList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceLevelAndTaskPackages"
            }
          }
        },
        "xml" : {
          "name" : "ServiceLevelAndTaskPackagesListWrapper",
          "namespace" : "http://www.casenet.com/ServiceLevelAndTaskPackagesListWrapper"
        }
      },
      "ProgramServiceLevelBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "serviceLevelContactsConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceLevelContactsConfig"
            }
          },
          "allowMultipleOpenTaskPackages" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "ProgramTaskDefinitionLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "activity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "activityOther" : {
            "type" : "string"
          },
          "visibleId" : {
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "description" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "enum" : [ "ALLOW_USER_TO_SELECT", "ASSIGNED_TEAM", "CURRENT_USER", "PRIMARY_CASE_OWNER", "QUEUE", "TEAM", "USER" ]
          },
          "taskAssignee" : {
            "$ref" : "#/components/schemas/TaskAssigneeResponse"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taskDefinitionType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskDefinitionType",
              "namespace" : "http://www.casenet.com/TaskDefinitionType"
            },
            "enum" : [ "TASK_DEFINITION", "APPOINTMENT", "ASSESSMENT", "CARE_PLAN_CREATE", "CARE_PLAN_REVIEW", "MEDICATION_REVIEW" ]
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "ServiceLevelContactsConfig" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "serviceLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "numberOfAllowedContacts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceLimit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceLevelTaskPackageConfigs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceLevelTaskPackageConfig"
            }
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "ServiceLevelTaskPackageConfig" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "taskPackage" : {
            "$ref" : "#/components/schemas/TaskPackage"
          },
          "nextTaskPackageIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "initialEnrollmentOption" : {
            "type" : "boolean"
          },
          "maxInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxConsecutiveUnsuccessfulAttemptsAllowed" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "IdentifiableObject",
          "namespace" : "http://www.casenet.com/IdentifiableObject"
        }
      },
      "FaxDocumentSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InboundFaxDocumentInfo"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "InboundFaxDocumentInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "documentSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "controlNumber" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "fullFilename" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "receiptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string"
          },
          "documentFormat" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "processed" : {
            "type" : "boolean"
          },
          "attached" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "InboundFaxDocumentInfo",
          "namespace" : "http://www.casenet.com/DocumentInfo"
        }
      },
      "InboundFaxQueue" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "inboundFaxQueueName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "SplitPdfRequest" : {
        "required" : [ "filename", "pageNumbers" ],
        "type" : "object",
        "properties" : {
          "filename" : {
            "type" : "string"
          },
          "pageNumbers" : {
            "type" : "string"
          }
        }
      },
      "DocumentProcessRequest" : {
        "type" : "object",
        "properties" : {
          "documentIdList" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CreateIndividualServicePlanRequest" : {
        "type" : "object",
        "properties" : {
          "ispId" : {
            "type" : "string"
          },
          "ispTitle" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authorizationIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "carePlanIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "memberCenteredPlanIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "serviceRequestIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "memberNoteIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "notes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "HcsEnrollmentClosureConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "reasonClosedOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "HcsEnrollmentClosureConfiguration",
          "namespace" : "http://www.casenet.com/HcsEnrollmentClosureConfiguration"
        }
      },
      "HcsEnrollmentConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "stateClassificationOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "fundingSourceOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "HcsEnrollmentConfiguration",
          "namespace" : "http://www.casenet.com/HcsEnrollmentConfiguration"
        }
      },
      "HcsEnrollmentWithCase" : {
        "type" : "object",
        "properties" : {
          "waiverEnrollmentId" : {
            "type" : "string"
          },
          "caseIdentity" : {
            "$ref" : "#/components/schemas/CaseIdentity"
          }
        },
        "xml" : {
          "name" : "HcsEnrollmentWithCase",
          "namespace" : "http://www.casenet.com/HcsEnrollmentWithCase"
        }
      },
      "CreateHcsWaiverEnrollmentWithCaseRequest" : {
        "type" : "object",
        "properties" : {
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "stateClassificationOptionValueIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fundingSourceOptionValueId" : {
            "type" : "string"
          },
          "assignedTeamId" : {
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "eligibilityId" : {
            "type" : "string"
          },
          "createCaseRequest" : {
            "$ref" : "#/components/schemas/CreateCaseRequest"
          }
        },
        "xml" : {
          "name" : "CreateHcsWaiverEnrollmentWithCaseRequest",
          "namespace" : "http://www.casenet.com/CreateHcsWaiverEnrollmentWithCaseRequest"
        }
      },
      "UpdateHcsWaiverEnrollmentRequest" : {
        "type" : "object",
        "properties" : {
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "stateClassificationOptionValueIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fundingSourceOptionValueId" : {
            "type" : "string"
          },
          "assignedTeamId" : {
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cancelOpenTasks" : {
            "type" : "boolean"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          }
        },
        "xml" : {
          "name" : "UpdateHcsWaiverEnrollmentRequest",
          "namespace" : "http://www.casenet.com/UpdateHcsWaiverEnrollmentRequest"
        }
      },
      "CloseHcsWaiverEnrollmentRequest" : {
        "required" : [ "closureReasonOptionValueId" ],
        "type" : "object",
        "properties" : {
          "closureDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOptionValueId" : {
            "type" : "string"
          },
          "reasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "cancelOpenTasks" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "CloseHcsWaiverEnrollmentRequest",
          "namespace" : "http://www.casenet.com/CloseHcsWaiverEnrollmentRequest"
        }
      },
      "CreateHcsWaiverEnrollmentRequest" : {
        "type" : "object",
        "properties" : {
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "stateClassificationOptionValueIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fundingSourceOptionValueId" : {
            "type" : "string"
          },
          "assignedTeamId" : {
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "eligibilityId" : {
            "type" : "string"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          }
        },
        "xml" : {
          "name" : "CreateHcsWaiverEnrollmentRequest",
          "namespace" : "http://www.casenet.com/CreateHcsWaiverEnrollmentRequest"
        }
      },
      "VoidHcsWaiverEnrollmentRequest" : {
        "required" : [ "authorizedByUsername", "voidReasonOption" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "voidReasonOption" : {
            "type" : "string"
          },
          "voidReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "authorizedByUsername" : {
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "taskAssigneeRequest" : {
            "$ref" : "#/components/schemas/TaskAssigneeRequest"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "VoidRequest2",
          "namespace" : "http://www.casenet.com/VoidRequest2"
        }
      },
      "HCSEnrollmentAssignCaseRequest" : {
        "type" : "object",
        "properties" : {
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          }
        }
      },
      "HcsEnrollmentDetailResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "team" : {
            "$ref" : "#/components/schemas/TeamInfo"
          },
          "fundingSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "stateClassifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CLOSED", "HISTORICAL", "SCHEDULED", "VOIDED" ]
          }
        }
      },
      "HcsWaiverEnrollmentDetailResponse" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HcsEnrollmentDetailResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "HcsEnrollmentOwner" : {
        "type" : "object",
        "properties" : {
          "fundingSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "team" : {
            "$ref" : "#/components/schemas/TeamInfo"
          }
        }
      },
      "ReopenHcsWaiverEnrollmentRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "taskAssigneeRequest" : {
            "$ref" : "#/components/schemas/TaskAssigneeRequest"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "CreateHcsEnrollmentDetailsRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "stateClassificationOptionValues" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fundingSourceOptionValue" : {
            "type" : "string"
          },
          "enrollmentDetailDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "teamId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "UpdateHcsEnrollmentDetailsRequest" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "stateClassificationOptionValues" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fundingSourceOptionValue" : {
            "type" : "string"
          },
          "enrollmentDetailDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "teamId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "UpdateHcsWaiverEnrollmentRequestV2" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "taskAssigneeRequest" : {
            "$ref" : "#/components/schemas/TaskAssigneeRequest"
          },
          "appliedEligibilityId" : {
            "type" : "string"
          },
          "createHcsEnrollmentDetailsRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateHcsEnrollmentDetailsRequest"
            }
          },
          "updateHcsEnrollmentDetailsRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateHcsEnrollmentDetailsRequest"
            }
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "CloseHcsWaiverEnrollmentRequestV2" : {
        "required" : [ "closureReasonOption" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "closureDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closureReasonOption" : {
            "type" : "string"
          },
          "closureReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "taskAssigneeRequest" : {
            "$ref" : "#/components/schemas/TaskAssigneeRequest"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "CreateHcsWaiverEnrollmentRequestV2" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "eligibilityId" : {
            "type" : "string"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "taskPackageId" : {
            "type" : "string"
          },
          "taskAssigneeRequest" : {
            "$ref" : "#/components/schemas/TaskAssigneeRequest"
          },
          "createHcsEnrollmentDetailsRequest" : {
            "$ref" : "#/components/schemas/CreateHcsEnrollmentDetailsRequest"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "HcsEnrollmentSummaryResult" : {
        "type" : "object",
        "properties" : {
          "enrollmentId" : {
            "type" : "string"
          },
          "enrollmentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "closedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "closeReasonOther" : {
            "type" : "string"
          },
          "cnCaseLite" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "CLOSED", "HISTORICAL", "SCHEDULED", "VOIDED" ]
          }
        }
      },
      "HcsWaiverEnrollmentSummarySearchResponse" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HcsEnrollmentSummaryResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "HcsWaiverEnrollmentSummarySearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "includeHistorical" : {
            "type" : "boolean"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WaiverEnrollmentSummarySearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "WaiverEnrollmentSummarySearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "ENROLLMENT_DATE", "APPLIED_ELIGIBILITY", "CLOSE_DATE", "CLOSE_REASON", "CASE_NUMBER", "CASE_NAME", "STATUS" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "HcsTaskPackageInfo" : {
        "type" : "object",
        "properties" : {
          "taskPackageId" : {
            "type" : "string"
          },
          "taskPackageName" : {
            "type" : "string"
          },
          "taskPackageVisibleId" : {
            "type" : "string"
          },
          "hasDisabledAssignee" : {
            "type" : "boolean"
          },
          "hasAllowUserToSelect" : {
            "type" : "boolean"
          },
          "hasAssignedTeam" : {
            "type" : "boolean"
          },
          "hasPrimaryCaseOwner" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "TaskPackageInfo",
          "namespace" : "http://www.casenet.com/TaskPackageInfo"
        }
      },
      "HcsEnrollmentTaskPackageResponse" : {
        "type" : "object",
        "properties" : {
          "taskPackages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HcsTaskPackageInfo"
            }
          },
          "defaultTaskPackage" : {
            "$ref" : "#/components/schemas/HcsTaskPackageInfo"
          }
        }
      },
      "IspBhpSetup" : {
        "type" : "object",
        "properties" : {
          "searchSpanInDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ispTitle" : {
            "type" : "string"
          }
        }
      },
      "Artifact" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          }
        }
      },
      "IndividualServicePlan" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "title" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          },
          "carePlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          },
          "memberCenteredPlans" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          },
          "serviceRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          },
          "memberNotes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "IspArtifactsSearchCriteria" : {
        "required" : [ "artifactType" ],
        "type" : "object",
        "properties" : {
          "artifactType" : {
            "type" : "string",
            "enum" : [ "AUTHORIZATION", "CARE_PLAN", "MEMBER_CENTERED_PLAN", "MEMBER_NOTE", "SERVICE_REQUEST", "ALLERGY", "ASSESSMENT", "CASE", "COST_SAVING", "DIAGNOSIS", "ELIGIBILITY_AND_BENEFIT", "HCS_ENROLLMENT", "INDIVIDUAL_SERVICE_PLAN", "MEDICATION", "MEMBER", "NOTE", "PROGRAM_ENROLLMENT", "REFERRAL", "TIME_TRACKING_SUMMARY" ]
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "caseIdsToFilterOn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "IspSnapshot" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "printed" : {
            "$ref" : "#/components/schemas/DocumentInfo"
          },
          "signed" : {
            "$ref" : "#/components/schemas/DocumentInfo"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "IspArtifactDetail" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "xml" : {
              "name" : "ScreenActions",
              "namespace" : "http://www.casenet.com/ScreenActions"
            },
            "enum" : [ "CREATE", "EDIT", "VIEW" ]
          },
          "artifactType" : {
            "type" : "string",
            "enum" : [ "AUTHORIZATION", "CARE_PLAN", "MEMBER_CENTERED_PLAN", "MEMBER_NOTE", "SERVICE_REQUEST", "ALLERGY", "ASSESSMENT", "CASE", "COST_SAVING", "DIAGNOSIS", "ELIGIBILITY_AND_BENEFIT", "HCS_ENROLLMENT", "INDIVIDUAL_SERVICE_PLAN", "MEDICATION", "MEMBER", "NOTE", "PROGRAM_ENROLLMENT", "REFERRAL", "TIME_TRACKING_SUMMARY" ]
          },
          "searchable" : {
            "type" : "boolean"
          },
          "assignableToCase" : {
            "type" : "boolean"
          },
          "accessible" : {
            "type" : "boolean"
          }
        }
      },
      "IqConnectConfiguration" : {
        "type" : "object",
        "properties" : {
          "iqConnectAssertionConsumerUrl" : {
            "type" : "string"
          },
          "iqConnectSamlProxyEndpoint" : {
            "type" : "string"
          },
          "iqConnectEnabled" : {
            "type" : "boolean"
          },
          "iqConnectPHIEnabled" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "IqConnectConfiguration",
          "namespace" : "http://www.casenet.com/IqConnectConfiguration"
        }
      },
      "SamlResponse" : {
        "type" : "object",
        "properties" : {
          "samlResponse" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SamlResponse",
          "namespace" : "http://www.casenet.com/SamlResponse"
        }
      },
      "KeyMetricDef" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "keyMetricType" : {
            "type" : "string",
            "xml" : {
              "name" : "KeyMetricType",
              "namespace" : "http://www.casenet.com/KeyMetricType"
            },
            "enum" : [ "OCCURRENCE", "DROP_DOWN", "SINGLE_NUMERIC", "SPLIT_NUMERIC", "MULTIPLE_NUMERIC", "CALCULATED", "COMPOSITE" ]
          },
          "keyMetricGroups" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "disabled" : {
            "type" : "boolean"
          },
          "showHedisMeasure" : {
            "type" : "boolean"
          },
          "showBarrierCompliance" : {
            "type" : "boolean"
          },
          "showSource" : {
            "type" : "boolean"
          },
          "showComments" : {
            "type" : "boolean"
          },
          "filterAgeRange" : {
            "type" : "boolean"
          },
          "filterGender" : {
            "type" : "boolean"
          },
          "barrierComplianceOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultBarrierComplianceOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "sourceOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultSourceOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "ageRangeLow" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ageRangeLowUnit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "ageRangeHigh" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ageRangeHighUnit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "genderOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "numerics" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricDefNumeric"
            }
          },
          "dropDowns" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricDefDropDown"
            }
          },
          "parts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricDef"
            }
          },
          "expression" : {
            "type" : "string"
          },
          "calculatedNumeric" : {
            "$ref" : "#/components/schemas/KeyMetricDefNumeric"
          },
          "description" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "KeyMetricDef",
          "namespace" : "http://www.casenet.com/KeyMetricDef"
        }
      },
      "KeyMetricDefDropDown" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dropDownOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "optimalDropDownOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "optional" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricDefDropDown",
          "namespace" : "http://www.casenet.com/KeyMetricDefDropDown"
        }
      },
      "KeyMetricDefNumeric" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitGroup" : {
            "$ref" : "#/components/schemas/UnitGroup"
          },
          "units" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricDefNumericUnit"
            }
          },
          "defaultUnit" : {
            "$ref" : "#/components/schemas/KeyMetricDefNumericUnit"
          },
          "optional" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricDefNumeric",
          "namespace" : "http://www.casenet.com/KeyMetricDefNumeric"
        }
      },
      "KeyMetricDefNumericUnit" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "matchingIndex" : {
            "type" : "string",
            "format" : "byte"
          },
          "digits" : {
            "type" : "string",
            "format" : "byte"
          },
          "decimals" : {
            "type" : "string",
            "format" : "byte"
          },
          "optimalLow" : {
            "type" : "number"
          },
          "optimalHigh" : {
            "type" : "number"
          },
          "unitInSI" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "conversionFactor" : {
            "type" : "number"
          },
          "optimalLowSI" : {
            "type" : "number"
          },
          "optimalHighSI" : {
            "type" : "number"
          },
          "defaultInSI" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricDefNumericUnit",
          "namespace" : "http://www.casenet.com/KeyMetricDefNumericUnit"
        }
      },
      "KeyMetricInstance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keyMetricDef" : {
            "$ref" : "#/components/schemas/KeyMetricDef"
          },
          "numerics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricInstanceNumeric"
            }
          },
          "comments" : {
            "type" : "string"
          },
          "barrierToCompliance" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherBarrier" : {
            "type" : "string"
          },
          "source" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "hedisMeasure" : {
            "type" : "boolean"
          },
          "dropDowns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricInstanceDropDown"
            }
          },
          "calculatedValue" : {
            "$ref" : "#/components/schemas/KeyMetricInstanceNumeric"
          },
          "optimal" : {
            "type" : "boolean"
          },
          "occurredDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "KeyMetricInstance",
          "namespace" : "http://www.casenet.com/KeyMetricInstance"
        }
      },
      "KeyMetricInstanceDropDown" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dropDownDef" : {
            "$ref" : "#/components/schemas/KeyMetricDefDropDown"
          },
          "value" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "optimal" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricInstanceDropDown",
          "namespace" : "http://www.casenet.com/KeyMetricInstanceDropDown"
        }
      },
      "KeyMetricInstanceNumeric" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numericDef" : {
            "$ref" : "#/components/schemas/KeyMetricDefNumeric"
          },
          "value" : {
            "type" : "number"
          },
          "unit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "optimal" : {
            "type" : "boolean"
          },
          "convertedValue" : {
            "type" : "number",
            "format" : "double"
          },
          "convertedValueUnit" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "KeyMetricInstanceNumeric",
          "namespace" : "http://www.casenet.com/KeyMetricInstanceNumeric"
        }
      },
      "UnitGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "units" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "UnitGroup",
          "namespace" : "http://www.casenet.com/UnitGroup"
        }
      },
      "KeyMetricDropDownRequest" : {
        "required" : [ "dropDownDefId" ],
        "type" : "object",
        "properties" : {
          "dropDownDefId" : {
            "type" : "string"
          },
          "valueId" : {
            "type" : "string"
          },
          "optimal" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricDropDownRequest",
          "namespace" : "http://www.casenet.com/KeyMetricDropDownRequest"
        }
      },
      "KeyMetricNumericRequest" : {
        "required" : [ "numericDefId" ],
        "type" : "object",
        "properties" : {
          "numericDefId" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          },
          "unitId" : {
            "type" : "string"
          },
          "optimal" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricNumericRequest",
          "namespace" : "http://www.casenet.com/KeyMetricNumericRequest"
        }
      },
      "KeyMetricRequest" : {
        "required" : [ "keyMetricDefId" ],
        "type" : "object",
        "properties" : {
          "keyMetricDefId" : {
            "type" : "string"
          },
          "numerics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricNumericRequest"
            }
          },
          "partInstances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricRequest"
            }
          },
          "comments" : {
            "type" : "string"
          },
          "barrierToComplianceId" : {
            "type" : "string"
          },
          "otherBarrier" : {
            "type" : "string"
          },
          "sourceId" : {
            "type" : "string"
          },
          "hedisMeasure" : {
            "type" : "boolean"
          },
          "dropDowns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricDropDownRequest"
            }
          },
          "calculatedValue" : {
            "$ref" : "#/components/schemas/KeyMetricNumericRequest"
          },
          "optimal" : {
            "type" : "boolean"
          },
          "occurredDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "KeyMetricRequest",
          "namespace" : "http://www.casenet.com/KeyMetricRequest"
        }
      },
      "KeyMetricConfiguration" : {
        "type" : "object",
        "properties" : {
          "voidInfoConfig" : {
            "$ref" : "#/components/schemas/VoidConfig"
          }
        },
        "xml" : {
          "name" : "KeyMetricConfiguration",
          "namespace" : "http://www.casenet.com/KeyMetricConfiguration"
        }
      },
      "KeyMetricsSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "groupingFieldConfigValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "KeyMetricsSearchConfiguration",
          "namespace" : "http://www.casenet.com/KeyMetricsSearchConfiguration"
        }
      },
      "KeyMetricsSearchResult" : {
        "required" : [ "createdDate", "id", "keyMetricDefId", "name", "occurredDate", "resourceName", "type", "updatedDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "keyMetricDefId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "KeyMetricType",
              "namespace" : "http://www.casenet.com/KeyMetricType"
            },
            "enum" : [ "OCCURRENCE", "DROP_DOWN", "SINGLE_NUMERIC", "SPLIT_NUMERIC", "MULTIPLE_NUMERIC", "CALCULATED", "COMPOSITE" ]
          },
          "occurredDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resourceName" : {
            "type" : "string"
          },
          "accessible" : {
            "type" : "boolean"
          },
          "voided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricsSearchResult",
          "namespace" : "http://www.casenet.com/KeyMetricsSearchResult"
        }
      },
      "KeyMetricsSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricsSearchResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "KeyMetricsSearchResults",
          "namespace" : "http://www.casenet.com/KeyMetricsSearchResults"
        }
      },
      "KeyMetricSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "NAME", "TYPE", "UPDATEDDATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "KeyMetricsSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "grouping" : {
            "type" : "string"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricSortField"
            }
          },
          "includeVoided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "KeyMetricsSearchCriteria",
          "namespace" : "http://www.casenet.com/KeyMetricsSearchCriteria"
        }
      },
      "KeyMetricInstanceSummaryResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricInstance"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "KeyMetricInstanceSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeyMetricInstanceSortField"
            }
          },
          "keyMetricDefinitionId" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "keyMetricType" : {
            "type" : "string",
            "xml" : {
              "name" : "KeyMetricType",
              "namespace" : "http://www.casenet.com/KeyMetricType"
            },
            "enum" : [ "OCCURRENCE", "DROP_DOWN", "SINGLE_NUMERIC", "SPLIT_NUMERIC", "MULTIPLE_NUMERIC", "CALCULATED", "COMPOSITE" ]
          },
          "includeVoided" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "KeyMetricInstanceSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "DATE_OCCURED", "VOIDED", "VALUE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "LoggingConfiguration" : {
        "type" : "object",
        "properties" : {
          "loggingMethod" : {
            "type" : "string",
            "enum" : [ "AUTOMATIC", "MANUAL" ]
          },
          "sessionIncidentId" : {
            "type" : "string"
          }
        }
      },
      "LogMessage" : {
        "required" : [ "className", "loggerLevel", "message" ],
        "type" : "object",
        "properties" : {
          "className" : {
            "type" : "string"
          },
          "loggerLevel" : {
            "type" : "string",
            "xml" : {
              "name" : "LoggerLevel",
              "namespace" : "http://www.casenet.com/LoggerLevel"
            },
            "enum" : [ "ALL", "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "OFF" ]
          },
          "message" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "LogMessage",
          "namespace" : "http://www.casenet.com/LogMessage"
        }
      },
      "ErrorLocation" : {
        "required" : [ "screen" ],
        "type" : "object",
        "properties" : {
          "screen" : {
            "type" : "string"
          },
          "tab" : {
            "type" : "string"
          }
        }
      },
      "ErrorMessage" : {
        "required" : [ "httpStatusCode", "message" ],
        "type" : "object",
        "properties" : {
          "httpStatusCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "httpStatusReasonPhrase" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "details" : {
            "type" : "string"
          },
          "validationResult" : {
            "$ref" : "#/components/schemas/ValidationResult"
          },
          "errorParameterList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ErrorMessage",
          "namespace" : "http://www.casenet.com/ErrorMessage"
        }
      },
      "HttpError" : {
        "required" : [ "status", "statusText", "url" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "statusText" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "error" : {
            "$ref" : "#/components/schemas/ErrorMessage"
          }
        }
      },
      "LogErrorRequest" : {
        "required" : [ "browserAgent", "errorMessage", "incidentId", "username" ],
        "type" : "object",
        "properties" : {
          "incidentId" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "browserAgent" : {
            "type" : "string"
          },
          "errorLocation" : {
            "$ref" : "#/components/schemas/ErrorLocation"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "httpError" : {
            "$ref" : "#/components/schemas/HttpError"
          },
          "reportedByUser" : {
            "type" : "boolean"
          }
        }
      },
      "ValidationResult" : {
        "type" : "object",
        "properties" : {
          "fieldErrorMessages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "objectValidationResults" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ValidationResult"
            }
          },
          "arrayValidationResults" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ValidationResult"
              }
            }
          }
        },
        "xml" : {
          "name" : "ValidationResult",
          "namespace" : "http://www.casenet.com/ValidationResult"
        }
      },
      "SourceClientResourceRequest" : {
        "required" : [ "sourceClientActivity" ],
        "type" : "object",
        "properties" : {
          "client" : {
            "type" : "string",
            "enum" : [ "HTML5", "FLEX", "PROAUTH", "API" ]
          },
          "sourceClientActivity" : {
            "type" : "string",
            "enum" : [ "Login", "Logout" ]
          }
        }
      },
      "MedispanAllergyReaction" : {
        "type" : "object",
        "properties" : {
          "allergyId" : {
            "type" : "string"
          },
          "allergyName" : {
            "type" : "string"
          },
          "severity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "reaction" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherReaction" : {
            "type" : "string"
          },
          "medispanAllergyReactionDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedispanAllergyReactionDetail"
            }
          }
        }
      },
      "MedispanAllergyReactionDetail" : {
        "type" : "object",
        "properties" : {
          "monographId" : {
            "type" : "string"
          },
          "allergyClass" : {
            "type" : "string"
          }
        }
      },
      "DiscontinueMedicationRegimenRequest" : {
        "required" : [ "discontinueDate", "discontinueReasonOption", "medicationVersion" ],
        "type" : "object",
        "properties" : {
          "medicationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "discontinueReasonOption" : {
            "type" : "string"
          },
          "discontinueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "discontinueAuthorizedByLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "discontinueReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "cancelRelatedTasks" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          }
        }
      },
      "BaseMedicationRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "adjustedDose" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "adjustedRouteOption" : {
            "type" : "string"
          },
          "adjustedRouteOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "frequencyOption" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "isCurrentlyTaking" : {
            "type" : "boolean"
          },
          "sourceOption" : {
            "type" : "string"
          },
          "sourceOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "procurementMethodOption" : {
            "type" : "string"
          },
          "procurementMethodOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "CreateMedicationRegimenReviewRequest" : {
        "required" : [ "medicationVersion" ],
        "type" : "object",
        "properties" : {
          "isCurrentlyTakingMedication" : {
            "type" : "boolean"
          },
          "actualDose" : {
            "maxLength" : 25,
            "minLength" : 0,
            "type" : "string"
          },
          "actualFrequencyOption" : {
            "type" : "string"
          },
          "actualFrequencyOther" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "quantityOnHand" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "missedDoseInLast30Days" : {
            "type" : "boolean"
          },
          "lastMissedDoseDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "missedDoseReasonOption" : {
            "type" : "string"
          },
          "missedDoseOtherReason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "takingAsOrdered" : {
            "type" : "boolean"
          },
          "knowsWhy" : {
            "type" : "boolean"
          },
          "followUpRequired" : {
            "type" : "boolean"
          },
          "nextReviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasAdverseEffects" : {
            "type" : "boolean"
          },
          "adverseEffectsOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "adverseEffectsDetails" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "reviewReason" : {
            "type" : "string",
            "enum" : [ "NO_CHANGE", "COMPLETE_MEDICATION" ]
          },
          "primaryFactorOption" : {
            "type" : "string"
          },
          "reviewDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "comments" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string"
          },
          "memberEducation" : {
            "type" : "string",
            "enum" : [ "EDUCATE_MEMBER", "REFER_TO_CASE_MANAGEMENT" ]
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "medicationVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CompleteMedicationRequest" : {
        "required" : [ "medicationRequestIds" ],
        "type" : "object",
        "properties" : {
          "completionDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "medicationRequestIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationIdRequest"
            }
          }
        }
      },
      "UpdateMedicationRegimenRequest" : {
        "required" : [ "medicationVersion" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "adjustedDose" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "adjustedRouteOption" : {
            "type" : "string"
          },
          "adjustedRouteOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "frequencyOption" : {
            "type" : "string"
          },
          "frequencyOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "isCurrentlyTaking" : {
            "type" : "boolean"
          },
          "sourceOption" : {
            "type" : "string"
          },
          "sourceOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "procurementMethodOption" : {
            "type" : "string"
          },
          "procurementMethodOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "regimenStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "regimenEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "drugEntryType" : {
            "type" : "string",
            "enum" : [ "NDC", "DISPENSED_DRUG", "DRUG_BASE_NAME" ]
          },
          "drugId" : {
            "type" : "string"
          },
          "completeMedicationRequest" : {
            "$ref" : "#/components/schemas/CompleteMedicationRequest"
          },
          "medicationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isConfirmationUpdateRequest" : {
            "type" : "boolean"
          },
          "voidMedicationRequest" : {
            "$ref" : "#/components/schemas/VoidMedicationRequest"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "VoidMedicationRequest" : {
        "required" : [ "medicationRequestIds" ],
        "type" : "object",
        "properties" : {
          "medicationRequestIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationIdRequest"
            }
          }
        }
      },
      "MemberActivityConfiguration" : {
        "type" : "object",
        "properties" : {
          "memberActivityScreenEnabled" : {
            "type" : "boolean"
          },
          "activityStreamRefreshIntervalMinutes" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ActivityItem" : {
        "type" : "object",
        "properties" : {
          "actionName" : {
            "type" : "string"
          },
          "userFullName" : {
            "type" : "string"
          },
          "datetime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "activityItemProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "MemberCenteredPlan" : {
        "type" : "object",
        "properties" : {
          "mcpId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "ownerUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "hasConfidentialNotes" : {
            "type" : "boolean"
          },
          "ownerTeam" : {
            "$ref" : "#/components/schemas/TeamInfo"
          }
        }
      },
      "MemberContactAddressConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "addressTypeRequired" : {
            "type" : "boolean"
          },
          "addressTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultAddressTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "MemberContactAddressConfiguration",
          "namespace" : "http://www.casenet.com/MemberContactAddressConfiguration"
        }
      },
      "MemberContactEmailConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "emailTypeRequired" : {
            "type" : "boolean"
          },
          "emailTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultEmailTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "MemberContactEmailConfiguration",
          "namespace" : "http://www.casenet.com/MemberContactEmailConfiguration"
        }
      },
      "MemberContactEmailConfiguration2" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "emailTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "emailTypeRequired" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "PortableConfiguration",
          "namespace" : "http://www.casenet.com/PortableConfiguration"
        }
      },
      "MemberContactPhoneNumberConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "phoneNumberTypeRequired" : {
            "type" : "boolean"
          },
          "phoneNumberTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "defaultPhoneNumberTypeOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "MemberContactPhoneNumberConfiguration",
          "namespace" : "http://www.casenet.com/MemberContactPhoneNumberConfiguration"
        }
      },
      "DocumentSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "documentSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "documentType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "controlNumber" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "fullFilename" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "receiptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "comment" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "documentFormat" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "DocumentSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "DocumentSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "documentTypeOption" : {
            "type" : "string"
          },
          "documentSourceOption" : {
            "type" : "string"
          },
          "documentName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "comment" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "documentControlNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          },
          "receiptDateFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "receiptDateTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DocumentSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "DocumentSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "NAME", "DOCUMENT_TYPE", "DOCUMENT_SOURCE", "RECEIPT_DATE", "DOC_URL", "DOC_CNTRL_NUM", "DOC_COMMENT" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "Age" : {
        "type" : "object",
        "properties" : {
          "years" : {
            "type" : "integer",
            "format" : "int32"
          },
          "months" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "days" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "Age",
          "namespace" : "http://www.casenet.com/Age"
        }
      },
      "MemberListItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "birthDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "age" : {
            "type" : "string"
          },
          "ageObject" : {
            "$ref" : "#/components/schemas/Age"
          },
          "mpi" : {
            "type" : "string"
          },
          "offline" : {
            "type" : "boolean"
          },
          "userOffline" : {
            "type" : "string"
          },
          "dateOffline" : {
            "type" : "string",
            "format" : "date-time"
          },
          "starred" : {
            "type" : "boolean"
          },
          "firstOpen" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastOpen" : {
            "type" : "string",
            "format" : "date-time"
          },
          "memberAccessible" : {
            "type" : "boolean"
          },
          "displayName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberListItem",
          "namespace" : "http://www.casenet.com/MemberListItem"
        }
      },
      "MemberListSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberListItem"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MemberList" : {
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberListItem"
            }
          }
        },
        "xml" : {
          "name" : "MemberList",
          "namespace" : "http://www.casenet.com/MemberList"
        }
      },
      "MemberListRequest" : {
        "required" : [ "memberIds" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberListOperation",
              "namespace" : "http://www.casenet.com/MemberListOperation"
            },
            "enum" : [ "ADD", "REMOVE" ]
          },
          "memberIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberId"
            }
          }
        },
        "xml" : {
          "name" : "MemberListRequest",
          "namespace" : "http://www.casenet.com/MemberListRequest"
        }
      },
      "MergeHistoryEvent" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "mergeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mergedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "InpatientAuthorizationPrescreenRequest" : {
        "required" : [ "stayLevelOption" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "prescreenAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/PrescreenAuthorizationDiagnosis"
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "noteInstanceId" : {
            "type" : "string"
          },
          "procedureCodeId" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "stayLevelOption" : {
            "type" : "string"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "servicingFacilityLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingFacilitySpecialtyOption" : {
            "type" : "string"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "servicingLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingLocationIdType" : {
            "type" : "string",
            "enum" : [ "SERVICING_FACILITY", "SERVICING_PROVIDER" ]
          }
        },
        "xml" : {
          "name" : "InpatientAuthorizationPrescreenRequest",
          "namespace" : "http://www.casenet.com/InpatientAuthorizationPrescreenRequest"
        }
      },
      "PrescreenAuthorizationDiagnosis" : {
        "type" : "object",
        "properties" : {
          "primaryAdmittingDiagnosisId" : {
            "$ref" : "#/components/schemas/DiagnosisCodeNaturalId"
          }
        },
        "xml" : {
          "name" : "PrescreenAuthorizationDiagnosis",
          "namespace" : "http://www.casenet.com/PrescreenAuthorizationDiagnosis"
        }
      },
      "RxAuthorizationPrescreenRequest" : {
        "required" : [ "medicationCodeId" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "prescreenAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/PrescreenAuthorizationDiagnosis"
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "noteInstanceId" : {
            "type" : "string"
          },
          "servicingProviderLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingProviderSpecialtyOption" : {
            "type" : "string"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "medicationCodeId" : {
            "type" : "string"
          },
          "drugQuantity" : {
            "maximum" : 999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "servicingLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingLocationIdType" : {
            "type" : "string",
            "enum" : [ "SERVICING_FACILITY", "SERVICING_PROVIDER" ]
          }
        },
        "xml" : {
          "name" : "RxAuthorizationPrescreenRequest",
          "namespace" : "http://www.casenet.com/RxAuthorizationPrescreenRequest"
        }
      },
      "PrescreenNoteRequest" : {
        "required" : [ "noteRequests" ],
        "type" : "object",
        "properties" : {
          "noteRequests" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        }
      },
      "AuthorizationMultiPrescreenResult" : {
        "required" : [ "authorizationPrescreenResults" ],
        "type" : "object",
        "properties" : {
          "authorizationPrescreenResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationPrescreenResult"
            }
          }
        }
      },
      "InpatientAuthorizationPrescreenRequestV2" : {
        "type" : "object",
        "properties" : {
          "prescreenAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/PrescreenAuthorizationDiagnosis"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "servicingFacilityLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingFacilitySpecialtyOption" : {
            "type" : "string"
          },
          "inpatientLineItemPrescreenRequestV2" : {
            "$ref" : "#/components/schemas/InpatientLineItemPrescreenRequestV2"
          },
          "serviceProcedureLineItemPrescreenRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceProcedureLineItemPrescreenRequest"
            }
          }
        }
      },
      "InpatientLineItemPrescreenRequestV2" : {
        "required" : [ "stayLevelOption" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "stayLevelOption" : {
            "type" : "string"
          },
          "procedureCodeId" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          }
        }
      },
      "PrescreenProcedureCodeRequest" : {
        "required" : [ "requestedUnits" ],
        "type" : "object",
        "properties" : {
          "procedureCodeId" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "requestedUnits" : {
            "maximum" : 999999999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ServiceProcedureLineItemPrescreenRequest" : {
        "required" : [ "placeOfServiceOption", "procedureCodes", "serviceTypeOption" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "servicingProviderLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingProviderSpecialtyId" : {
            "type" : "string"
          },
          "procedureCodes" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrescreenProcedureCodeRequest"
            }
          },
          "servicingLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingLocationIdType" : {
            "type" : "string",
            "enum" : [ "SERVICING_FACILITY", "SERVICING_PROVIDER" ]
          }
        }
      },
      "ServiceProcedureAuthorizationPrescreenRequestV2" : {
        "required" : [ "serviceProcedureLineItemRequests" ],
        "type" : "object",
        "properties" : {
          "prescreenAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/PrescreenAuthorizationDiagnosis"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "serviceProcedureLineItemRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceProcedureLineItemPrescreenRequest"
            }
          }
        }
      },
      "ServiceProcedureAuthorizationPrescreenRequest" : {
        "required" : [ "placeOfServiceOption", "requestedUnits", "serviceTypeOption" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "appliedEligibilityProductId" : {
            "$ref" : "#/components/schemas/ProductId"
          },
          "prescreenAuthorizationDiagnosis" : {
            "$ref" : "#/components/schemas/PrescreenAuthorizationDiagnosis"
          },
          "lineItemTypeOption" : {
            "type" : "string"
          },
          "requestSourceOption" : {
            "type" : "string"
          },
          "noteInstanceId" : {
            "type" : "string"
          },
          "requestedUnits" : {
            "maximum" : 999999999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "procedureCodeId" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "placeOfServiceOption" : {
            "type" : "string"
          },
          "servicingProviderLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingProviderSpecialtyOption" : {
            "type" : "string"
          },
          "inNetwork" : {
            "type" : "boolean"
          },
          "servicingLocationId" : {
            "$ref" : "#/components/schemas/LocationId"
          },
          "servicingLocationIdType" : {
            "type" : "string",
            "enum" : [ "SERVICING_FACILITY", "SERVICING_PROVIDER" ]
          }
        },
        "xml" : {
          "name" : "ServiceProcedureAuthorizationPrescreenRequest",
          "namespace" : "http://www.casenet.com/ServiceProcedureAuthorizationPrescreenRequest"
        }
      },
      "MemberGeneralInformationConfiguration" : {
        "type" : "object",
        "properties" : {
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "stateOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "citizenshipStatusRequired" : {
            "type" : "boolean"
          },
          "citizenshipStatusOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "ethnicityOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "ethnicityRequired" : {
            "type" : "boolean"
          },
          "raceOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "raceRequired" : {
            "type" : "boolean"
          },
          "religionOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "religionRequired" : {
            "type" : "boolean"
          },
          "primaryLanguageOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "primaryLanguageRequired" : {
            "type" : "boolean"
          },
          "secondaryLanguageOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "secondaryLanguageRequired" : {
            "type" : "boolean"
          },
          "writtenLanguageOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "writtenLanguageRequired" : {
            "type" : "boolean"
          },
          "specialNeedsOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "MemberGeneralInformationConfiguration",
          "namespace" : "http://www.casenet.com/MemberGeneralInformationConfiguration"
        }
      },
      "OptOutPreferenceConfiguration" : {
        "type" : "object",
        "properties" : {
          "optOutReasonOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "OptOutPreferenceConfiguration",
          "namespace" : "http://www.casenet.com/OptOutPreferenceConfiguration"
        }
      },
      "HeaderField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "HeaderFieldName",
              "namespace" : "http://www.casenet.com/HeaderFieldName"
            },
            "enum" : [ "AGE", "ALLERGY_ALERTS", "BHP_PATH", "DOB", "GENDER", "GROUP", "PRIMARY_HEALTH_COACH", "IS_LOCKED_IN", "IS_OPT_OUT", "MARITAL_STATUS", "MEDICAID_ID", "MEDICARE_ID", "MEMBER_ID", "MPI", "PCP", "PRIMARY_LANGUAGE", "WAIVER_ENROLLMENT_INFO", "WRITTEN_LANGUAGE", "ELIGIBLEDATES", "IS_ELIGIBLE", "PRODUCT_FEATURE", "PROGRAMS", "EMPLOYER", "LOW_INCOME_SUBSIDY_STATUS", "BHP_MEMBER_DETAILS", "DOCUMENT_TYPE", "UDF", "MEMBER_ATTRIBUTES" ]
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "headerFieldDetail" : {
            "$ref" : "#/components/schemas/HeaderFieldDetail"
          }
        },
        "xml" : {
          "name" : "HeaderField",
          "namespace" : "http://www.casenet.com/HeaderField"
        }
      },
      "HeaderFieldDetail" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "HeaderFieldDetail",
          "namespace" : "http://www.casenet.com/HeaderFieldDetail"
        }
      },
      "HeaderFieldList" : {
        "type" : "object",
        "properties" : {
          "list" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HeaderField"
            }
          }
        },
        "xml" : {
          "name" : "HeaderFieldList",
          "namespace" : "http://www.casenet.com/HeaderFieldList"
        }
      },
      "MemberHeaderConfiguration" : {
        "type" : "object",
        "properties" : {
          "memberHeaderConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/HeaderFieldList"
            }
          }
        },
        "xml" : {
          "name" : "MemberHeaderConfiguration",
          "namespace" : "http://www.casenet.com/MemberHeaderConfiguration"
        }
      },
      "MemberDetailsConfiguration" : {
        "type" : "object",
        "properties" : {
          "extendedFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "MemberDetailsConfiguration",
          "namespace" : "http://www.casenet.com/MemberDetailsConfiguration"
        }
      },
      "ConfigurableBhpFieldSetup" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string"
          },
          "fieldValue" : {
            "type" : "string"
          },
          "showHyperlink" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ConfigurableBhpFieldSetup",
          "namespace" : "http://www.casenet.com/ConfigurableBhpFieldSetup"
        }
      },
      "LowIncomeSubsidy" : {
        "type" : "object",
        "properties" : {
          "lowIncomeSubsidyLevel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "LowIncomeSubsidy",
          "namespace" : "http://www.casenet.com/LowIncomeSubsidy"
        }
      },
      "MemberHeader" : {
        "type" : "object",
        "properties" : {
          "memberName" : {
            "type" : "string"
          },
          "preferredName" : {
            "type" : "string"
          },
          "memberId" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "gender" : {
            "type" : "string"
          },
          "group" : {
            "type" : "string"
          },
          "maritalStatus" : {
            "type" : "string"
          },
          "primaryLanguage" : {
            "type" : "string"
          },
          "writtenLanguage" : {
            "type" : "string"
          },
          "medicareId" : {
            "type" : "string"
          },
          "medicaidId" : {
            "type" : "string"
          },
          "pcp" : {
            "type" : "string"
          },
          "pcpProviderId" : {
            "type" : "string"
          },
          "pcpProviderExternalId" : {
            "type" : "string"
          },
          "bhpPath" : {
            "type" : "string"
          },
          "bhpNodeFeedIdFullPath" : {
            "type" : "string"
          },
          "isLockedIn" : {
            "type" : "string"
          },
          "isOptOut" : {
            "type" : "string"
          },
          "isManuallyAdded" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "bhpNodeId" : {
            "type" : "string"
          },
          "memberIsEligible" : {
            "type" : "boolean"
          },
          "eligibilityEffectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "eligibilityTerminationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "age" : {
            "$ref" : "#/components/schemas/Age"
          },
          "offline" : {
            "type" : "boolean"
          },
          "userOffline" : {
            "type" : "string"
          },
          "dateTakenOffline" : {
            "type" : "string",
            "format" : "date-time"
          },
          "primaryCoach" : {
            "$ref" : "#/components/schemas/User"
          },
          "hcsEnrolled" : {
            "type" : "boolean"
          },
          "hasAllergy" : {
            "type" : "boolean"
          },
          "allergyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "dateOfDeath" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasOpenCases" : {
            "type" : "boolean"
          },
          "employer" : {
            "type" : "string"
          },
          "memberDocumentTypeIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "lowIncomeSubsidy" : {
            "$ref" : "#/components/schemas/LowIncomeSubsidy"
          },
          "memberHeaderUDFValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "memberAttributeValues" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "configurableBhpFieldSetup" : {
            "$ref" : "#/components/schemas/ConfigurableBhpFieldSetup"
          }
        },
        "xml" : {
          "name" : "MemberHeader",
          "namespace" : "http://www.casenet.com/MemberHeader"
        }
      },
      "MemberContactTimes" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "availabilities" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Availability"
            }
          }
        },
        "xml" : {
          "name" : "MemberContactTimes",
          "namespace" : "http://www.casenet.com/MemberContactTimes"
        }
      },
      "MemberDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "mrn" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "ssn" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateOfDeath" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "maritalStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "medicareId" : {
            "type" : "string"
          },
          "medicaidId" : {
            "type" : "string"
          },
          "employer" : {
            "type" : "string"
          },
          "groupNumber" : {
            "type" : "string"
          },
          "pcpDefined" : {
            "type" : "boolean"
          },
          "pcpName" : {
            "type" : "string"
          },
          "pcpProviderNumber" : {
            "type" : "string"
          },
          "pcpProviderExternalId" : {
            "type" : "string"
          },
          "pcpProviderId" : {
            "type" : "string"
          },
          "pcpEmail" : {
            "type" : "string"
          },
          "pcpPhone" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "pcpFax" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "bhpNodeId" : {
            "type" : "string"
          },
          "bhpNodeFeedIdFullPath" : {
            "type" : "string"
          },
          "bhpNodeNameFullPath" : {
            "type" : "string"
          },
          "memberHasPrivacyAddress" : {
            "type" : "boolean"
          },
          "memberHasPersonalRepresentative" : {
            "type" : "boolean"
          },
          "memberHasRestrictionOfPhi" : {
            "type" : "boolean"
          },
          "memberHasDisabilityAuthorization" : {
            "type" : "boolean"
          },
          "memberHasDispute" : {
            "type" : "boolean"
          },
          "memberHasOptOut" : {
            "type" : "boolean"
          },
          "memberHasOptOutReasons" : {
            "type" : "boolean"
          },
          "timeZoneId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberDetails",
          "namespace" : "http://www.casenet.com/MemberDetails"
        }
      },
      "MemberDetailsRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MemberDetailsRequest",
          "namespace" : "http://www.casenet.com/MemberDetailsRequest"
        }
      },
      "MemberAlertsRequest" : {
        "type" : "object",
        "properties" : {
          "userAlert" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MemberAlertsRequest",
          "namespace" : "http://www.casenet.com/MemberAlertsRequest"
        }
      },
      "MemberGeneralInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "ethnicity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "ethnicityOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "race" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "raceOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "religion" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "religionOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "citizenshipStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "citizenshipStatusOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "primaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "secondaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "writtenLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "primaryLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "secondaryLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "writtenLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "lockedInPharmacy" : {
            "$ref" : "#/components/schemas/Pharmacy"
          },
          "lockedInStatus" : {
            "type" : "boolean"
          },
          "lowIncomeSubsidy" : {
            "$ref" : "#/components/schemas/LowIncomeSubsidy"
          },
          "specialNeeds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "specialNeedsOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberGeneralInformation",
          "namespace" : "http://www.casenet.com/MemberGeneralInformation"
        }
      },
      "PharmacyRequest" : {
        "required" : [ "pharmacyName" ],
        "type" : "object",
        "properties" : {
          "pharmacyName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "externalId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PharmacyRequest",
          "namespace" : "http://www.casenet.com/PharmacyRequest"
        }
      },
      "UpdateMemberGeneralInformationRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ethnicity" : {
            "type" : "string"
          },
          "ethnicityOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "race" : {
            "type" : "string"
          },
          "raceOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "religion" : {
            "type" : "string"
          },
          "religionOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "citizenshipStatus" : {
            "type" : "string"
          },
          "citizenshipStatusOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "primaryLanguage" : {
            "type" : "string"
          },
          "secondaryLanguage" : {
            "type" : "string"
          },
          "writtenLanguage" : {
            "type" : "string"
          },
          "primaryLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "secondaryLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "writtenLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "pharmacy" : {
            "$ref" : "#/components/schemas/PharmacyRequest"
          },
          "lockedInStatus" : {
            "type" : "boolean"
          },
          "specialNeeds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "specialNeedsOther" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "UpdateMemberGeneralInformationRequest",
          "namespace" : "http://www.casenet.com/UpdateMemberGeneralInformationRequest"
        }
      },
      "MemberOptOutRequest" : {
        "type" : "object",
        "properties" : {
          "contactOptOut" : {
            "type" : "boolean"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MemberOptOutRequest",
          "namespace" : "http://www.casenet.com/MemberOptOutRequest"
        }
      },
      "MemberMpi" : {
        "type" : "object",
        "properties" : {
          "memberId" : {
            "type" : "string"
          },
          "memberMPI" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "bhpNodeId" : {
            "type" : "string"
          },
          "bhpPath" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberMpi",
          "namespace" : "http://www.casenet.com/MemberMpi"
        }
      },
      "MemberAuthorizationSearchResults" : {
        "type" : "object",
        "properties" : {
          "authorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryAuthorization"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MemberAuthorizationSearchResults",
          "namespace" : "http://www.casenet.com/MemberAuthorizationSearchResults"
        }
      },
      "MemberAuthorizationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "authorizationNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "authorizationTrackingNumber" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "includeClosed" : {
            "type" : "boolean"
          },
          "lockState" : {
            "type" : "string",
            "xml" : {
              "name" : "LockState",
              "namespace" : "http://www.casenet.com/LockState"
            },
            "enum" : [ "LOCKED", "UNLOCKED" ]
          },
          "authorizationSearchParam" : {
            "$ref" : "#/components/schemas/AuthorizationSearchParam"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "UMMemberAuthorizationSortField",
              "namespace" : "http://www.casenet.com/UMMemberAuthorizationSortField"
            },
            "enum" : [ "AUTHORIZATION_NUM", "FROM_DATE", "UPDATED_DATE", "END_DATE", "STATUS", "STATE", "INTERNAL_UI_STATE", "MEMBER_NAME", "MEMBER_EXTERNAL_ID", "REQUESTING_PROVIDER", "FACILITY_PROVIDER", "DIAGNOSIS_CODE", "DIAGNOSIS_NAME", "DIAGNOSIS_TYPE", "CASE", "UPDATED_BY" ]
          },
          "asc" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "MemberAuthorizationSearchCriteria",
          "namespace" : "http://www.casenet.com/MemberAuthorizationSearchCriteria"
        }
      },
      "CreateOptOutPreferenceRequest" : {
        "required" : [ "optOutReasonOption" ],
        "type" : "object",
        "properties" : {
          "optOutReasonOption" : {
            "type" : "string"
          },
          "optOutReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "externalId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CreateOptOutPreferenceRequest",
          "namespace" : "http://www.casenet.com/CreateOptOutPreferenceRequest"
        }
      },
      "OptOutPreference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "optOutReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "optOutOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "externalId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "OptOutPreference",
          "namespace" : "http://www.casenet.com/OptOutPreference"
        }
      },
      "MemberContactInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "optOut" : {
            "type" : "boolean"
          },
          "contactAddresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "privacyAddresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberPrivacyAddress"
            }
          },
          "contactPhoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "contactEmails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          }
        },
        "xml" : {
          "name" : "MemberContactInformation",
          "namespace" : "http://www.casenet.com/MemberContactInformation"
        }
      },
      "MemberPrivacyAddress" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "xml" : {
          "name" : "MemberPrivacyAddress",
          "namespace" : "http://www.casenet.com/MemberPrivacyAddress"
        }
      },
      "Relationship" : {
        "type" : "object",
        "properties" : {
          "otherMember" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "otherMemberAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Relationship",
          "namespace" : "http://www.casenet.com/Relationship"
        }
      },
      "MemberAlertRecord" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "memberAlertType" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberAlertType",
              "namespace" : "http://www.casenet.com/MemberAlertType"
            },
            "enum" : [ "RESTRICTION_OF_PHI", "DISABILITY_AUTHORIZATION", "DISPUTE" ]
          }
        },
        "xml" : {
          "name" : "MemberAlertRecord",
          "namespace" : "http://www.casenet.com/MemberAlertRecord"
        }
      },
      "MemberPrivacyInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "optOutPreferences" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptOutPreference"
            }
          },
          "privacyAddresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberPrivacyAddress"
            }
          },
          "personalRepresentative" : {
            "$ref" : "#/components/schemas/PersonalRepresentative"
          },
          "vettingQuestions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VettingQuestion"
            }
          },
          "alertRecords" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberAlertRecord"
            }
          }
        },
        "xml" : {
          "name" : "MemberPrivacyInformation",
          "namespace" : "http://www.casenet.com/MemberPrivacyInformation"
        }
      },
      "PersonalRepresentative" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/VersionedPhoneNumber"
          },
          "verbalLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "writtenLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "vettingQuestions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VettingQuestion"
            }
          }
        },
        "xml" : {
          "name" : "PersonalRepresentative",
          "namespace" : "http://www.casenet.com/PersonalRepresentative"
        }
      },
      "VettingQuestion" : {
        "required" : [ "answer", "question" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "question" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "answer" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VettingQuestion",
          "namespace" : "http://www.casenet.com/VettingQuestion"
        }
      },
      "UpdateOptOutPreferenceRequest" : {
        "required" : [ "optOutReasonOption" ],
        "type" : "object",
        "properties" : {
          "optOutReasonOption" : {
            "type" : "string"
          },
          "optOutReasonOther" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateOptOutPreferenceRequest",
          "namespace" : "http://www.casenet.com/UpdateOptOutPreferenceRequest"
        }
      },
      "CreateContactAddressRequest" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "addressTypeOption" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preferredAddress" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "CreateContactEmailRequest" : {
        "required" : [ "emailAddress", "emailTypeOption" ],
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string"
          },
          "emailTypeOption" : {
            "type" : "string"
          },
          "preferredEmail" : {
            "type" : "boolean"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "CreateContactPhoneNumberRequest" : {
        "required" : [ "phoneNumberTypeOption" ],
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "phoneNumberTypeOption" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preferredPhoneNumber" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "UpdateContactAddressRequest" : {
        "required" : [ "contactAddressId", "version" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "addressTypeOption" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preferredAddress" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "contactAddressId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateContactEmailRequest" : {
        "required" : [ "contactEmailId", "emailAddress", "emailTypeOption", "version" ],
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string"
          },
          "emailTypeOption" : {
            "type" : "string"
          },
          "preferredEmail" : {
            "type" : "boolean"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "active" : {
            "type" : "boolean"
          },
          "contactEmailId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateContactPhoneNumberRequest" : {
        "required" : [ "contactPhoneId", "phoneNumberTypeOption", "version" ],
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "phoneNumberTypeOption" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "preferredPhoneNumber" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "contactPhoneId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UpdateMemberRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hasAllergy" : {
            "type" : "boolean"
          },
          "ethnicityOption" : {
            "type" : "string"
          },
          "ethnicityOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "raceOption" : {
            "type" : "string"
          },
          "raceOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "religionOption" : {
            "type" : "string"
          },
          "religionOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "primaryLanguageOption" : {
            "type" : "string"
          },
          "secondaryLanguageOption" : {
            "type" : "string"
          },
          "writtenLanguageOption" : {
            "type" : "string"
          },
          "primaryLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "secondaryLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "writtenLanguageOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "userAlert" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "contactOptOut" : {
            "type" : "boolean"
          },
          "createOptOutPreferenceRequestset" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateOptOutPreferenceRequest"
            }
          },
          "deleteOptOutPreferenceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "pharmacy" : {
            "$ref" : "#/components/schemas/PharmacyRequest"
          },
          "bhpNodeFeedIdFullPath" : {
            "type" : "string"
          },
          "updateContactAddressRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateContactAddressRequest"
            }
          },
          "createContactAddressRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateContactAddressRequest"
            }
          },
          "updateContactEmailRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateContactEmailRequest"
            }
          },
          "createContactEmailRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateContactEmailRequest"
            }
          },
          "updateContactPhoneNumberRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateContactPhoneNumberRequest"
            }
          },
          "createContactPhoneNumberRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateContactPhoneNumberRequest"
            }
          },
          "specialNeedsOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "specialNeedsOther" : {
            "type" : "string"
          },
          "memberContactTimes" : {
            "$ref" : "#/components/schemas/MemberContactTimes"
          },
          "citizenshipStatusOption" : {
            "type" : "string"
          },
          "citizenshipOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "lockedInStatus" : {
            "type" : "boolean"
          },
          "primaryHealthcoach" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "MemberDetailsRequest",
          "namespace" : "http://www.casenet.com/MemberDetailsRequest"
        }
      },
      "MemberAlerts" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userAlert" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "systemAlert" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberAlerts",
          "namespace" : "http://www.casenet.com/MemberAlerts"
        }
      },
      "MemberPcp" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "providerName" : {
            "type" : "string"
          },
          "providerNumber" : {
            "type" : "string"
          },
          "providerId" : {
            "type" : "string"
          },
          "providerExternalId" : {
            "type" : "string"
          },
          "preferredProviderAddress" : {
            "$ref" : "#/components/schemas/ProviderLocationAddress"
          },
          "preferredProviderFax" : {
            "$ref" : "#/components/schemas/ProviderPhoneNumber"
          },
          "preferredProviderPhone" : {
            "$ref" : "#/components/schemas/ProviderPhoneNumber"
          },
          "preferredProviderEmail" : {
            "$ref" : "#/components/schemas/ProviderEmail"
          },
          "providerEmails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderEmail"
            }
          },
          "providerPhones" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderPhoneNumber"
            }
          },
          "providerAddresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderLocationAddress"
            }
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "TaskDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "activity" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "instanceId" : {
            "type" : "string"
          },
          "screenParameters" : {
            "$ref" : "#/components/schemas/ScreenParametersDTO"
          },
          "assignedTo" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "TaskDTO",
          "namespace" : "http://www.casenet.com/TaskDTO"
        }
      },
      "CoachSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "canAccessMember" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "User",
          "namespace" : "http://www.casenet.com/User"
        }
      },
      "CoachSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CoachSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CoachSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "firstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "lastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "specializationOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fieldVisit" : {
            "type" : "boolean"
          },
          "genderOption" : {
            "type" : "string"
          },
          "occupationOption" : {
            "type" : "string"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "state" : {
            "type" : "string"
          },
          "licensedStateOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "primaryLanguageOption" : {
            "type" : "string"
          },
          "skillOption" : {
            "type" : "string"
          },
          "availabilityTypeOption" : {
            "type" : "string"
          },
          "allUsers" : {
            "type" : "boolean"
          },
          "teamIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CoachSearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "CoachSearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "LAST_NAME", "FIRST_NAME", "GENDER", "USER_NAME" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "DuplicateCandidate" : {
        "type" : "object",
        "properties" : {
          "duplicate" : {
            "$ref" : "#/components/schemas/Member"
          },
          "target" : {
            "$ref" : "#/components/schemas/Member"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determination" : {
            "type" : "string",
            "enum" : [ "NONE", "NOT_MATCH", "MATCH_NOT_MERGED", "MATCH_MERGED" ]
          }
        }
      },
      "ResolveDuplicateCandidateRequest" : {
        "type" : "object",
        "properties" : {
          "determination" : {
            "type" : "string",
            "enum" : [ "NONE", "NOT_MATCH", "MATCH_NOT_MERGED", "MATCH_MERGED" ]
          }
        }
      },
      "DuplicateCandidateResult" : {
        "type" : "object",
        "properties" : {
          "duplicateCandidateId" : {
            "type" : "string"
          },
          "duplicate" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "target" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DuplicateCandidateResults" : {
        "type" : "object",
        "properties" : {
          "duplicateCandidates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DuplicateCandidateResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          }
        }
      },
      "CreateMemberRequest" : {
        "required" : [ "firstName", "lastName" ],
        "type" : "object",
        "properties" : {
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 2,
            "type" : "string"
          },
          "middleName" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 2,
            "type" : "string"
          },
          "dateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "genderOption" : {
            "type" : "string"
          },
          "ssn" : {
            "maxLength" : 9,
            "minLength" : 9,
            "type" : "string"
          },
          "bhpNodeFeedIdFullPath" : {
            "type" : "string"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "externalMemberId" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CreateMemberRequest",
          "namespace" : "http://www.casenet.com/CreateMemberRequest"
        }
      },
      "ExtendedSearchFieldConfig" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "attributeDef" : {
            "$ref" : "#/components/schemas/ExtendedFieldDef"
          },
          "memberProviderSearchable" : {
            "type" : "boolean"
          },
          "taskQueueSearchable" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ExtendedSearchFieldConfig",
          "namespace" : "http://www.casenet.com/ExtendedSearchFieldConfig"
        }
      },
      "MemberSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "configuredColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberSearchConfiguredColumn"
            }
          },
          "countries" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          },
          "defaultCountryId" : {
            "type" : "string"
          },
          "memberRequiresBhpNode" : {
            "type" : "boolean"
          },
          "includeStateAndZip" : {
            "type" : "boolean"
          },
          "displayedColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberSearchDisplayedColumn"
            }
          },
          "memberExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "eligibilityExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "memberExtendedSearchFieldsConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedSearchFieldConfig"
            }
          },
          "eligibilityExtendedSearchFieldsConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedSearchFieldConfig"
            }
          },
          "memberSsnMaskingType" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberSsnMaskingType",
              "namespace" : "http://www.casenet.com/MemberSsnMaskingType"
            },
            "enum" : [ "NONE", "ALL", "SHOW_LAST_FOUR_DIGITS" ]
          }
        },
        "xml" : {
          "name" : "MemberSearchConfiguration",
          "namespace" : "http://www.casenet.com/MemberSearchConfiguration"
        }
      },
      "MemberSearchConfiguredColumn" : {
        "type" : "object",
        "properties" : {
          "columnName" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberSearchColumnName",
              "namespace" : "http://www.casenet.com/MemberSearchColumnName"
            },
            "enum" : [ "LAST_NAME", "FIRST_NAME", "MIDDLE_NAME", "DATE_OF_BIRTH", "GENDER", "EXTERNAL_MEMBER_ID", "MPI", "SSN", "MEDICARE_ID", "MEDICAID_ID", "ELIGIBILITY_GROUP", "MEMBER_GROUP", "POLICY_NUMBER", "PRODUCT", "MEMBER_BHP", "ELIGIBILITY_DATES" ]
          },
          "displayWithNoAccess" : {
            "type" : "boolean"
          },
          "obsolete" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "MemberSearchConfiguredColumn",
          "namespace" : "http://www.casenet.com/MemberSearchConfiguredColumn"
        }
      },
      "MemberSearchDisplayedColumn" : {
        "type" : "object",
        "properties" : {
          "columnName" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberSearchColumnName",
              "namespace" : "http://www.casenet.com/MemberSearchColumnName"
            },
            "enum" : [ "LAST_NAME", "FIRST_NAME", "MIDDLE_NAME", "DATE_OF_BIRTH", "GENDER", "EXTERNAL_MEMBER_ID", "MPI", "SSN", "MEDICARE_ID", "MEDICAID_ID", "ELIGIBILITY_GROUP", "MEMBER_GROUP", "POLICY_NUMBER", "PRODUCT", "MEMBER_BHP", "ELIGIBILITY_DATES" ]
          },
          "displayWithNoAccess" : {
            "type" : "boolean"
          },
          "indexPosition" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "MemberSearchDisplayedColumn",
          "namespace" : "http://www.casenet.com/MemberSearchDisplayedColumn"
        }
      },
      "MemberSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "ssn" : {
            "type" : "string"
          },
          "mpi" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateOfDeath" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "city" : {
            "type" : "string"
          },
          "medicaidNumber" : {
            "type" : "string"
          },
          "medicareNumber" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "primaryCaseOwner" : {
            "type" : "string"
          },
          "eligibilityGroupNumber" : {
            "type" : "string"
          },
          "employer" : {
            "type" : "string"
          },
          "memberGroupNumber" : {
            "type" : "string"
          },
          "medicalRecordNumber" : {
            "type" : "string"
          },
          "policyNumber" : {
            "type" : "string"
          },
          "productName" : {
            "type" : "string"
          },
          "memberBhpPath" : {
            "type" : "string"
          },
          "eligibilityStartDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "eligibilityEndDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "userHasBhpAccess" : {
            "type" : "boolean"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "memberName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberSearchResult",
          "namespace" : "http://www.casenet.com/MemberSearchResult"
        }
      },
      "MemberSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberSearchResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "MemberSearchResults",
          "namespace" : "http://www.casenet.com/MemberSearchResults"
        }
      },
      "AddressSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "zipCode" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "AddressSearchCriteria",
          "namespace" : "http://www.casenet.com/AddressSearchCriteria"
        }
      },
      "MemberAdvancedSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "authorizationNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicalRecordNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "employerName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "memberGroupNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "eligibilityGroupNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "productName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "primaryCaseOwner" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "caseNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "ssn" : {
            "$ref" : "#/components/schemas/RestrictedStringCriteria"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "phoneNumberCriteria" : {
            "$ref" : "#/components/schemas/PhoneNumberCriteria"
          },
          "policyNumber" : {
            "$ref" : "#/components/schemas/RestrictedStringCriteria"
          },
          "memberExtendedFieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "eligibilityExtendedFieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "MemberAdvancedSearchCriteria",
          "namespace" : "http://www.casenet.com/MemberAdvancedSearchCriteria"
        }
      },
      "MemberSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "dob" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "gender" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "mpi" : {
            "type" : "string"
          },
          "medicaidNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicareNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "city" : {
            "type" : "string"
          },
          "addressSearchCriteria" : {
            "$ref" : "#/components/schemas/AddressSearchCriteria"
          },
          "memberAdvancedSearchCriteria" : {
            "$ref" : "#/components/schemas/MemberAdvancedSearchCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberSortField"
            }
          },
          "mpiString" : {
            "type" : "string"
          },
          "cityString" : {
            "type" : "string"
          },
          "firstNameString" : {
            "type" : "string"
          },
          "lastNameString" : {
            "type" : "string"
          },
          "middleNameString" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberSearchCriteria",
          "namespace" : "http://www.casenet.com/MemberSearchCriteria"
        }
      },
      "MemberSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberSortColumn",
              "namespace" : "http://www.casenet.com/MemberSortColumn"
            },
            "enum" : [ "FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "GENDER", "MPI", "EXTERNAL_MEMBER_ID", "MEDICARE_NUMBER", "MEDICAID_NUMBER", "DATE_OF_BIRTH", "CITY", "MRN", "GROUP_NUMBER", "AUTHORIZATION_NUMBER", "CASE_NUMBER", "PRIMARY_CASE_OWNER", "POLICY_NUMBER", "EMPLOYER_NAME", "ELIGIBILITY_GROUP_NUMBER", "PRODUCT_NAME", "SSN", "MEMBER_BHP" ]
          }
        },
        "xml" : {
          "name" : "MemberSortField",
          "namespace" : "http://www.casenet.com/MemberSortField"
        }
      },
      "PhoneNumberCriteria" : {
        "required" : [ "alpha2Code" ],
        "type" : "object",
        "properties" : {
          "alpha2Code" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "phoneCountryCode" : {
            "maxLength" : 3,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/RestrictedStringCriteria"
          },
          "phoneExtension" : {
            "$ref" : "#/components/schemas/RestrictedStringCriteria"
          },
          "phoneExtensionString" : {
            "type" : "string"
          },
          "phoneNumberString" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PhoneNumberCriteria",
          "namespace" : "http://www.casenet.com/PhoneNumberCriteria"
        }
      },
      "RestrictedStringCriteria" : {
        "type" : "object",
        "properties" : {
          "matchType" : {
            "type" : "string",
            "xml" : {
              "name" : "RestrictedStringMatchType",
              "namespace" : "http://www.casenet.com/RestrictedStringMatchType"
            },
            "enum" : [ "BEGINS_WITH", "EQUALS" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "RestrictedStringCriteria",
          "namespace" : "http://www.casenet.com/RestrictedStringCriteria"
        }
      },
      "MemberSearchCriteriaV2" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "lastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "firstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "middleName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "dob" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "gender" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "mpi" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicaidNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicareNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "addressSearchCriteria" : {
            "$ref" : "#/components/schemas/AddressSearchCriteria"
          },
          "memberAdvancedSearchCriteria" : {
            "$ref" : "#/components/schemas/MemberAdvancedSearchCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberSortField"
            }
          },
          "mpiString" : {
            "type" : "string"
          },
          "cityString" : {
            "type" : "string"
          },
          "firstNameString" : {
            "type" : "string"
          },
          "lastNameString" : {
            "type" : "string"
          },
          "middleNameString" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "MemberSummaryDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "dateOfBirth" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "manuallyAdded" : {
            "type" : "boolean"
          },
          "memberOwnerId" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "suffix" : {
            "type" : "string"
          },
          "preferredName" : {
            "type" : "string"
          },
          "ssn" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "personId" : {
            "type" : "string"
          },
          "mrn" : {
            "type" : "string"
          },
          "medicaidId" : {
            "type" : "string"
          },
          "medicareId" : {
            "type" : "string"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "dateOfDeath" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "hasAllergy" : {
            "type" : "boolean"
          },
          "familyMgmtId" : {
            "type" : "string"
          },
          "maritalStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "citizenshipStatus" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "employmentStatus" : {
            "type" : "string"
          },
          "ethnicity" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "race" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "religion" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "religionOther" : {
            "type" : "string"
          },
          "primaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "secondaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "writtenLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "ethnicityOther" : {
            "type" : "string"
          },
          "raceOther" : {
            "type" : "string"
          },
          "primaryLanguageOther" : {
            "type" : "string"
          },
          "secondaryLanguageOther" : {
            "type" : "string"
          },
          "writtenLanguageOther" : {
            "type" : "string"
          },
          "userAlert" : {
            "type" : "string"
          },
          "systemAlert" : {
            "type" : "string"
          },
          "optOut" : {
            "type" : "boolean"
          },
          "optOutReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "optOutOther" : {
            "type" : "string"
          },
          "lockedInStatus" : {
            "type" : "boolean"
          },
          "lockedInPharmacy" : {
            "$ref" : "#/components/schemas/Pharmacy"
          },
          "employer" : {
            "type" : "string"
          },
          "groupNumber" : {
            "type" : "string"
          },
          "bhpNode" : {
            "$ref" : "#/components/schemas/BhpNode"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "personalContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonalContact"
            }
          },
          "organizationContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationContact"
            }
          },
          "providerContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderContact"
            }
          },
          "pcps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Pcp"
            }
          },
          "specialNeeds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "specialNeedsOther" : {
            "type" : "string"
          },
          "currentPcp" : {
            "$ref" : "#/components/schemas/Pcp"
          },
          "userOfflineState" : {
            "$ref" : "#/components/schemas/UserOfflineState"
          },
          "age" : {
            "$ref" : "#/components/schemas/Age"
          },
          "mpi" : {
            "type" : "string"
          },
          "coverage" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Eligibility"
            }
          },
          "primaryCoach" : {
            "$ref" : "#/components/schemas/User"
          },
          "timeZoneId" : {
            "type" : "string"
          },
          "citizenshipStatusOther" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "primaryLanguageOrPrimaryLanguageOther" : {
            "type" : "string"
          },
          "writtenLanguageOrWrittenLanguageOther" : {
            "type" : "string"
          },
          "pcpName" : {
            "type" : "string"
          },
          "pcpProviderExternalId" : {
            "type" : "string"
          },
          "pcpProviderId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Member",
          "namespace" : "http://www.casenet.com/Member"
        }
      },
      "MedicationPodResult" : {
        "type" : "object",
        "properties" : {
          "medicationId" : {
            "type" : "string"
          },
          "medicationName" : {
            "type" : "string"
          },
          "frequency" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expectedRefillDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "filledDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "daysSupply" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isSupplement" : {
            "type" : "boolean"
          },
          "isRefillDatePastDue" : {
            "type" : "boolean"
          },
          "allergyMedicationReactionExists" : {
            "type" : "boolean"
          }
        }
      },
      "MedicationPodResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MedicationPodResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MemberSummaryAuthorization" : {
        "type" : "object",
        "properties" : {
          "authorizationId" : {
            "type" : "string"
          },
          "authorizationNum" : {
            "type" : "string"
          },
          "authorizationType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "requestingProviderName" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationState",
              "namespace" : "http://www.casenet.com/UMAuthorizationState"
            },
            "enum" : [ "OPEN", "OPEN_MODIFIED", "OPEN_REVISED", "CLOSED", "VOID", "DISCHARGED", "DRAFT" ]
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "UMStatus",
              "namespace" : "http://www.casenet.com/UMStatus"
            },
            "enum" : [ "APPROVE", "PARTIAL_APPROVE", "DENY", "PARTIAL_DENY", "VOID", "PEND" ]
          },
          "primaryDiagnosis" : {
            "type" : "string"
          },
          "diagnosisType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMDiagnosisType",
              "namespace" : "http://www.casenet.com/UMDiagnosisType"
            },
            "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
          },
          "appealed" : {
            "type" : "boolean"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "servicingPrescribingProviderName" : {
            "type" : "string"
          },
          "multipleServicingPrescribingProviders" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MemberSummaryAuthorizationSearchResults" : {
        "type" : "object",
        "properties" : {
          "authorizations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberSummaryAuthorization"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ProgramEnrollmentSearchResponse" : {
        "type" : "object",
        "properties" : {
          "program" : {
            "$ref" : "#/components/schemas/ProgramEnrollmentLite"
          },
          "serviceLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "currentStatus" : {
            "$ref" : "#/components/schemas/EnrollmentStatus"
          },
          "enrollmentSource" : {
            "$ref" : "#/components/schemas/EnrollmentSource"
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "caseName" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "engagementLevel" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        }
      },
      "ProgramEnrollmentSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProgramEnrollmentSearchResponse"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MemberSummaryDemographics" : {
        "type" : "object",
        "properties" : {
          "member" : {
            "$ref" : "#/components/schemas/Member"
          },
          "userDefinedFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Property"
            }
          },
          "pcpText" : {
            "type" : "string"
          },
          "bhpNodeText" : {
            "type" : "string"
          },
          "ageString" : {
            "type" : "string"
          },
          "featuresText" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberSummaryDemographics",
          "namespace" : "http://www.casenet.com/MemberSummaryDemographics"
        }
      },
      "Property" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Property",
          "namespace" : "http://www.casenet.com/Property"
        }
      },
      "PersonalRepresentativeLite" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/VersionedPhoneNumber"
          }
        },
        "xml" : {
          "name" : "PersonalRepresentativeLite",
          "namespace" : "http://www.casenet.com/PersonalRepresentativeLite"
        }
      },
      "SimpleContactsSummary" : {
        "type" : "object",
        "properties" : {
          "personalContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PersonalContact"
            }
          },
          "organizationContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganizationContact"
            }
          },
          "providerContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderContact"
            }
          },
          "personalRepresentative" : {
            "$ref" : "#/components/schemas/PersonalRepresentativeLite"
          }
        },
        "xml" : {
          "name" : "SimpleContactsSummary",
          "namespace" : "http://www.casenet.com/SimpleContactsSummary"
        }
      },
      "DiagnosisLiteResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosisLite"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MemberLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "locationName" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "addressVerifiedBy" : {
            "type" : "string"
          },
          "addressVerifiedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "memberAtLocationConfirmed" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "Active", "Closed", "Historical", "Scheduled", "Voided" ]
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "locationType" : {
            "type" : "string",
            "enum" : [ "FACILITY", "MEMBER_CONTACT", "OTHER" ]
          },
          "locationTypeOther" : {
            "type" : "string"
          },
          "providerLocationInfo" : {
            "$ref" : "#/components/schemas/ProviderLocationInfo"
          },
          "contactName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "fax" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "reportedBy" : {
            "type" : "string"
          },
          "informationSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "informationSourceOther" : {
            "type" : "string"
          },
          "levelOfCare" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "levelOfCareOther" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "ExtensibleObject",
          "namespace" : "http://www.casenet.com/ExtensibleObject"
        }
      },
      "ProviderLocationInfo" : {
        "type" : "object",
        "properties" : {
          "npi" : {
            "type" : "string"
          },
          "providerNumber" : {
            "type" : "string"
          },
          "copiedFromFacility" : {
            "type" : "boolean"
          }
        }
      },
      "CreateMemberLocationRequest" : {
        "required" : [ "locationName", "locationType", "memberAtLocationConfirmed", "reportedBy" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "locationName" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "addressVerifiedBy" : {
            "type" : "string"
          },
          "addressVerifiedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "memberAtLocationConfirmed" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "Active", "Closed", "Historical", "Scheduled", "Voided" ]
          },
          "locationType" : {
            "type" : "string",
            "enum" : [ "FACILITY", "MEMBER_CONTACT", "OTHER" ]
          },
          "locationTypeOther" : {
            "type" : "string"
          },
          "providerLocationInfo" : {
            "$ref" : "#/components/schemas/ProviderLocationInfo"
          },
          "contactName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "fax" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "reportedBy" : {
            "type" : "string"
          },
          "informationSourceOption" : {
            "type" : "string"
          },
          "informationSourceOther" : {
            "type" : "string"
          },
          "levelOfCareOption" : {
            "type" : "string"
          },
          "levelOfCareOther" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "UpdateMemberLocationRequest" : {
        "required" : [ "locationName", "locationType", "memberAtLocationConfirmed", "reportedBy" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "locationName" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/CreateAddressRequest"
          },
          "addressVerifiedBy" : {
            "type" : "string"
          },
          "addressVerifiedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "memberAtLocationConfirmed" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "Active", "Closed", "Historical", "Scheduled", "Voided" ]
          },
          "locationType" : {
            "type" : "string",
            "enum" : [ "FACILITY", "MEMBER_CONTACT", "OTHER" ]
          },
          "locationTypeOther" : {
            "type" : "string"
          },
          "providerLocationInfo" : {
            "$ref" : "#/components/schemas/ProviderLocationInfo"
          },
          "contactName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "fax" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "email" : {
            "$ref" : "#/components/schemas/Email"
          },
          "reportedBy" : {
            "type" : "string"
          },
          "informationSourceOption" : {
            "type" : "string"
          },
          "informationSourceOther" : {
            "type" : "string"
          },
          "levelOfCareOption" : {
            "type" : "string"
          },
          "levelOfCareOther" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "MemberLocationDateRange" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "locationName" : {
            "type" : "string"
          }
        }
      },
      "MemberLocationVerificationRequest" : {
        "required" : [ "verifiedByUser" ],
        "type" : "object",
        "properties" : {
          "verifiedByUser" : {
            "type" : "string"
          },
          "verifiedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      },
      "MemberLocationSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberLocationSummary"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "MemberLocationSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "locationName" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "addressVerifiedBy" : {
            "type" : "string"
          },
          "addressVerifiedDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "memberAtLocationConfirmed" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "Active", "Closed", "Historical", "Scheduled", "Voided" ]
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "fax" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "email" : {
            "$ref" : "#/components/schemas/Email"
          }
        }
      },
      "MemberLocationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "dateRangeFrom" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateRangeTo" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "dateOfInterest" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "searchManuallyTriggered" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberLocationSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "MemberLocationSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "LOCATION_NAME", "START_DATE", "END_DATE", "STATUS", "MEMBER_AT_LOCATION_CONFIRMED", "ADDRESS_VERIFIED_DATE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MenuConfiguration" : {
        "type" : "object",
        "properties" : {
          "permittedScreenNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "MenuConfiguration",
          "namespace" : "http://www.casenet.com/MenuConfiguration"
        }
      },
      "BoardMessageRequest" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "urgent" : {
            "type" : "boolean"
          },
          "associatedMemberId" : {
            "type" : "string"
          },
          "associatedUserId" : {
            "type" : "string"
          },
          "recipientIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "companyGroupIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "memberGroupIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "teamIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "BoardMessageRequest",
          "namespace" : "http://www.casenet.com/BoardMessageRequest"
        }
      },
      "BoardMessageArchivationRequest" : {
        "required" : [ "messageIDs" ],
        "type" : "object",
        "properties" : {
          "messageIDs" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BoardMessage" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "archivedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "message" : {
            "type" : "string"
          },
          "urgent" : {
            "type" : "boolean"
          },
          "userFrom" : {
            "$ref" : "#/components/schemas/User"
          },
          "associatedUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "associatedMember" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "archived" : {
            "type" : "boolean"
          },
          "bhpAccessible" : {
            "type" : "boolean"
          }
        }
      },
      "BoardMessageSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BoardMessage"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "BoardMessageSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "urgentOnly" : {
            "type" : "boolean"
          },
          "associatedMemberFirstName" : {
            "$ref" : "#/components/schemas/RestrictedStringCriteria"
          },
          "associatedMemberLastName" : {
            "$ref" : "#/components/schemas/RestrictedStringCriteria"
          },
          "associatedUsername" : {
            "type" : "string"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "userFrom" : {
            "type" : "string"
          },
          "showArchived" : {
            "type" : "boolean"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BoardMessageSearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "BoardMessageSearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "CREATION_DATE", "ASSOCIATED_MEMBER", "ASSOCIATED_USER", "FROM" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MemberNotesAssociation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberNotesAssociation",
          "namespace" : "http://www.casenet.com/MemberNotesAssociation"
        }
      },
      "InterqualTransitionPlanChecklistInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "checklist" : {
            "$ref" : "#/components/schemas/InterqualTransitionPlanChecklist"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "AppealInfo" : {
        "type" : "object",
        "properties" : {
          "appealId" : {
            "type" : "string"
          },
          "appealNumber" : {
            "type" : "string"
          },
          "appealState" : {
            "type" : "string",
            "xml" : {
              "name" : "AppealState",
              "namespace" : "http://www.casenet.com/AppealState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          }
        }
      },
      "NoteRestrictedUsersRequest" : {
        "type" : "object",
        "properties" : {
          "restrictedUsernames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "NoteSourceArtifactLink" : {
        "type" : "object"
      },
      "ServiceRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "sequenceId" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "ownerUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "ownerTeam" : {
            "$ref" : "#/components/schemas/TeamInfo"
          },
          "closeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mcp" : {
            "type" : "string"
          },
          "reviewer" : {
            "$ref" : "#/components/schemas/User"
          },
          "fundingSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "feedback" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "memberDirected" : {
            "type" : "boolean"
          },
          "nextTaskCreated" : {
            "type" : "boolean"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "notes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteInstance"
            }
          },
          "approaches" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "lineItemList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "appliedWaiverEnrollment" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ServiceRequest",
          "namespace" : "http://www.casenet.com/ServiceRequest"
        }
      },
      "CopyNoteRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "encounterDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "noteLinkRequest" : {
            "$ref" : "#/components/schemas/NoteLinkRequest"
          },
          "noteText" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "NoteLinkRequest" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memberNotesAssociationType" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberNotesAssociationType",
              "namespace" : "http://www.casenet.com/MemberNotesAssociationType"
            },
            "enum" : [ "CASE", "AUTH" ]
          },
          "associationId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "NoteLinkRequest",
          "namespace" : "http://www.casenet.com/NoteLinkRequest"
        }
      },
      "AagInfo" : {
        "type" : "object",
        "properties" : {
          "aagId" : {
            "type" : "string"
          },
          "aagNumber" : {
            "type" : "string"
          },
          "aagState" : {
            "type" : "string",
            "enum" : [ "DRAFT", "SUBMITTED" ]
          },
          "aagTypeId" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        }
      },
      "NoteCommentRequest" : {
        "required" : [ "narrative" ],
        "type" : "object",
        "properties" : {
          "narrative" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "offlineCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "NoteCommentRequest",
          "namespace" : "http://www.casenet.com/NoteCommentRequest"
        }
      },
      "MemberNoteRequest" : {
        "required" : [ "noteDefinitionVisibleId" ],
        "type" : "object",
        "properties" : {
          "noteDefinitionVisibleId" : {
            "type" : "string"
          },
          "noteText" : {
            "maxLength" : 1000000,
            "minLength" : 0,
            "type" : "string"
          },
          "offlineCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "encounterDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "noteLinkRequest" : {
            "$ref" : "#/components/schemas/NoteLinkRequest"
          },
          "documentId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberNoteRequest",
          "namespace" : "http://www.casenet.com/MemberNoteRequest"
        }
      },
      "NotesSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "noteDefOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "caseOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "authOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "contactReasonOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "createdByOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "NotesSearchConfiguration",
          "namespace" : "http://www.casenet.com/NotesSearchConfiguration"
        }
      },
      "NoteSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "encounterDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "encounterDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "noteDefName" : {
            "type" : "string"
          },
          "noteText" : {
            "type" : "string"
          },
          "contactNameLabel" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdByUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "hasComments" : {
            "type" : "boolean"
          },
          "hasAttachments" : {
            "type" : "boolean"
          },
          "voidInfoExists" : {
            "type" : "boolean"
          },
          "hasAssociatedNotes" : {
            "type" : "boolean"
          },
          "prescreenNoteGroupId" : {
            "type" : "string"
          },
          "noteDefinitionStatus" : {
            "type" : "string",
            "enum" : [ "IN_PROGRESS", "PUBLISHED", "HIDDEN" ]
          },
          "noteDefVisibleId" : {
            "type" : "string"
          },
          "noteDefInstanceCopyable" : {
            "type" : "boolean"
          },
          "noteDefType" : {
            "type" : "string",
            "xml" : {
              "name" : "NoteDefinitionTypeEnum",
              "namespace" : "http://www.casenet.com/NoteDefinitionTypeEnum"
            },
            "enum" : [ "AAG", "AUTH", "APPEAL", "ASSESSMENT", "ASSESSMENT_SUMMARY", "CASE", "CAREPLAN", "COST_SAVINGS", "TRANSITION_PLAN", "FOLLOWUP", "INDIVIDUAL_SERVICE_PLAN", "MCP", "MEMBER", "MEMBER_DEFINED_OUTCOME", "MANUAL_QUALITY_MEASURES", "PROBLEM", "QUESTION_GROUP", "QUALITY_MEASURES", "TRANSPORTATION", "SERVICE_REQUEST", "TASK_ATTEMPT", "TEAM_APPROACH", "UM_APPEAL", "IDENTITY_VERIFICATION", "PRESCREEN_DATA_IP", "PRESCREEN_DATA_SP", "PRESCREEN_DATA_RX", "MEDICATION" ]
          }
        },
        "xml" : {
          "name" : "NoteSearchResult",
          "namespace" : "http://www.casenet.com/NoteSearchResult"
        }
      },
      "NoteSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteSearchResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "NoteSearchResults",
          "namespace" : "http://www.casenet.com/NoteSearchResults"
        }
      },
      "NoteSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "searchParams" : {
            "$ref" : "#/components/schemas/NotesSearchParam"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoteSortField"
            }
          }
        },
        "xml" : {
          "name" : "NoteSearchCriteria",
          "namespace" : "http://www.casenet.com/NoteSearchCriteria"
        }
      },
      "NoteSortField" : {
        "required" : [ "columnType" ],
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "NoteSortColumn",
              "namespace" : "http://www.casenet.com/NoteSortColumn"
            },
            "enum" : [ "NOTE_DEFINITION_NAME", "ENCOUNTER_DATE", "CREATED_DATE", "CREATED_USER_FIRST_NAME", "CREATED_USER_LAST_NAME", "STATUS", "CONTACT_NAME", "NOTE_TEXT" ]
          }
        },
        "xml" : {
          "name" : "NoteSortField",
          "namespace" : "http://www.casenet.com/NoteSortField"
        }
      },
      "NotesSearchParam" : {
        "type" : "object",
        "properties" : {
          "noteDefId" : {
            "type" : "string"
          },
          "caseId" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseLabel" : {
            "type" : "string"
          },
          "authId" : {
            "type" : "string"
          },
          "contactReasonId" : {
            "type" : "string"
          },
          "contactReasonLabel" : {
            "type" : "string"
          },
          "createdById" : {
            "type" : "string"
          },
          "voidedStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "VoidedStatus",
              "namespace" : "http://www.casenet.com/VoidedStatus"
            },
            "enum" : [ "ACTIVE", "VOIDED", "ALL" ]
          },
          "filterOnEncounterDate" : {
            "type" : "boolean"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "NotesSearchParam",
          "namespace" : "http://www.casenet.com/NotesSearchParam"
        }
      },
      "MemberLiteList" : {
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberLite"
            }
          }
        },
        "xml" : {
          "name" : "MemberList",
          "namespace" : "http://www.casenet.com/MemberLiteList"
        }
      },
      "OfflineMetadata" : {
        "type" : "object",
        "properties" : {
          "maximumMembersOffline" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "OfflineMetadata",
          "namespace" : "http://www.casenet.com/OfflineMetadata"
        }
      },
      "CreatePdfRequest" : {
        "type" : "object"
      },
      "MemberFeatureServiceItem" : {
        "required" : [ "externalFeatureServiceDefinitionId", "name", "specialInstructionsExist", "status" ],
        "type" : "object",
        "properties" : {
          "externalFeatureServiceDefinitionId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "customerFeature" : {
            "$ref" : "#/components/schemas/CustomerFeature"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ItemStatus",
              "namespace" : "http://www.casenet.com/ItemStatus"
            },
            "enum" : [ "ACTIVE", "FUTURE", "HISTORICAL", "DISABLED", "EXPIRED" ]
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "specialInstructionsExist" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "MemberFeatureServiceItem",
          "namespace" : "http://www.casenet.com/MemberFeatureServiceItem"
        }
      },
      "MemberProductFeatureItem" : {
        "required" : [ "customerFeatures", "externalProductFeatureDefinitionId", "name", "sourceCategory", "specialInstructionsExist", "status" ],
        "type" : "object",
        "properties" : {
          "externalProductFeatureDefinitionId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "customerFeatures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerFeature"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ItemStatus",
              "namespace" : "http://www.casenet.com/ItemStatus"
            },
            "enum" : [ "ACTIVE", "FUTURE", "HISTORICAL", "DISABLED", "EXPIRED" ]
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "memberFeatureServiceItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberFeatureServiceItem"
            }
          },
          "specialInstructionsExist" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "MemberProductFeatureItem",
          "namespace" : "http://www.casenet.com/MemberProductFeatureItem"
        }
      },
      "MemberProductFeatureSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "dateOfInterest" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sourceCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "SourceCategory",
              "namespace" : "http://www.casenet.com/SourceCategory"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "MEMBER", "GENERIC", "BOTH", "NEITHER" ]
          },
          "casenetFeatures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "CasenetFeature",
                "namespace" : "http://www.casenet.com/CasenetFeature"
              },
              "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
            }
          },
          "externalProductFeatureDefinitionId" : {
            "type" : "string"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "MemberProductFeatureSortField",
              "namespace" : "http://www.casenet.com/MemberProductFeatureSortField"
            },
            "enum" : [ "START_DATE", "END_DATE", "SOURCE_CATEGORY", "CASENET_FEATURES", "EXTERNAL_PRODUCT_FEATURE_DEFINITION_ID" ]
          }
        },
        "xml" : {
          "name" : "MemberProductFeatureSearchCriteria",
          "namespace" : "http://www.casenet.com/MemberProductFeatureSearchCriteria"
        }
      },
      "ProductFeatureId" : {
        "required" : [ "externalProductFeatureId", "name" ],
        "type" : "object",
        "properties" : {
          "externalProductFeatureId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProductFeatureId",
          "namespace" : "http://www.casenet.com/ProductFeatureId"
        }
      },
      "ProductFeatureSearchCriteria" : {
        "required" : [ "casenetFeatures" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "casenetFeatures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "CasenetFeature",
                "namespace" : "http://www.casenet.com/CasenetFeature"
              },
              "enum" : [ "CM", "DM", "UM", "TRUMOBILE", "MEMBER_PORTAL", "EMPLOYER_PORTAL", "PROVIDER_PORTAL", "REPORTING", "ANALYTICS", "WELLNESS", "HCS", "GENERIC", "AAG", "MEDICATION_MANAGEMENT", "TCI_CARE_MANAGEMENT", "TCI_CARE_MANAGEMENT_BI_MODELING", "TCI_TIME_TRACKING", "TCI_TIME_TRACKING_BI_MODELING", "TCI_UTILIZATION_MANAGEMENT", "TCI_UTILIZATION_MANAGEMENT_BI_MODELING" ]
            }
          },
          "featureType" : {
            "type" : "string",
            "xml" : {
              "name" : "FeatureType",
              "namespace" : "http://www.casenet.com/FeatureType"
            },
            "enum" : [ "BEHAVIORAL", "MEDICAL", "NEITHER", "BOTH" ]
          },
          "asc" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ProductFeatureSearchCriteria",
          "namespace" : "http://www.casenet.com/ProductFeatureSearchCriteria"
        }
      },
      "ProductFeatureBhpConfiguration" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "maximumProductFeaturesToDisplay" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ProductFeatureBhpConfiguration",
          "namespace" : "http://www.casenet.com/ProductFeatureBhpConfiguration"
        }
      },
      "SpecialInstructions" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "SpecialInstructions",
          "namespace" : "http://www.casenet.com/SpecialInstructions"
        }
      },
      "ProviderSearchResult" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "inNetwork" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ProviderSearchResult",
          "namespace" : "http://www.casenet.com/ProviderSearchResult"
        }
      },
      "ProviderSearchResults" : {
        "type" : "object",
        "properties" : {
          "providers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSearchResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ProviderSearchResults",
          "namespace" : "http://www.casenet.com/ProviderSearchResults"
        }
      },
      "PortalProviderSearchResults" : {
        "type" : "object",
        "properties" : {
          "providers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSearchResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "providerLocationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "selectedProviderLocationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PortalProviderSearchResults",
          "namespace" : "http://www.casenet.com/PortalProviderSearchResults"
        }
      },
      "AdvancedCriteria" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "country" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "groupId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "groupName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locGroupId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locGroupName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locType" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicaidId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicareId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "product" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "providerRating" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "specialtyOptionLabel" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sourceId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "serviceCode" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "serviceName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "providerLanguage" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "AdvancedCriteria",
          "namespace" : "http://www.casenet.com/AdvancedCriteria"
        }
      },
      "GroupType" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "GroupType",
          "namespace" : "http://www.casenet.com/GroupType"
        }
      },
      "MemberConstraints" : {
        "type" : "object",
        "properties" : {
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "memberContextDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "MemberConstraints",
          "namespace" : "http://www.casenet.com/MemberConstraints"
        }
      },
      "NetworkId" : {
        "required" : [ "id", "networkIdType" ],
        "type" : "object",
        "properties" : {
          "networkIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "NetworkIdType",
              "namespace" : "http://www.casenet.com/NetworkIdType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "NetworkId",
          "namespace" : "http://www.casenet.com/NetworkId"
        }
      },
      "ProviderId" : {
        "required" : [ "id", "providerIdType" ],
        "type" : "object",
        "properties" : {
          "providerIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderIdType",
              "namespace" : "http://www.casenet.com/ProviderIdType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL", "NUMBER" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProviderId",
          "namespace" : "http://www.casenet.com/ProviderId"
        }
      },
      "ProviderSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "searchParams" : {
            "$ref" : "#/components/schemas/ProviderSearchParam"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "ProviderSearchCriteria",
          "namespace" : "http://www.casenet.com/ProviderSearchCriteria"
        }
      },
      "ProviderSearchParam" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationSearchContext",
              "namespace" : "http://www.casenet.com/LocationSearchContext"
            },
            "enum" : [ "Member", "Provider" ]
          },
          "memberConstraints" : {
            "$ref" : "#/components/schemas/MemberConstraints"
          },
          "networkAffiliation" : {
            "type" : "string",
            "xml" : {
              "name" : "NetworkAffiliation",
              "namespace" : "http://www.casenet.com/NetworkAffiliation"
            },
            "enum" : [ "InNetwork", "OutOfNetwork", "All" ]
          },
          "preferredNetworkId" : {
            "$ref" : "#/components/schemas/NetworkId"
          },
          "medicareParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "medicaidParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "tricareParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "providerName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "npi" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "providerNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "countryCode" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "otherCountryName" : {
            "type" : "string"
          },
          "county" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "zipCode" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "stateOption" : {
            "type" : "string"
          },
          "stateOther" : {
            "type" : "string"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "specialtyOption" : {
            "type" : "string"
          },
          "locationName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "groupType" : {
            "$ref" : "#/components/schemas/GroupType"
          },
          "providesMedical" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "providesNonMedical" : {
            "type" : "string",
            "xml" : {
              "name" : "YesNoNaEnum",
              "namespace" : "http://www.casenet.com/YesNoNaEnum"
            },
            "enum" : [ "YES", "NO", "NA" ]
          },
          "providerId" : {
            "$ref" : "#/components/schemas/ProviderId"
          },
          "eligibilityProductId" : {
            "type" : "string"
          },
          "taxIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringCriteria"
            }
          },
          "providerContextDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authorizationContext" : {
            "type" : "boolean"
          },
          "advancedCriteria" : {
            "$ref" : "#/components/schemas/AdvancedCriteria"
          }
        },
        "xml" : {
          "name" : "ProviderSearchParam",
          "namespace" : "http://www.casenet.com/ProviderSearchParam"
        }
      },
      "ProviderSearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderSearchSortColumn",
              "namespace" : "http://www.casenet.com/ProviderSearchSortColumn"
            },
            "enum" : [ "PROVIDER_NAME", "PROVIDER_NUMBER" ]
          }
        },
        "xml" : {
          "name" : "ProviderSearchSortField",
          "namespace" : "http://www.casenet.com/ProviderSearchSortField"
        }
      },
      "ProviderDetailsResult" : {
        "type" : "object",
        "properties" : {
          "providerCategory" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "tin" : {
            "type" : "string"
          },
          "specialties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "contactName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProviderDetailsResult",
          "namespace" : "http://www.casenet.com/ProviderDetailsResult"
        }
      },
      "ProviderDetailsResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderDetailsResult"
            }
          }
        },
        "xml" : {
          "name" : "ProviderDetailsResults",
          "namespace" : "http://www.casenet.com/ProviderDetailsResults"
        }
      },
      "LocationSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "locationName" : {
            "type" : "string"
          },
          "locationNumber" : {
            "type" : "string"
          },
          "npi" : {
            "type" : "string"
          },
          "tin" : {
            "type" : "string"
          },
          "servicingAddresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "hasMoreAddresses" : {
            "type" : "boolean"
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VersionedPhoneNumber"
            }
          },
          "hasMorePhoneNumbers" : {
            "type" : "boolean"
          },
          "networkAffiliation" : {
            "type" : "string",
            "xml" : {
              "name" : "NetworkAffiliation",
              "namespace" : "http://www.casenet.com/NetworkAffiliation"
            },
            "enum" : [ "InNetwork", "OutOfNetwork", "All" ]
          },
          "medicareParticipation" : {
            "type" : "boolean"
          },
          "medicaidParticipation" : {
            "type" : "boolean"
          },
          "tricareParticipation" : {
            "type" : "boolean"
          },
          "preferredPhoneNumber" : {
            "$ref" : "#/components/schemas/VersionedPhoneNumber"
          }
        },
        "xml" : {
          "name" : "LocationSearchResult",
          "namespace" : "http://www.casenet.com/LocationSearchResult"
        }
      },
      "LocationSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "LocationSearchResults",
          "namespace" : "http://www.casenet.com/LocationSearchResults"
        }
      },
      "LocationAdvancedCriteria" : {
        "type" : "object",
        "properties" : {
          "medicaidId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicareId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locationType" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "product" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "serviceCode" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "serviceName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "LocationAdvancedCriteria",
          "namespace" : "http://www.casenet.com/LocationAdvancedCriteria"
        }
      },
      "LocationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "medicareParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "medicaidParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "tricareParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "networkAffiliation" : {
            "type" : "string",
            "xml" : {
              "name" : "NetworkAffiliation",
              "namespace" : "http://www.casenet.com/NetworkAffiliation"
            },
            "enum" : [ "InNetwork", "OutOfNetwork", "All" ]
          },
          "preferredNetworkId" : {
            "$ref" : "#/components/schemas/NetworkId"
          },
          "memberConstraints" : {
            "$ref" : "#/components/schemas/MemberConstraints"
          },
          "context" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationSearchContext",
              "namespace" : "http://www.casenet.com/LocationSearchContext"
            },
            "enum" : [ "Member", "Provider" ]
          },
          "npi" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "taxIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringCriteria"
            }
          },
          "countryCode" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "otherCountryName" : {
            "type" : "string"
          },
          "county" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "zipCode" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "stateOption" : {
            "type" : "string"
          },
          "stateOther" : {
            "type" : "string"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locationName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locationNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "eligibilityProductId" : {
            "type" : "string"
          },
          "serviceOfferId" : {
            "type" : "string"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationSearchSortField"
            }
          },
          "locationContextDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authorizationContext" : {
            "type" : "boolean"
          },
          "providerId" : {
            "$ref" : "#/components/schemas/ProviderId"
          },
          "groupType" : {
            "$ref" : "#/components/schemas/GroupType"
          },
          "advancedCriteria" : {
            "$ref" : "#/components/schemas/LocationAdvancedCriteria"
          }
        },
        "xml" : {
          "name" : "LocationSearchCriteria",
          "namespace" : "http://www.casenet.com/LocationSearchCriteria"
        }
      },
      "LocationSearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationSearchSortColumn",
              "namespace" : "http://www.casenet.com/LocationSearchSortColumn"
            },
            "enum" : [ "LOCATION_NAME", "TIN", "NPI" ]
          }
        },
        "xml" : {
          "name" : "LocationSearchSortField",
          "namespace" : "http://www.casenet.com/LocationSearchSortField"
        }
      },
      "ProviderLocationAdvancedCriteria" : {
        "type" : "object",
        "properties" : {
          "medicaidId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "medicareId" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locationType" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "product" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "serviceCode" : {
            "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
          },
          "serviceName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          }
        },
        "xml" : {
          "name" : "ProviderLocationAdvancedCriteria",
          "namespace" : "http://www.casenet.com/ProviderLocationAdvancedCriteria"
        }
      },
      "ProviderLocationSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "medicareParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "medicaidParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "tricareParticipation" : {
            "type" : "string",
            "xml" : {
              "name" : "Participation",
              "namespace" : "http://www.casenet.com/Participation"
            },
            "enum" : [ "Participating", "Nonparticipating", "Either" ]
          },
          "networkAffiliation" : {
            "type" : "string",
            "xml" : {
              "name" : "NetworkAffiliation",
              "namespace" : "http://www.casenet.com/NetworkAffiliation"
            },
            "enum" : [ "InNetwork", "OutOfNetwork", "All" ]
          },
          "preferredNetworkId" : {
            "$ref" : "#/components/schemas/NetworkId"
          },
          "memberConstraints" : {
            "$ref" : "#/components/schemas/MemberConstraints"
          },
          "context" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationSearchContext",
              "namespace" : "http://www.casenet.com/LocationSearchContext"
            },
            "enum" : [ "Member", "Provider" ]
          },
          "npi" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "taxIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringCriteria"
            }
          },
          "countryCode" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "otherCountryName" : {
            "type" : "string"
          },
          "county" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "zipCode" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "stateOption" : {
            "type" : "string"
          },
          "stateOther" : {
            "type" : "string"
          },
          "city" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locationName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "locationNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "eligibilityProductId" : {
            "type" : "string"
          },
          "serviceOfferId" : {
            "type" : "string"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationSearchSortField"
            }
          },
          "locationContextDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "authorizationContext" : {
            "type" : "boolean"
          },
          "providerId" : {
            "$ref" : "#/components/schemas/ProviderId"
          },
          "groupType" : {
            "$ref" : "#/components/schemas/GroupType"
          },
          "advancedCriteria" : {
            "$ref" : "#/components/schemas/ProviderLocationAdvancedCriteria"
          }
        },
        "xml" : {
          "name" : "AbstractProviderLocationSearchCriteria",
          "namespace" : "http://www.casenet.com/AbstractProviderLocationSearchCriteria"
        }
      },
      "InNetworkResponse" : {
        "type" : "object",
        "properties" : {
          "inNetwork" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "Location",
          "namespace" : "http://www.casenet.com/InNetworkResponse"
        }
      },
      "ProviderProduct" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "medicaidParticipant" : {
            "type" : "boolean"
          },
          "medicareParticipant" : {
            "type" : "boolean"
          },
          "networkName" : {
            "type" : "string"
          },
          "networkSetName" : {
            "type" : "string"
          },
          "productName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProviderProduct",
          "namespace" : "http://www.casenet.com/ProviderProduct"
        }
      },
      "ProviderProductSearchResults" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderProduct"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ProviderProductSearchResults",
          "namespace" : "http://www.casenet.com/ProviderProductSearchResults"
        }
      },
      "ProviderLite" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ProviderLite",
          "namespace" : "http://www.casenet.com/ProviderLite"
        }
      },
      "CreateProviderRequest" : {
        "type" : "object",
        "properties" : {
          "npi" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "tin" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "providerName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "individualProvider" : {
            "type" : "boolean"
          }
        }
      },
      "CreateProviderEmailRequest" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "emailAddress" : {
            "maxLength" : 254,
            "minLength" : 0,
            "type" : "string"
          },
          "emailTypeOption" : {
            "type" : "string"
          }
        }
      },
      "CreateProviderLocationAddressRequest" : {
        "required" : [ "countryAlpha2Code" ],
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "addressLine2" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "addressLine3" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "city" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "stateOption" : {
            "type" : "string"
          },
          "stateText" : {
            "maxLength" : 120,
            "minLength" : 0,
            "type" : "string"
          },
          "county" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "countryText" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string"
          },
          "countryAlpha2Code" : {
            "type" : "string"
          },
          "zipCode" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string"
          },
          "undeliverable" : {
            "type" : "boolean"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "addressType" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderAddressType",
              "namespace" : "http://www.casenet.com/ProviderAddressType"
            },
            "enum" : [ "BILLING", "MAILING", "SERVICING" ]
          }
        },
        "xml" : {
          "name" : "BaseAddressRequest",
          "namespace" : "http://www.casenet.com/BaseAddressRequest"
        }
      },
      "CreateProviderLocationRequest" : {
        "required" : [ "providerLocationAddress" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "locationType" : {
            "type" : "string"
          },
          "providerLocationAddress" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProviderLocationAddressRequest"
            }
          },
          "phones" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProviderPhoneNumberRequest"
            }
          },
          "fax" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProviderPhoneNumberRequest"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProviderEmailRequest"
            }
          },
          "servicesOffered" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateServiceOfferRequest"
            }
          }
        }
      },
      "CreateProviderPhoneNumberRequest" : {
        "required" : [ "alpha2Code", "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "alpha2Code" : {
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "phoneCountryCode" : {
            "maxLength" : 3,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "phoneNumber" : {
            "pattern" : "^[0-9]+$",
            "type" : "string"
          },
          "phoneExtension" : {
            "maxLength" : 7,
            "minLength" : 0,
            "pattern" : "^[0-9]*$",
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "phoneTypeOption" : {
            "type" : "string"
          },
          "phoneExtensionString" : {
            "type" : "string"
          },
          "phoneNumberString" : {
            "type" : "string"
          },
          "formattedPhoneNumber" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PhoneNumber",
          "namespace" : "http://www.casenet.com/PhoneNumber"
        }
      },
      "CreateProviderRequestV2" : {
        "required" : [ "locations", "providerType", "tin" ],
        "type" : "object",
        "properties" : {
          "providerType" : {
            "type" : "string"
          },
          "providesMedical" : {
            "type" : "boolean"
          },
          "providerName" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "number" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "tin" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string"
          },
          "npi" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string"
          },
          "medicareNumber" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "medicaidNumber" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "specialties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProviderSpecialtyRequest"
            }
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateProviderLocationRequest"
            }
          }
        }
      },
      "CreateProviderSpecialtyRequest" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "terminationDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "specialtyOption" : {
            "type" : "string"
          }
        }
      },
      "CreateServiceOfferRequest" : {
        "required" : [ "serviceId" ],
        "type" : "object",
        "properties" : {
          "contactName" : {
            "type" : "string"
          },
          "serviceId" : {
            "type" : "string"
          },
          "additionalInformation" : {
            "type" : "string"
          },
          "rate" : {
            "$ref" : "#/components/schemas/Money"
          },
          "rateUnitOption" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      },
      "ProviderSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "medicaidParticipationFilterEnabled" : {
            "type" : "boolean"
          },
          "medicareParticipationFilterEnabled" : {
            "type" : "boolean"
          },
          "tricareParticipationFilterEnabled" : {
            "type" : "boolean"
          },
          "simpleSearchAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleSearchAttributeConfiguration"
            }
          },
          "quickSearchNetworkAffiliation" : {
            "type" : "string",
            "xml" : {
              "name" : "NetworkAffiliation",
              "namespace" : "http://www.casenet.com/NetworkAffiliation"
            },
            "enum" : [ "InNetwork", "OutOfNetwork", "All" ]
          },
          "npiLocation" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderLocationType",
              "namespace" : "http://www.casenet.com/ProviderLocationType"
            },
            "enum" : [ "LOCATION", "PROVIDER", "EITHER" ]
          },
          "tinLocation" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderLocationType",
              "namespace" : "http://www.casenet.com/ProviderLocationType"
            },
            "enum" : [ "LOCATION", "PROVIDER", "EITHER" ]
          },
          "medicaidLocation" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderLocationType",
              "namespace" : "http://www.casenet.com/ProviderLocationType"
            },
            "enum" : [ "LOCATION", "PROVIDER", "EITHER" ]
          },
          "medicareLocation" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderLocationType",
              "namespace" : "http://www.casenet.com/ProviderLocationType"
            },
            "enum" : [ "LOCATION", "PROVIDER", "EITHER" ]
          },
          "providerDefaultSearch" : {
            "type" : "string",
            "xml" : {
              "name" : "ProviderDefaultSearchType",
              "namespace" : "http://www.casenet.com/ProviderDefaultSearchType"
            },
            "enum" : [ "SIMPLE", "ADVANCED" ]
          },
          "defaultCountry" : {
            "$ref" : "#/components/schemas/Country"
          },
          "defaultCountryStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "facilityProviderExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "individualProviderExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "productMandatoryForNetworkParticipation" : {
            "type" : "boolean"
          },
          "providerExtendedSearchFieldsConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedSearchFieldConfig"
            }
          }
        },
        "xml" : {
          "name" : "ProviderSearchConfiguration",
          "namespace" : "http://www.casenet.com/ProviderSearchConfiguration"
        }
      },
      "SimpleSearchAttributeConfiguration" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "SimpleSearchAttributeFieldName",
              "namespace" : "http://www.casenet.com/SimpleSearchAttributeFieldName"
            },
            "enum" : [ "CITY", "LOCATION_NAME", "NPI", "TIN", "PROVIDER_ID", "PROVIDER_NAME", "SPECIALTY", "STATE" ]
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enabled" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "SimpleSearchAttributeConfiguration",
          "namespace" : "http://www.casenet.com/SimpleSearchAttributeConfiguration"
        }
      },
      "QueueSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Queue"
            }
          }
        },
        "xml" : {
          "name" : "QueueSearchResults",
          "namespace" : "http://www.casenet.com/QueueSearchResults"
        }
      },
      "QueueSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "name" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "queueId" : {
            "type" : "string"
          },
          "queuePermission" : {
            "type" : "string",
            "xml" : {
              "name" : "QueuePermission",
              "namespace" : "http://www.casenet.com/QueuePermission"
            },
            "enum" : [ "ASSIGNABLE", "CLAIMABLE", "VIEWABLE" ]
          },
          "label" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueueSortField"
            }
          }
        },
        "xml" : {
          "name" : "QueueSearchCriteria",
          "namespace" : "http://www.casenet.com/QueueSearchCriteria"
        }
      },
      "QueueSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "QueueSortColumn",
              "namespace" : "http://www.casenet.com/QueueSortColumn"
            },
            "enum" : [ "NAME", "DESCRIPTION", "ID", "LABEL" ]
          }
        },
        "xml" : {
          "name" : "QueueSortField",
          "namespace" : "http://www.casenet.com/QueueSortField"
        }
      },
      "ReferralResponseLite" : {
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "referralId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ReferralResponseLite",
          "namespace" : "http://www.casenet.com/ReferralResponseLite"
        }
      },
      "ReferralDraftFinalDecisionRequest" : {
        "type" : "object",
        "properties" : {
          "screeningNotes" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "declineReasonOption" : {
            "type" : "string"
          },
          "declineReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referralAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          }
        },
        "xml" : {
          "name" : "ReferralDraftFinalDecisionRequest",
          "namespace" : "http://www.casenet.com/ReferralDraftFinalDecisionRequest"
        }
      },
      "SaveReferralDraftRequest" : {
        "required" : [ "referralSourceOption", "requestDate" ],
        "type" : "object",
        "properties" : {
          "referralSourceOption" : {
            "type" : "string"
          },
          "reasonsForReferralOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "otherReferralSource" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "otherReasonDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "referralComments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "referralSourceInformationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralDeterminationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralFinalDecisionRequest" : {
            "$ref" : "#/components/schemas/ReferralDraftFinalDecisionRequest"
          }
        },
        "xml" : {
          "name" : "SaveReferralDraftRequest",
          "namespace" : "http://www.casenet.com/SaveReferralDraftRequest"
        }
      },
      "ReferralFinalDecisionRequest3" : {
        "required" : [ "determinationDate", "referralAction" ],
        "type" : "object",
        "properties" : {
          "screeningNotes" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "declineReasonOption" : {
            "type" : "string"
          },
          "declineReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referralAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          }
        },
        "xml" : {
          "name" : "ReferralFinalDecisionRequest3",
          "namespace" : "http://www.casenet.com/ReferralFinalDecisionRequest3"
        }
      },
      "UpdateReferralRequest2" : {
        "required" : [ "referralSourceOption", "requestDate", "version" ],
        "type" : "object",
        "properties" : {
          "otherReferralSource" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "otherReasonDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "referralComments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "reasonsForReferralOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referralSourceOption" : {
            "type" : "string"
          },
          "referralSourceInformationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralDeterminationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralFinalDecisionRequest" : {
            "$ref" : "#/components/schemas/ReferralFinalDecisionRequest3"
          }
        },
        "xml" : {
          "name" : "UpdateReferralRequest2",
          "namespace" : "http://www.casenet.com/UpdateReferralRequest2"
        }
      },
      "UpdateReferralDraftRequest" : {
        "required" : [ "referralSourceOption", "requestDate", "version" ],
        "type" : "object",
        "properties" : {
          "otherReferralSource" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "otherReasonDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "referralComments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "reasonsForReferralOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referralSourceOption" : {
            "type" : "string"
          },
          "referralSourceInformationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralDeterminationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralFinalDecisionRequest" : {
            "$ref" : "#/components/schemas/ReferralDraftFinalDecisionRequest"
          }
        },
        "xml" : {
          "name" : "UpdateReferralDraftRequest",
          "namespace" : "http://www.casenet.com/UpdateReferralDraftRequest"
        }
      },
      "ReferralConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "referralSourceFieldLabel" : {
            "type" : "string"
          },
          "referralSourceRequired" : {
            "type" : "boolean"
          },
          "referralSourceOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "reasonsForReferralFieldLabel" : {
            "type" : "string"
          },
          "reasonsForReferralRequired" : {
            "type" : "boolean"
          },
          "reasonsForReferralOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "declinedReasonLabel" : {
            "type" : "string"
          },
          "declinedReasonOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          }
        },
        "xml" : {
          "name" : "ReferralConfiguration",
          "namespace" : "http://www.casenet.com/ReferralConfiguration"
        }
      },
      "ReferralConfiguration3" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "referralSourceInformationExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "referralDeterminationExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          }
        },
        "xml" : {
          "name" : "ReferralConfiguration3",
          "namespace" : "http://www.casenet.com/ReferralConfiguration3"
        }
      },
      "CreateReferralNotificationRequest" : {
        "required" : [ "taskId" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "createPhoneNotificationRequest" : {
            "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
          }
        }
      },
      "UpdateReferralNotificationRequest" : {
        "required" : [ "taskId", "version" ],
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "string"
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "createPhoneNotificationRequest" : {
            "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ReferralNotificationDetails" : {
        "required" : [ "referralId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referralId" : {
            "type" : "string"
          },
          "letterDetails" : {
            "$ref" : "#/components/schemas/InternalLetterDetails"
          },
          "phoneNotificationDetails" : {
            "$ref" : "#/components/schemas/PhoneNotificationDetails"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "Assignee" : {
        "required" : [ "assigneeId", "assigneeType" ],
        "type" : "object",
        "properties" : {
          "assigneeId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "AssigneeType",
              "namespace" : "http://www.casenet.com/AssigneeType"
            },
            "enum" : [ "user", "queue" ]
          }
        },
        "xml" : {
          "name" : "Assignee",
          "namespace" : "http://www.casenet.com/Assignee"
        }
      },
      "Referral" : {
        "required" : [ "enterDecisionNow", "requestDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referralSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherReferralSource" : {
            "type" : "string"
          },
          "sourceDescription" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "reasonsForReferral" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "otherReasonDescription" : {
            "type" : "string"
          },
          "referralComments" : {
            "type" : "string"
          },
          "enterDecisionNow" : {
            "type" : "boolean"
          },
          "decisionAssignee" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "furtherEvaluationAssignee" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "finalDecision" : {
            "$ref" : "#/components/schemas/ReferralFinalDecision"
          },
          "caseLite" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          }
        },
        "xml" : {
          "name" : "Referral",
          "namespace" : "http://www.casenet.com/Referral"
        }
      },
      "ReferralFinalDecision" : {
        "required" : [ "determinationDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "determinationUserId" : {
            "type" : "string"
          },
          "determinationUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "screeningNotes" : {
            "type" : "string"
          },
          "referralAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          },
          "declineReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "declineReasonOther" : {
            "type" : "string"
          },
          "otherEvaluationCompleteDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "otherEvaluationDescription" : {
            "type" : "string"
          },
          "memberAccepted" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ReferralFinalDecision",
          "namespace" : "http://www.casenet.com/ReferralFinalDecision"
        }
      },
      "ReferralFinalDecisionRequest2" : {
        "required" : [ "determinationDate", "referralAction" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referralAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          },
          "screeningNotes" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "declineReasonOption" : {
            "type" : "string"
          },
          "declineReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ReferralFinalDecisionRequest2",
          "namespace" : "http://www.casenet.com/ReferralFinalDecisionRequest2"
        }
      },
      "UpdateReferralRequest" : {
        "required" : [ "referralSourceOption", "requestDate", "version" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "otherReferralSource" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "otherReasonDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "referralComments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "referralFinalDecisionRequest" : {
            "$ref" : "#/components/schemas/ReferralFinalDecisionRequest2"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referralSourceOption" : {
            "type" : "string"
          },
          "reasonsForReferralOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "UpdateReferralRequest",
          "namespace" : "http://www.casenet.com/UpdateReferralRequest"
        }
      },
      "FurtherReferralEvaluationRequest" : {
        "required" : [ "completionDate", "description" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "description" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "completionDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ExtendedAttributesRequest",
          "namespace" : "http://www.casenet.com/ExtendedAttributesRequest"
        }
      },
      "ReferralFinalDecisionRequest" : {
        "required" : [ "determinationDate", "referralAction" ],
        "type" : "object",
        "properties" : {
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "referralAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ReferralAction",
              "namespace" : "http://www.casenet.com/ReferralAction"
            },
            "enum" : [ "MEETS_CRITERIA", "DOES_NOT_MEET_CRITERIA", "ASSIGN_TO_ANOTHER" ]
          },
          "screeningNotes" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "declineReasonOptionValueId" : {
            "type" : "string"
          },
          "declineReasonOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ReferralFinalDecisionRequest",
          "namespace" : "http://www.casenet.com/ReferralFinalDecisionRequest"
        }
      },
      "SubmitReferralRequest" : {
        "required" : [ "enterDecisionNow", "referralSourceOptionValueId", "requestDate" ],
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "otherReferralSource" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "otherReasonDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "referralComments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "referralFinalDecisionRequest" : {
            "$ref" : "#/components/schemas/ReferralFinalDecisionRequest"
          },
          "referralSourceOptionValueId" : {
            "type" : "string"
          },
          "reasonsForReferralOptionValueIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "enterDecisionNow" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "SubmitReferralRequest",
          "namespace" : "http://www.casenet.com/SubmitReferralRequest"
        }
      },
      "ReferralLiteSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReferralLite"
            }
          }
        },
        "xml" : {
          "name" : "ReferralLiteSearchResults",
          "namespace" : "http://www.casenet.com/ReferralLiteSearchResults"
        }
      },
      "LinkReferralToCaseRequest" : {
        "type" : "object",
        "properties" : {
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          }
        }
      },
      "Referral2" : {
        "required" : [ "enterDecisionNow", "requestDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referralSource" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherReferralSource" : {
            "type" : "string"
          },
          "sourceDescription" : {
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "reasonsForReferral" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "otherReasonDescription" : {
            "type" : "string"
          },
          "referralComments" : {
            "type" : "string"
          },
          "enterDecisionNow" : {
            "type" : "boolean"
          },
          "decisionAssignee" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "furtherEvaluationAssignee" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "finalDecision" : {
            "$ref" : "#/components/schemas/ReferralFinalDecision"
          },
          "caseLite" : {
            "$ref" : "#/components/schemas/CnCaseLite"
          },
          "referralSourceInformationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          },
          "referralDeterminationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          }
        },
        "xml" : {
          "name" : "Referral2",
          "namespace" : "http://www.casenet.com/Referral2"
        }
      },
      "SubmitReferralRequest2" : {
        "required" : [ "referralSourceOption", "requestDate" ],
        "type" : "object",
        "properties" : {
          "referralSourceOption" : {
            "type" : "string"
          },
          "reasonsForReferralOption" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "otherReferralSource" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "sourceDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "otherReasonDescription" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "referralComments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          },
          "referralSourceInformationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralDeterminationExtendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "referralFinalDecisionRequest" : {
            "$ref" : "#/components/schemas/ReferralFinalDecisionRequest3"
          }
        },
        "xml" : {
          "name" : "SubmitReferralRequest2",
          "namespace" : "http://www.casenet.com/SubmitReferralRequest2"
        }
      },
      "RequestForInformationConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "defaultQueueAssignee" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "defaultDescription" : {
            "type" : "string"
          },
          "defaultOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defaultPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          }
        },
        "xml" : {
          "name" : "RequestForInformationConfiguration",
          "namespace" : "http://www.casenet.com/RequestForInformationConfiguration"
        }
      },
      "EditRequestForInformationRequest" : {
        "required" : [ "dateReceived" ],
        "type" : "object",
        "properties" : {
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "EditRequestForInformationRequest",
          "namespace" : "http://www.casenet.com/EditRequestForInformationRequest"
        }
      },
      "RequestForInformationRequest" : {
        "required" : [ "informationRequested" ],
        "type" : "object",
        "properties" : {
          "dateOfAttempt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateReceived" : {
            "type" : "string",
            "format" : "date-time"
          },
          "provider" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "faxNumber" : {
            "$ref" : "#/components/schemas/Phone"
          },
          "phoneNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "faxNumberI18n" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "informationRequested" : {
            "maxLength" : 4000,
            "minLength" : 1,
            "type" : "string"
          },
          "nextTask" : {
            "$ref" : "#/components/schemas/CommonActionPathRequest"
          }
        },
        "xml" : {
          "name" : "RequestForInformationRequest",
          "namespace" : "http://www.casenet.com/RequestForInformationRequest"
        }
      },
      "BaseServiceRequestServiceQuantityRequest" : {
        "required" : [ "quantityUnitType" ],
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "number"
          },
          "quantityUnitType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceQuantityUnitType",
              "namespace" : "http://www.casenet.com/ServiceQuantityUnitType"
            },
            "enum" : [ "UNITS", "VISITS", "HOURS", "QUARTER_HOURS" ]
          }
        },
        "xml" : {
          "name" : "BaseServiceRequestServiceQuantityRequest",
          "namespace" : "http://www.casenet.com/BaseServiceRequestServiceQuantityRequest"
        }
      },
      "CreateServiceRequestLineItemRequest" : {
        "required" : [ "endDate", "startDate" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "details" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "serviceQuantityRequest" : {
            "$ref" : "#/components/schemas/BaseServiceRequestServiceQuantityRequest"
          },
          "serviceLocationTypeOptionId" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "appliedEligibilityId" : {
            "type" : "string"
          },
          "negotiateUnitRate" : {
            "type" : "number",
            "format" : "double"
          },
          "overrideCost" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceRequestLineItemDeterminationRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestLineItemDeterminationRequest"
          },
          "serviceOfferRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestServiceOfferRequest"
          },
          "serviceRequestProcedureRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestSRProcedureRequest"
          }
        },
        "xml" : {
          "name" : "CreateServiceRequestLineItemRequest",
          "namespace" : "http://www.casenet.com/CreateServiceRequestLineItemRequest"
        }
      },
      "ServiceRequestActionPath" : {
        "required" : [ "actionPathActivity", "useRuleOutputs" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "useRuleOutputs" : {
            "type" : "boolean"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "actionPathActivity" : {
            "type" : "string",
            "enum" : [ "SR_DETERMINATION_TASK", "SR_NOTIFICATION_TASK" ]
          },
          "assignedTo" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "selectedLineItems" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "AbstractActionPathRequest",
          "namespace" : "http://www.casenet.com/AbstractActionPathRequest"
        }
      },
      "ServiceRequestAssignee" : {
        "required" : [ "assigneeId", "assigneeType" ],
        "type" : "object",
        "properties" : {
          "assigneeId" : {
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestAssigneeType",
              "namespace" : "http://www.casenet.com/ServiceRequestAssigneeType"
            },
            "enum" : [ "USER", "TEAM" ]
          }
        },
        "xml" : {
          "name" : "ServiceRequestAssignee",
          "namespace" : "http://www.casenet.com/ServiceRequestAssignee"
        }
      },
      "ServiceRequestHeaderRequest" : {
        "type" : "object",
        "properties" : {
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "serviceRequestStatusId" : {
            "type" : "string"
          },
          "fundingSourceId" : {
            "type" : "string"
          },
          "memberDirected" : {
            "type" : "boolean"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/ServiceRequestAssignee"
          },
          "waiverTypeOption" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceRequestHeaderRequest",
          "namespace" : "http://www.casenet.com/ServiceRequestHeaderRequest"
        }
      },
      "ServiceRequestLineItemDeterminationRequest" : {
        "required" : [ "claimInformation" ],
        "type" : "object",
        "properties" : {
          "determinationBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "serviceRequestStatus" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "claimInformation" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceRequestLineItemDeterminationRequest",
          "namespace" : "http://www.casenet.com/ServiceRequestLineItemDeterminationRequest"
        }
      },
      "ServiceRequestSRProcedureRequest" : {
        "required" : [ "serviceCodeId" ],
        "type" : "object",
        "properties" : {
          "serviceCodeId" : {
            "type" : "string"
          },
          "modifierCodeIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "ServiceRequestSRProcedureRequest",
          "namespace" : "http://www.casenet.com/ServiceRequestSRProcedureRequest"
        }
      },
      "ServiceRequestServiceOfferRequest" : {
        "required" : [ "serviceOfferId", "serviceOfferLocationId" ],
        "type" : "object",
        "properties" : {
          "serviceOfferId" : {
            "type" : "string"
          },
          "serviceOfferLocationId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceRequestServiceOfferRequest",
          "namespace" : "http://www.casenet.com/ServiceRequestServiceOfferRequest"
        }
      },
      "UpdateServiceRequestLineItemRequest" : {
        "required" : [ "endDate", "lineItemNumber", "startDate", "version" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "details" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "serviceQuantityRequest" : {
            "$ref" : "#/components/schemas/BaseServiceRequestServiceQuantityRequest"
          },
          "serviceLocationTypeOptionId" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "appliedEligibilityId" : {
            "type" : "string"
          },
          "negotiateUnitRate" : {
            "type" : "number",
            "format" : "double"
          },
          "overrideCost" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceRequestLineItemDeterminationRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestLineItemDeterminationRequest"
          },
          "serviceOfferRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestServiceOfferRequest"
          },
          "serviceRequestProcedureRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestSRProcedureRequest"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateServiceRequestLineItemRequest",
          "namespace" : "http://www.casenet.com/UpdateServiceRequestLineItemRequest"
        }
      },
      "UpdateServiceRequestRequest" : {
        "required" : [ "updateLineItemRequests", "version" ],
        "type" : "object",
        "properties" : {
          "serviceRequestHeaderRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestHeaderRequest"
          },
          "referenceNumber" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string"
          },
          "reviewerId" : {
            "type" : "string"
          },
          "mcpId" : {
            "type" : "string"
          },
          "reviewAssignedTo" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "actionPath" : {
            "$ref" : "#/components/schemas/ServiceRequestActionPath"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "completeTaskId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "addLineItemRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateServiceRequestLineItemRequest"
            }
          },
          "updateLineItemRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateServiceRequestLineItemRequest"
            }
          }
        }
      },
      "CreateServiceRequestRequest" : {
        "required" : [ "lineItemRequests" ],
        "type" : "object",
        "properties" : {
          "serviceRequestHeaderRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestHeaderRequest"
          },
          "referenceNumber" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string"
          },
          "reviewerId" : {
            "type" : "string"
          },
          "mcpId" : {
            "type" : "string"
          },
          "reviewAssignedTo" : {
            "$ref" : "#/components/schemas/Assignee"
          },
          "noteRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          },
          "actionPath" : {
            "$ref" : "#/components/schemas/ServiceRequestActionPath"
          },
          "lineItemRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateServiceRequestLineItemRequest"
            }
          }
        }
      },
      "ServiceOfferSearchResult" : {
        "type" : "object",
        "properties" : {
          "serviceOfferId" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "contactName" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "serviceCode" : {
            "type" : "string"
          },
          "rate" : {
            "$ref" : "#/components/schemas/Money"
          },
          "rateUnit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "providerId" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "additionalInformation" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceOfferSearchResult",
          "namespace" : "http://www.casenet.com/ServiceOfferSearchResult"
        }
      },
      "ServiceOfferSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceOfferSearchResult"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "ServiceOfferSearchResults",
          "namespace" : "http://www.casenet.com/ServiceOfferSearchResults"
        }
      },
      "ServiceOfferSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "serviceProviderName" : {
            "type" : "string"
          },
          "serviceCodeId" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "stateOptionValue" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          },
          "languageOptionValue" : {
            "type" : "string"
          },
          "serviceDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "serviceProviderId" : {
            "type" : "string"
          },
          "procedureCode" : {
            "type" : "string"
          },
          "serviceNameCriteria" : {
            "$ref" : "#/components/schemas/StringCriteria"
          }
        },
        "xml" : {
          "name" : "ServiceOfferSearchCriteria",
          "namespace" : "http://www.casenet.com/ServiceOfferSearchCriteria"
        }
      },
      "ServiceOffersByLocationPaginatedSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceOffersByLocationResult"
            }
          }
        },
        "xml" : {
          "name" : "ServiceOffersByLocationPaginatedSearchResults",
          "namespace" : "http://www.casenet.com/ServiceOffersByLocationPaginatedSearchResults"
        }
      },
      "ServiceOffersByLocationResult" : {
        "type" : "object",
        "properties" : {
          "serviceOfferId" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "serviceCode" : {
            "type" : "string"
          },
          "contactName" : {
            "type" : "string"
          },
          "rate" : {
            "$ref" : "#/components/schemas/Money"
          },
          "rateUnit" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "additionalInformation" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "ServiceOffersByLocationResult",
          "namespace" : "http://www.casenet.com/ServiceOffersByLocationResult"
        }
      },
      "ServiceOffersByLocationSearchRequest" : {
        "required" : [ "locationId" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "locationId" : {
            "type" : "string"
          },
          "onlyInNetwork" : {
            "type" : "boolean"
          },
          "locationIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationIdType",
              "namespace" : "http://www.casenet.com/LocationIdType"
            },
            "enum" : [ "INTERNAL", "EXTERNAL" ]
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceOffersByLocationSortField"
            }
          }
        },
        "xml" : {
          "name" : "ServiceOffersByLocationSearchRequest",
          "namespace" : "http://www.casenet.com/ServiceOffersByLocationSearchRequest"
        }
      },
      "ServiceOffersByLocationSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceOffersByLocationColumn",
              "namespace" : "http://www.casenet.com/ServiceOffersByLocationColumn"
            },
            "enum" : [ "SERVICE_OFFER_ID", "SERVICE_NAME", "SERVICE_CODE", "CONTACT_NAME", "RATE_VALUE", "RATE_CURRENCY", "START_DATE", "END_DATE", "ADDITIONAL_INFORMATION" ]
          }
        },
        "xml" : {
          "name" : "ServiceOffersByLocationSortField",
          "namespace" : "http://www.casenet.com/ServiceOffersByLocationSortField"
        }
      },
      "ServiceRequestConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "voidConfig" : {
            "$ref" : "#/components/schemas/VoidConfig"
          },
          "serviceRequestHeaderConfiguration" : {
            "$ref" : "#/components/schemas/ServiceRequestHeaderConfiguration"
          },
          "serviceRequestLineItemConfiguration" : {
            "$ref" : "#/components/schemas/ServiceRequestLineItemConfiguration"
          },
          "serviceRequestAuthorizationRequestedQuantityThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceRequestLineItemRequestedQuantityThreshold" : {
            "type" : "integer",
            "format" : "int32"
          },
          "codesExpirationAction" : {
            "type" : "string",
            "xml" : {
              "name" : "CodesEffectiveDateConfiguration",
              "namespace" : "http://www.casenet.com/CodesEffectiveDateConfiguration"
            },
            "enum" : [ "IGNORE", "ALLOW_WITH_WARNING", "DISALLOW" ]
          }
        },
        "xml" : {
          "name" : "ServiceRequestConfiguration",
          "namespace" : "http://www.casenet.com/ServiceRequestConfiguration"
        }
      },
      "ServiceRequestHeaderConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "extendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "fundingSourceFieldLabel" : {
            "type" : "string"
          },
          "documentTypeFieldLabel" : {
            "type" : "string"
          },
          "documentSourceFieldLabel" : {
            "type" : "string"
          },
          "voidReasonFieldLabel" : {
            "type" : "string"
          },
          "serviceRequestFundingSources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "documentTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "documentSources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "voidReasons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "serviceRequestStatuses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestStatus"
            }
          },
          "fundingSourceRequired" : {
            "type" : "boolean"
          },
          "documentTypeRequired" : {
            "type" : "boolean"
          },
          "documentSourceRequired" : {
            "type" : "boolean"
          },
          "voidReasonFieldRequired" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ServiceRequestHeaderConfiguration",
          "namespace" : "http://www.casenet.com/ServiceRequestHeaderConfiguration"
        }
      },
      "ServiceRequestLineItemConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "serviceRequestServiceLocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "serviceRequestStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "serviceLocationFieldLabel" : {
            "type" : "string"
          },
          "serviceRequestStateFieldLabel" : {
            "type" : "string"
          },
          "serviceLocationRequired" : {
            "type" : "boolean"
          },
          "allowDuplicateServiceRequests" : {
            "type" : "boolean"
          },
          "allowDuplicatesOfDeniedLineItems" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ServiceRequestLineItemConfiguration",
          "namespace" : "http://www.casenet.com/ServiceRequestLineItemConfiguration"
        }
      },
      "ServiceRequestBHPConfiguration" : {
        "type" : "object",
        "properties" : {
          "hcsFeatureAvailableToMember" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ServiceRequestBHPConfiguration",
          "namespace" : "http://www.casenet.com/ServiceRequestBHPConfiguration"
        }
      },
      "ServiceRequestGlobalSearchResult" : {
        "type" : "object",
        "properties" : {
          "memberId" : {
            "type" : "string"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "ServiceRequestGlobalSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestGlobalSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ServiceRequestGlobalSearchRequest" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "referenceNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestSearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "ServiceRequestSearchSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "REFERENCE_NUMBER", "START_DATE", "END_DATE", "PROVIDER_NAME", "USER_NAME", "MEMBER_DIRECTED", "STATUS", "STATE", "CASE_NUMBER", "CASE_NAME" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "ServiceRequestHeader" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "isOpen" : {
            "type" : "boolean"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "closeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ownerTeam" : {
            "$ref" : "#/components/schemas/TeamInfo"
          }
        },
        "xml" : {
          "name" : "ServiceRequestHeader",
          "namespace" : "http://www.casenet.com/ServiceRequestHeader"
        }
      },
      "SRLineItemAck" : {
        "type" : "object",
        "properties" : {
          "acknowledged" : {
            "type" : "boolean"
          },
          "acknowledgedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "unacknowledgedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "acknowledgedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        }
      },
      "SRProcedure" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "procedureCode" : {
            "$ref" : "#/components/schemas/ProcedureCode"
          },
          "modifierCodes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModifierCode"
            }
          }
        },
        "xml" : {
          "name" : "SRProcedure",
          "namespace" : "http://www.casenet.com/SRProcedure"
        }
      },
      "ServiceQuantity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalQuantity" : {
            "type" : "number",
            "format" : "double"
          },
          "totalCalculatedQuantity" : {
            "type" : "number",
            "format" : "double"
          },
          "unitQuantity" : {
            "type" : "number",
            "format" : "double"
          },
          "totalQuantityUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceQuantityUnitType",
              "namespace" : "http://www.casenet.com/ServiceQuantityUnitType"
            },
            "enum" : [ "UNITS", "VISITS", "HOURS", "QUARTER_HOURS" ]
          },
          "unitQuantityUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceQuantityUnitType",
              "namespace" : "http://www.casenet.com/ServiceQuantityUnitType"
            },
            "enum" : [ "UNITS", "VISITS", "HOURS", "QUARTER_HOURS" ]
          },
          "everySoMany" : {
            "type" : "integer",
            "format" : "int32"
          },
          "everySoManyUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceQuantityPeriodUnitType",
              "namespace" : "http://www.casenet.com/ServiceQuantityPeriodUnitType"
            },
            "enum" : [ "DAYS", "WEEKS", "MONTHS", "YEARS" ]
          },
          "times" : {
            "type" : "integer",
            "format" : "int32"
          },
          "specificDaysOfWeek" : {
            "type" : "integer",
            "format" : "int32"
          },
          "forAPeriodOf" : {
            "type" : "integer",
            "format" : "int32"
          },
          "forAPeriodOfUnitType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceQuantityPeriodUnitType",
              "namespace" : "http://www.casenet.com/ServiceQuantityPeriodUnitType"
            },
            "enum" : [ "DAYS", "WEEKS", "MONTHS", "YEARS" ]
          }
        },
        "xml" : {
          "name" : "ServiceQuantity",
          "namespace" : "http://www.casenet.com/ServiceQuantity"
        }
      },
      "ServiceRequestDecision" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceRequestDecisionStatusType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestDecisionStatusType",
              "namespace" : "http://www.casenet.com/ServiceRequestDecisionStatusType"
            },
            "enum" : [ "APPROVE", "DENY", "PEND" ]
          },
          "decisionQuantity" : {
            "type" : "number"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "varianceReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "ServiceRequestDecision",
          "namespace" : "http://www.casenet.com/ServiceRequestDecision"
        }
      },
      "ServiceRequestDetermination" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determinationBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "serviceRequestStatus" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "readyForClaims" : {
            "type" : "boolean"
          },
          "dateSentToClaims" : {
            "type" : "string",
            "format" : "date-time"
          },
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "explanation" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "trackingNumber" : {
            "type" : "string"
          },
          "serviceRequestDecisions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestDecision"
            }
          },
          "claimInformation" : {
            "type" : "string"
          },
          "serviceQuantity" : {
            "$ref" : "#/components/schemas/ServiceQuantity"
          }
        },
        "xml" : {
          "name" : "ServiceRequestDetermination",
          "namespace" : "http://www.casenet.com/ServiceRequestDetermination"
        }
      },
      "ServiceRequestLineItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "determinationDueDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "details" : {
            "type" : "string"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "authorizationId" : {
            "type" : "string"
          },
          "authorizationVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "originalRequestedFromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalRequestedToDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "extension" : {
            "type" : "boolean"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "appliedEligibility" : {
            "$ref" : "#/components/schemas/Eligibility"
          },
          "serviceOffer" : {
            "$ref" : "#/components/schemas/ServiceOffer"
          },
          "serviceQuantity" : {
            "$ref" : "#/components/schemas/ServiceQuantity"
          },
          "procedure" : {
            "$ref" : "#/components/schemas/SRProcedure"
          },
          "serviceLocation" : {
            "$ref" : "#/components/schemas/Address"
          },
          "serviceLocationType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "voidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          },
          "negotiatedUnitRate" : {
            "$ref" : "#/components/schemas/Money"
          },
          "costOverride" : {
            "$ref" : "#/components/schemas/Money"
          },
          "estimatedCost" : {
            "$ref" : "#/components/schemas/Money"
          },
          "currentDetermination" : {
            "$ref" : "#/components/schemas/ServiceRequestDetermination"
          },
          "acknowledgements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SRLineItemAck"
            }
          },
          "serviceOfferLocation" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "xml" : {
          "name" : "ServiceRequestLineItem",
          "namespace" : "http://www.casenet.com/ServiceRequestLineItem"
        }
      },
      "ServiceRequestNotification" : {
        "type" : "object",
        "properties" : {
          "correspondenceNotifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorrespondenceNotification"
            }
          },
          "phoneNotifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhoneNotification"
            }
          }
        }
      },
      "CreateServiceRequestNotificationRequest" : {
        "required" : [ "lineItemIds" ],
        "type" : "object",
        "properties" : {
          "lineItemIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createPhoneNotificationRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreatePhoneNotificationRequest"
            }
          },
          "createInternalLetterNotificationRequest" : {
            "$ref" : "#/components/schemas/CreateInternalLetterNotificationRequest"
          },
          "serviceRequestVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AssignCaseToServiceRequestRequest" : {
        "required" : [ "cnCaseId", "srVersion" ],
        "type" : "object",
        "properties" : {
          "srVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cnCaseId" : {
            "type" : "string"
          }
        }
      },
      "CheckProcedureCodesRequest" : {
        "required" : [ "procedureCodeNaturalIds" ],
        "type" : "object",
        "properties" : {
          "procedureCodeNaturalIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProcedureCodeNaturalId"
            }
          }
        }
      },
      "CloseServiceRequestRequest" : {
        "type" : "object",
        "xml" : {
          "name" : "CloseServiceRequestRequest",
          "namespace" : "http://www.casenet.com/CloseServiceRequestRequest"
        }
      },
      "ServiceRequestRequest" : {
        "required" : [ "lineItemRequests" ],
        "type" : "object",
        "properties" : {
          "serviceRequestHeaderRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestHeaderRequest"
          },
          "lineItemRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreateServiceRequestLineItemRequest"
            }
          }
        },
        "xml" : {
          "name" : "ServiceRequestRequest",
          "namespace" : "http://www.casenet.com/ServiceRequestRequest"
        }
      },
      "ServiceRequestDeterminationRequest" : {
        "type" : "object",
        "properties" : {
          "serviceRequestDecisions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestDecision"
            }
          },
          "serviceRequestStatus" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "determinationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "explanationOption" : {
            "type" : "string"
          },
          "claimInformation" : {
            "maxLength" : 264,
            "minLength" : 0,
            "type" : "string"
          },
          "serviceQuantity" : {
            "$ref" : "#/components/schemas/ServiceQuantity"
          }
        }
      },
      "ServiceRequestDuplicationCheckResult" : {
        "type" : "object",
        "properties" : {
          "referenceNumber" : {
            "type" : "string"
          }
        }
      },
      "ServiceRequestDuplicateCheckRequest" : {
        "type" : "object",
        "properties" : {
          "serviceRequestDuplicateLineItemCheckRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestDuplicateLineItemCheckRequest"
            }
          }
        }
      },
      "ServiceRequestDuplicateLineItemCheckRequest" : {
        "required" : [ "endDate", "startDate" ],
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "details" : {
            "maxLength" : 1000,
            "minLength" : 0,
            "type" : "string"
          },
          "serviceQuantityRequest" : {
            "$ref" : "#/components/schemas/BaseServiceRequestServiceQuantityRequest"
          },
          "serviceLocationTypeOptionId" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "appliedEligibilityId" : {
            "type" : "string"
          },
          "negotiateUnitRate" : {
            "type" : "number",
            "format" : "double"
          },
          "overrideCost" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceRequestLineItemDeterminationRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestLineItemDeterminationRequest"
          },
          "serviceOfferRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestServiceOfferRequest"
          },
          "serviceRequestProcedureRequest" : {
            "$ref" : "#/components/schemas/ServiceRequestSRProcedureRequest"
          }
        },
        "xml" : {
          "name" : "BaseServiceRequestLineItemRequest",
          "namespace" : "http://www.casenet.com/BaseServiceRequestLineItemRequest"
        }
      },
      "CompleteServiceRequestReviewRequest" : {
        "required" : [ "reviewTaskId" ],
        "type" : "object",
        "properties" : {
          "reviewTaskId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "notes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdminNoteRequest"
            }
          }
        }
      },
      "TotalCostResponse" : {
        "type" : "object",
        "properties" : {
          "totalCost" : {
            "$ref" : "#/components/schemas/Money"
          }
        }
      },
      "TotalCostRequest" : {
        "type" : "object",
        "properties" : {
          "serviceRequestIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ServiceRequestSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "memberDirected" : {
            "type" : "boolean"
          },
          "owner" : {
            "$ref" : "#/components/schemas/User"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "mcp" : {
            "type" : "string",
            "enum" : [ "ALL", "HAS_MCP", "NO_MCP" ]
          },
          "cnCase" : {
            "$ref" : "#/components/schemas/CnCase"
          },
          "voidInfoExists" : {
            "type" : "boolean"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestLineItem"
            }
          },
          "hasNotifications" : {
            "type" : "boolean"
          },
          "hasAttachments" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "caseName" : {
            "type" : "string"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "providerName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "VersionedObject",
          "namespace" : "http://www.casenet.com/VersionedObject"
        }
      },
      "ServiceRequestSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "ServiceRequestSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "procedureCode" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "referenceNumber" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "mcp" : {
            "type" : "string",
            "enum" : [ "ALL", "HAS_MCP", "NO_MCP" ]
          },
          "includeVoided" : {
            "type" : "boolean"
          },
          "servicingProviderId" : {
            "type" : "string"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceRequestSearchSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "PortalServiceRequestSearchLineItem" : {
        "type" : "object",
        "properties" : {
          "serviceRequestId" : {
            "type" : "string"
          },
          "lineItemId" : {
            "type" : "string"
          },
          "lineItemType" : {
            "type" : "string"
          },
          "lineItemNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "totalCalculatedQuantity" : {
            "type" : "number",
            "format" : "double"
          },
          "totalQuantity" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceInfo" : {
            "type" : "string"
          },
          "determinationStatus" : {
            "type" : "string"
          },
          "modifierInfo" : {
            "type" : "string"
          },
          "quantityUnits" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceQuantityUnitType",
              "namespace" : "http://www.casenet.com/ServiceQuantityUnitType"
            },
            "enum" : [ "UNITS", "VISITS", "HOURS", "QUARTER_HOURS" ]
          },
          "serviceOfferName" : {
            "type" : "string"
          },
          "voidAuthorizedBy" : {
            "type" : "string"
          },
          "acknowledged" : {
            "type" : "boolean"
          },
          "serviceRequestDecisions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalServiceRequestSearchLineItemSRDecision"
            }
          }
        },
        "xml" : {
          "name" : "PortalServiceRequestSearchLineItem",
          "namespace" : "http://www.casenet.com/PortalServiceRequestSearchLineItem"
        }
      },
      "PortalServiceRequestSearchLineItemSRDecision" : {
        "type" : "object",
        "properties" : {
          "serviceRequestId" : {
            "type" : "string"
          },
          "lineItemId" : {
            "type" : "string"
          },
          "srDeterminationId" : {
            "type" : "string"
          },
          "srDecisionId" : {
            "type" : "string"
          },
          "serviceRequestDecisionStatusType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestDecisionStatusType",
              "namespace" : "http://www.casenet.com/ServiceRequestDecisionStatusType"
            },
            "enum" : [ "APPROVE", "DENY", "PEND" ]
          },
          "decisionQuantity" : {
            "type" : "number"
          }
        },
        "xml" : {
          "name" : "PortalServiceRequestSearchLineItemSRDecision",
          "namespace" : "http://www.casenet.com/PortalServiceRequestSearchLineItemSRDecision"
        }
      },
      "PortalServiceRequestSearchResults" : {
        "type" : "object",
        "properties" : {
          "serviceRequests" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalServiceRequestSearchServiceRequest"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "PortalServiceRequestSearchResults",
          "namespace" : "http://www.casenet.com/PortalServiceRequestSearchResults"
        }
      },
      "PortalServiceRequestSearchServiceRequest" : {
        "type" : "object",
        "properties" : {
          "serviceRequestIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceRequestId" : {
            "type" : "string"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "internalMemberId" : {
            "type" : "string"
          },
          "externalMemberId" : {
            "type" : "string"
          },
          "memberFullName" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "closeDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "determinationStatus" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceRequestState",
              "namespace" : "http://www.casenet.com/ServiceRequestState"
            },
            "enum" : [ "DRAFT", "OPEN", "CLOSED", "VOID" ]
          },
          "status" : {
            "$ref" : "#/components/schemas/ServiceRequestStatus"
          },
          "servicingProviderName" : {
            "type" : "string"
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PortalServiceRequestSearchLineItem"
            }
          }
        },
        "xml" : {
          "name" : "PortalServiceRequestSearchServiceRequest",
          "namespace" : "http://www.casenet.com/PortalServiceRequestSearchServiceRequest"
        }
      },
      "PortalServiceRequestSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "memberIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberId"
            }
          },
          "authorizationNumber" : {
            "type" : "string"
          },
          "authorizationType" : {
            "type" : "string",
            "xml" : {
              "name" : "UMAuthorizationType",
              "namespace" : "http://www.casenet.com/UMAuthorizationType"
            },
            "enum" : [ "INPATIENT", "SP", "RX" ]
          },
          "fromDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "toDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "sortField" : {
            "type" : "string",
            "xml" : {
              "name" : "SRAuthorizationSortField",
              "namespace" : "http://www.casenet.com/SRAuthorizationSortField"
            },
            "enum" : [ "ACKNOWLEDGE", "AUTHORIZATION_NUM", "FROM_DATE", "UPDATED_DATE", "END_DATE", "STATUS", "STATE", "MEMBER_NAME", "MEMBER_EXTERNAL_ID", "REQUESTING_PROVIDER", "FACILITY_PROVIDER", "DIAGNOSIS_CODE", "DIAGNOSIS_NAME" ]
          },
          "asc" : {
            "type" : "boolean"
          },
          "includeClosed" : {
            "type" : "boolean"
          },
          "userSubmittedOnly" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "PortalServiceRequestSearchCriteria",
          "namespace" : "http://www.casenet.com/PortalServiceRequestSearchCriteria"
        }
      },
      "ManualTaskArtifact" : {
        "type" : "object",
        "properties" : {
          "instanceId" : {
            "type" : "string"
          },
          "artifactDefId" : {
            "type" : "string"
          },
          "screenTypeName" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "ManualTaskArtifact",
          "namespace" : "http://www.casenet.com/TaskInstanceLink"
        }
      },
      "ManualTaskArtifactSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ManualTaskArtifact"
            }
          }
        },
        "xml" : {
          "name" : "ManualTaskArtifactSearchResults",
          "namespace" : "http://www.casenet.com/ManualTaskArtifactSearchResults"
        }
      },
      "ManualTaskArtifactSearchCriteria" : {
        "required" : [ "taskLinkArtifactType" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "taskLinkArtifactType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskLinkArtifactType",
              "namespace" : "http://www.casenet.com/TaskLinkArtifactType"
            },
            "enum" : [ "INPATIENT", "SP", "RX", "CASE", "MEDICATION", "ASSESSMENT", "CARE_PLAN" ]
          }
        },
        "xml" : {
          "name" : "ManualTaskArtifactSearchCriteria",
          "namespace" : "http://www.casenet.com/ManualTaskArtifactSearchCriteria"
        }
      },
      "MemberTaskSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "instanceId" : {
            "type" : "string"
          },
          "actorId" : {
            "type" : "string"
          },
          "memberId" : {
            "type" : "string"
          },
          "activity" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "openStatus" : {
            "type" : "boolean"
          },
          "overdueStatus" : {
            "type" : "boolean"
          },
          "cancelledStatus" : {
            "type" : "boolean"
          },
          "closedStatus" : {
            "type" : "boolean"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pooledActorsId" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "screenTypeName" : {
            "type" : "string"
          },
          "closeImplication" : {
            "type" : "string"
          },
          "teamName" : {
            "type" : "string"
          },
          "bhpPath" : {
            "type" : "string"
          },
          "hasComments" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "triggerSource" : {
            "$ref" : "#/components/schemas/TaskTriggerSource"
          }
        },
        "xml" : {
          "name" : "MemberTaskSearchResult",
          "namespace" : "http://www.casenet.com/MemberTaskSearchResult"
        }
      },
      "MemberTaskSearchResults" : {
        "type" : "object",
        "properties" : {
          "tasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberTaskSearchResult"
            }
          },
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "MemberTaskSearchResults",
          "namespace" : "http://www.casenet.com/MemberTaskSearchResults"
        }
      },
      "MemberTaskSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "openStatus" : {
            "type" : "boolean"
          },
          "overdueStatus" : {
            "type" : "boolean"
          },
          "closedStatus" : {
            "type" : "boolean"
          },
          "cancelledStatus" : {
            "type" : "boolean"
          },
          "reverseChronologicalOrder" : {
            "type" : "boolean"
          },
          "sortByStartDate" : {
            "type" : "boolean"
          },
          "teamName" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "MemberTaskSearchCriteria",
          "namespace" : "http://www.casenet.com/MemberTaskSearchCriteria"
        }
      },
      "NextTaskConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "taskTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskTypeConfiguration"
            }
          },
          "defaultTaskType" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "NextTaskConfigurationResponse",
          "namespace" : "http://www.casenet.com/NextTaskConfigurationResponse"
        }
      },
      "TaskTypeConfiguration" : {
        "required" : [ "taskTypeName" ],
        "type" : "object",
        "properties" : {
          "taskTypeName" : {
            "type" : "string"
          },
          "defaultAssignee" : {
            "$ref" : "#/components/schemas/TaskAssignee"
          }
        },
        "xml" : {
          "name" : "TaskTypeConfiguration",
          "namespace" : "http://www.casenet.com/TaskTypeConfiguration"
        }
      },
      "AbstractDueDateOffset" : {
        "type" : "object",
        "properties" : {
          "dueDateOffset" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AbstractNextTaskConfiguration" : {
        "type" : "object",
        "properties" : {
          "taskNameType" : {
            "type" : "string",
            "enum" : [ "REFERRAL_TASK", "COMPLETE_REFERRAL_TASK", "SELECT_CASE_TASK", "COMPLETE_INITIAL_ASSESSMENT_TASK", "SEND_SOURCE_NOTIFICATION_TASK", "COMPLETE_FURTHER_EVALUATION_TASK", "CLINICAL_REVIEW_TASK", "ADVISOR_REVIEW_TASK", "DETERMINATION_TASK", "NOTIFICATION_TASK", "CONCURRENT_REVIEW_TASK", "EVALUATE_ADVISOR_REVIEW_TASK", "REQUEST_FOR_INFORMATION_REVIEW_TASK", "APPEAL_CLINICAL_REVIEW", "APPEAL_ADVISOR_REVIEW_TASK", "APPEAL_OUTCOME_TASK", "APPEAL_EVALUATE_ADVISOR_REVIEW_TASK", "APPEAL_NOTIFICATION_TASK", "AAG_ADVISOR_REVIEW_TASK", "AAG_CLINICAL_REVIEW_TASK", "AAG_EVALUATE_ADVISOR_REVIEW_TASK", "AAG_OUTCOME_TASK", "SR_DETERMINATION_TASK", "SR_NOTIFICATION_TASK" ]
          },
          "nextTaskAssignee" : {
            "$ref" : "#/components/schemas/NextTaskAssignee"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "dueDateOffset" : {
            "$ref" : "#/components/schemas/AbstractDueDateOffset"
          }
        }
      },
      "NextTaskAssignee" : {
        "type" : "object"
      },
      "NextTaskConfigurationResponseV2" : {
        "type" : "object",
        "properties" : {
          "nextTaskConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractNextTaskConfiguration"
            }
          }
        }
      },
      "QueueTaskBrowserConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "taskBrowserAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskBrowserAttribute"
            }
          },
          "queue" : {
            "$ref" : "#/components/schemas/Queue"
          },
          "licenseFeature" : {
            "$ref" : "#/components/schemas/CustomerFeature"
          },
          "allPrograms" : {
            "type" : "boolean"
          },
          "program" : {
            "$ref" : "#/components/schemas/QueueTaskBrowserProgram"
          },
          "availableTaskBrowserAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskBrowserAttribute"
            }
          }
        },
        "xml" : {
          "name" : "QueueTaskBrowserConfiguration",
          "namespace" : "http://www.casenet.com/QueueTaskBrowserConfiguration"
        }
      },
      "QueueTaskBrowserProgram" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "isSystem" : {
            "type" : "boolean"
          },
          "programFamily" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "label" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "QueueTaskBrowserProgram",
          "namespace" : "http://www.casenet.com/QueueTaskBrowserProgram"
        }
      },
      "TaskBrowserAttribute" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "defaultAttribute" : {
            "type" : "boolean"
          },
          "system" : {
            "type" : "boolean"
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "TaskBrowserAttribute",
          "namespace" : "http://www.casenet.com/TaskBrowserAttribute"
        }
      },
      "TaskAttemptBehavior" : {
        "type" : "object",
        "properties" : {
          "attemptBehaviorName" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "behaviorType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskBehaviorType",
              "namespace" : "http://www.casenet.com/TaskBehaviorType"
            },
            "enum" : [ "inbound", "outbound", "admin" ]
          },
          "disabled" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TaskAttemptBehavior",
          "namespace" : "http://www.casenet.com/TaskAttemptBehavior"
        }
      },
      "TaskBrowserConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "taskBrowserAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskBrowserAttribute"
            }
          }
        },
        "xml" : {
          "name" : "TaskBrowserConfiguration",
          "namespace" : "http://www.casenet.com/TaskBrowserConfiguration"
        }
      },
      "LocalTime" : {
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nano" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TaskConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "taskConfigurationTimeIntervals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskConfigurationTimeInterval"
            }
          },
          "taskQueueAutoRefreshInterval" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "TaskConfiguration",
          "namespace" : "http://www.casenet.com/TaskConfiguration"
        }
      },
      "TaskConfigurationTimeInterval" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "DayPart",
              "namespace" : "http://www.casenet.com/DayPart"
            },
            "enum" : [ "MORNING", "AFTERNOON", "EVENING", "NIGHT", "WEEKEND" ]
          },
          "durationMinute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          }
        },
        "xml" : {
          "name" : "TaskConfigurationTimeInterval",
          "namespace" : "http://www.casenet.com/TaskConfigurationTimeInterval"
        }
      },
      "AbstractTaskRecurrenceOptionsRequest" : {
        "required" : [ "taskRecurrenceEndDate" ],
        "type" : "object",
        "properties" : {
          "taskRecurrenceEndDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AbstractTaskRecurrenceOptionsRequest",
          "namespace" : "http://www.casenet.com/AbstractTaskRecurrenceOptionsRequest"
        }
      },
      "CreateTaskRequest" : {
        "required" : [ "assigneeName", "assigneeType", "dueDate", "startDate", "taskActivityOption", "taskPriority" ],
        "type" : "object",
        "properties" : {
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "assigneeName" : {
            "type" : "string"
          },
          "taskActivityOption" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskRecurrenceOptionsRequest" : {
            "$ref" : "#/components/schemas/AbstractTaskRecurrenceOptionsRequest"
          },
          "taskComments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskCommentRequest"
            }
          },
          "taskInstanceLinkRequest" : {
            "$ref" : "#/components/schemas/TaskInstanceLinkRequest"
          }
        },
        "xml" : {
          "name" : "CreateTaskRequest",
          "namespace" : "http://www.casenet.com/CreateTaskRequest"
        }
      },
      "TaskCommentRequest" : {
        "required" : [ "narrative" ],
        "type" : "object",
        "properties" : {
          "narrative" : {
            "maxLength" : 8000,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TaskCommentRequest",
          "namespace" : "http://www.casenet.com/TaskCommentRequest"
        }
      },
      "TaskInstanceLinkRequest" : {
        "type" : "object",
        "xml" : {
          "name" : "TaskInstanceLinkRequest",
          "namespace" : "http://www.casenet.com/TaskInstanceLinkRequest"
        }
      },
      "TaskComment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "narrative" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "dateCreated" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "TaskComment",
          "namespace" : "http://www.casenet.com/TaskComment"
        }
      },
      "CreateTaskCommentsRequest" : {
        "required" : [ "taskComments" ],
        "type" : "object",
        "properties" : {
          "taskComments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskCommentRequest"
            }
          }
        },
        "xml" : {
          "name" : "CreateTaskCommentsRequest",
          "namespace" : "http://www.casenet.com/CreateTaskCommentsRequest"
        }
      },
      "MemberDetailsLite" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "bhpNodeFeedIdFullPath" : {
            "type" : "string"
          },
          "timeZoneId" : {
            "type" : "string"
          }
        }
      },
      "MemberTaskDetails" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assigneeName" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "taskLinkArtifactType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskLinkArtifactType",
              "namespace" : "http://www.casenet.com/TaskLinkArtifactType"
            },
            "enum" : [ "INPATIENT", "SP", "RX", "CASE", "MEDICATION", "ASSESSMENT", "CARE_PLAN" ]
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "taskActivity" : {
            "type" : "string"
          },
          "taskName" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskRecurrenceOptions" : {
            "$ref" : "#/components/schemas/AbstractTaskRecurrenceOptions"
          },
          "taskInstanceLink" : {
            "$ref" : "#/components/schemas/TaskInstanceLink"
          },
          "variablesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "workflowTask" : {
            "type" : "boolean"
          },
          "teamName" : {
            "type" : "string"
          },
          "queueName" : {
            "type" : "string"
          },
          "taskId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "triggerSource" : {
            "$ref" : "#/components/schemas/TaskTriggerSource"
          },
          "memberDetails" : {
            "$ref" : "#/components/schemas/MemberDetailsLite"
          },
          "canAddAttempt" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "TaskDetails",
          "namespace" : "http://www.casenet.com/TaskDetails"
        }
      },
      "AbstractNoteRequest" : {
        "required" : [ "noteDefinitionVisibleId" ],
        "type" : "object",
        "properties" : {
          "noteDefinitionVisibleId" : {
            "type" : "string"
          },
          "noteText" : {
            "maxLength" : 1000000,
            "minLength" : 0,
            "type" : "string"
          },
          "offlineCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "extendedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          }
        },
        "xml" : {
          "name" : "AbstractNoteRequest",
          "namespace" : "http://www.casenet.com/AbstractNoteRequest"
        }
      },
      "TaskAttemptRequest" : {
        "required" : [ "attemptBehaviorName" ],
        "type" : "object",
        "properties" : {
          "attemptBehaviorName" : {
            "type" : "string"
          },
          "attemptDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "campaignTypeOption" : {
            "type" : "string"
          },
          "noteRequest" : {
            "$ref" : "#/components/schemas/AbstractNoteRequest"
          }
        },
        "xml" : {
          "name" : "TaskAttemptRequest",
          "namespace" : "http://www.casenet.com/TaskAttemptRequest"
        }
      },
      "TaskAttempt" : {
        "type" : "object",
        "properties" : {
          "noteCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "NoteCategory",
              "namespace" : "http://www.casenet.com/NoteCategory"
            },
            "enum" : [ "ADMIN", "INBOUND", "OUTBOUND" ]
          },
          "campaignType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "noteText" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contactName" : {
            "type" : "string"
          },
          "contactReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "contactReasonOther" : {
            "type" : "string"
          },
          "contactOutcome" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskAttemptComment"
            }
          },
          "timeOfDay" : {
            "type" : "string",
            "xml" : {
              "name" : "DayPart",
              "namespace" : "http://www.casenet.com/DayPart"
            },
            "enum" : [ "MORNING", "AFTERNOON", "EVENING", "NIGHT", "WEEKEND" ]
          },
          "taskAttemptBehavior" : {
            "$ref" : "#/components/schemas/TaskAttemptBehavior"
          },
          "noteVoidInfo" : {
            "$ref" : "#/components/schemas/VoidInfo"
          }
        },
        "xml" : {
          "name" : "TaskAttempt",
          "namespace" : "http://www.casenet.com/TaskAttempt"
        }
      },
      "TaskAttemptComment" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "TaskAttemptComment",
          "namespace" : "http://www.casenet.com/TaskAttemptComment"
        }
      },
      "TaskAttemptResponse" : {
        "type" : "object",
        "properties" : {
          "totalAttempts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attemptsPerTimeOfDay" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "taskAttemptList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskAttempt"
            }
          }
        },
        "xml" : {
          "name" : "TaskAttemptResponse",
          "namespace" : "http://www.casenet.com/TaskAttemptResponse"
        }
      },
      "CreateTaskCommentRequest" : {
        "required" : [ "createdBy", "narrative" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string"
          },
          "narrative" : {
            "maxLength" : 8000,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CreateTaskCommentRequest",
          "namespace" : "http://www.casenet.com/CreateTaskCommentRequest"
        }
      },
      "UpdateFullTaskRequest" : {
        "required" : [ "assigneeType", "startDate", "taskPriority" ],
        "type" : "object",
        "properties" : {
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "assigneeName" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createTaskCommentsRequest" : {
            "$ref" : "#/components/schemas/CreateTaskCommentRequest"
          },
          "taskRecurrenceOptionsRequest" : {
            "$ref" : "#/components/schemas/AbstractTaskRecurrenceOptionsRequest"
          }
        },
        "xml" : {
          "name" : "UpdateFullTaskRequest",
          "namespace" : "http://www.casenet.com/UpdateFullTaskRequest"
        }
      },
      "UpdateTaskRequest" : {
        "required" : [ "assigneeName", "assigneeType", "dueDate", "startDate", "taskPriority" ],
        "type" : "object",
        "properties" : {
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskAssigneeType",
              "namespace" : "http://www.casenet.com/TaskAssigneeType"
            },
            "enum" : [ "USERS", "GROUP_QUEUES", "TEAMS" ]
          },
          "assigneeName" : {
            "type" : "string"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UpdateTaskRequest",
          "namespace" : "http://www.casenet.com/UpdateTaskRequest"
        }
      },
      "AbstractTaskLog" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "AbstractTaskLog",
          "namespace" : "http://www.casenet.com/AbstractTaskLog"
        }
      },
      "TaskLogSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbstractTaskLog"
            }
          }
        },
        "xml" : {
          "name" : "TaskLogSearchResults",
          "namespace" : "http://www.casenet.com/TaskLogSearchResults"
        }
      },
      "TaskLogSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "TaskLogSearchCriteria",
          "namespace" : "http://www.casenet.com/TaskLogSearchCriteria"
        }
      },
      "TaskSearchConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "taskConfigurationTimeIntervals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskConfigurationTimeInterval"
            }
          },
          "memberExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "providerExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "eligibilityExtendedAttributesConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedAttributeConfigDto"
            }
          },
          "memberExtendedSearchFieldsConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedSearchFieldConfig"
            }
          },
          "providerExtendedSearchFieldsConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedSearchFieldConfig"
            }
          },
          "eligibilityExtendedSearchFieldsConfig" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExtendedSearchFieldConfig"
            }
          }
        },
        "xml" : {
          "name" : "TaskSearchConfiguration",
          "namespace" : "http://www.casenet.com/TaskSearchConfiguration"
        }
      },
      "DayPartStatistic" : {
        "type" : "object",
        "properties" : {
          "dayPart" : {
            "type" : "string",
            "xml" : {
              "name" : "DayPart",
              "namespace" : "http://www.casenet.com/DayPart"
            },
            "enum" : [ "MORNING", "AFTERNOON", "EVENING", "NIGHT", "WEEKEND" ]
          },
          "countOfAttempts" : {
            "type" : "integer",
            "format" : "int64"
          },
          "disabled" : {
            "type" : "boolean"
          }
        }
      },
      "TaskSearchResult" : {
        "type" : "object",
        "properties" : {
          "taskActions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "COMPLETE", "CLAIM", "CANCEL", "UNCLAIM" ]
            }
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "activity" : {
            "type" : "string"
          },
          "instanceId" : {
            "type" : "string"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/TaskAssigneeResponse"
          },
          "bhpPath" : {
            "type" : "string"
          },
          "countOfComments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "authorizationNumber" : {
            "type" : "string"
          },
          "memberLite" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "caseNumber" : {
            "type" : "string"
          },
          "caseName" : {
            "type" : "string"
          },
          "servicingFacility" : {
            "type" : "string"
          },
          "servicingFacilityLocation" : {
            "type" : "string"
          },
          "servicingFacilityPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "provider" : {
            "type" : "string"
          },
          "providerLocation" : {
            "type" : "string"
          },
          "providerPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneAndExtension"
          },
          "priority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "taskStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "teamName" : {
            "type" : "string"
          },
          "totalAttempts" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attemptsPerTimeOfDay" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DayPartStatistic"
            }
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminderDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "workflowTask" : {
            "type" : "boolean"
          },
          "queueName" : {
            "type" : "string"
          },
          "canAddAttempt" : {
            "type" : "boolean"
          },
          "memberAccessible" : {
            "type" : "boolean"
          },
          "employer" : {
            "type" : "string"
          },
          "lineItemLevelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "authorizationLevelOfUrgency" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "lineItemDeterminationDueDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "serviceType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "triggerSource" : {
            "$ref" : "#/components/schemas/TaskTriggerSource"
          },
          "memberExtendedFieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueObject"
            }
          }
        }
      },
      "TaskSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "TaskAttemptCriterion" : {
        "required" : [ "dayPart", "operator", "value" ],
        "type" : "object",
        "properties" : {
          "dayPart" : {
            "type" : "string",
            "enum" : [ "MORNING", "AFTERNOON", "EVENING", "NIGHT", "WEEKEND", "TOTAL" ]
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "LESS_THAN", "MORE_THAN", "EQUAL" ]
          },
          "value" : {
            "maximum" : 99999,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TaskFieldsInResponse" : {
        "type" : "object",
        "properties" : {
          "servicingRxProvider" : {
            "type" : "boolean"
          },
          "servicingRxProviderLocation" : {
            "type" : "boolean"
          },
          "servicingRxProviderPhoneNumber" : {
            "type" : "boolean"
          },
          "servicingFacility" : {
            "type" : "boolean"
          },
          "servicingFacilityLocation" : {
            "type" : "boolean"
          },
          "servicingFacilityPhoneNumber" : {
            "type" : "boolean"
          },
          "taskAttemptCount" : {
            "type" : "boolean"
          },
          "authorizationNumber" : {
            "type" : "boolean"
          },
          "caseNumber" : {
            "type" : "boolean"
          },
          "caseName" : {
            "type" : "boolean"
          },
          "triggerSource" : {
            "type" : "boolean"
          }
        }
      },
      "TaskSearchAdvancedCriteria" : {
        "type" : "object",
        "properties" : {
          "levelOfUrgencyOption" : {
            "type" : "string"
          },
          "serviceTypeOption" : {
            "type" : "string"
          },
          "bhpPath" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "employer" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "memberFirstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "memberLastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "servicingFacility" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "servicingProvider" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "activity" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "lineItemDeterminationDueDateFrom" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lineItemDeterminationDueDateTo" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taskAttemptCriteria" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskAttemptCriterion"
            }
          },
          "eligibilityExtendedFieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "memberExtendedFieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "providerExtendedFieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AttributeValueRequestObject"
            }
          },
          "taskAreas" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TaskArea",
                "namespace" : "http://www.casenet.com/TaskArea"
              },
              "enum" : [ "AAG_CLINICAL_REVIEW", "AAG_ADVISOR_REVIEW", "AAG_ADVISOR_REVIEW_EVALUATION", "AAG_OUTCOME", "ADVISOR_REVIEW", "ADVISOR_REVIEW_APPEAL", "ADVISOR_REVIEW_EVALUATION", "ADVISOR_REVIEW_APPEAL_EVALUATION", "ASSESSMENT", "ASSESSMENT_INITIAL", "AUTHORIZATION_CORRECTION", "CARE_PLAN_WORK_ON", "CASE_SELECT", "CLINICAL_REVIEW", "CLINICAL_REVIEW_APPEAL", "CONCURRENT_REVIEW", "DETERMINATION", "INTERVENTION_CLOSE", "NOTIFICATION", "NOTIFICATION_APPEAL", "OUTCOME_APPEAL", "QI_ADVISOR_REVIEW", "QI_OUTCOME", "QI_REVIEW", "REFERRAL", "REFERRAL_COMPLETE", "REFERRAL_EVALUATION", "REFERRAL_SOURCE_NOTIFICATION", "SERVICE_REQUEST", "SERVICE_REQUEST_REVIEW", "CORRESPONDENCE_REVIEW" ]
            }
          },
          "taskDefinitionTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TaskDefinitionType",
                "namespace" : "http://www.casenet.com/TaskDefinitionType"
              },
              "enum" : [ "TASK_DEFINITION", "APPOINTMENT", "ASSESSMENT", "CARE_PLAN_CREATE", "CARE_PLAN_REVIEW", "MEDICATION_REVIEW" ]
            }
          }
        }
      },
      "TaskSearchAssigneeRequest" : {
        "type" : "object"
      },
      "TaskSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "taskPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskPriority",
              "namespace" : "http://www.casenet.com/TaskPriority"
            },
            "enum" : [ "LOW", "NORMAL", "HIGH" ]
          },
          "taskDateType" : {
            "type" : "string",
            "enum" : [ "START_DATE", "REMINDER_DATE", "DUE_DATE" ]
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/TaskSearchAssigneeRequest"
          },
          "openStatus" : {
            "type" : "boolean"
          },
          "overdueStatus" : {
            "type" : "boolean"
          },
          "closedStatus" : {
            "type" : "boolean"
          },
          "cancelledStatus" : {
            "type" : "boolean"
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "includedFields" : {
            "$ref" : "#/components/schemas/TaskFieldsInResponse"
          },
          "advancedCriteria" : {
            "$ref" : "#/components/schemas/TaskSearchAdvancedCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "TaskSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "ACTIVITY", "ASSIGNEE", "AUTHORIZATION_NUMBER", "BHP_PATH", "CASE_NUMBER", "CASE_NAME", "COMPLETED_DATE", "COMMENTS_COUNT", "CREATED_DATE", "DESCRIPTION", "DUE_DATE", "MEMBER", "PRIORITY", "REMINDER_DATE", "SERVICING_FACILITY", "SERVICING_FACILITY_LOCATION", "SERVICING_FACILITY_PHONE_NUMBER", "SERVICING_RX_PROVIDER", "SERVICING_RX_PROVIDER_LOCATION", "SERVICING_RX_PROVIDER_PHONE_NUMBER", "START_DATE", "STATUS", "TOTAL_NUMBER_OF_ATTEMPTS", "TEAM_NAME", "TRIGGER_SOURCE" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "TasksBatchActionResult" : {
        "type" : "object",
        "properties" : {
          "taskActions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "COMPLETE", "CLAIM", "CANCEL", "UNCLAIM" ]
            }
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "taskStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "TaskStatus",
              "namespace" : "http://www.casenet.com/TaskStatus"
            },
            "enum" : [ "OPEN", "CLOSED", "CANCELLED", "OVERDUE", "NOT_CREATED" ]
          },
          "assignee" : {
            "$ref" : "#/components/schemas/TaskAssigneeResponse"
          },
          "queueName" : {
            "type" : "string"
          },
          "teamName" : {
            "type" : "string"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "TasksBatchActionResults" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TasksBatchActionResult"
            }
          }
        }
      },
      "TasksBatchActionRequest" : {
        "required" : [ "taskIds", "tasksBatchAction" ],
        "type" : "object",
        "properties" : {
          "taskIds" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "tasksBatchAction" : {
            "type" : "string",
            "xml" : {
              "name" : "TasksBatchAction",
              "namespace" : "http://www.casenet.com/TasksBatchAction"
            },
            "enum" : [ "CLAIM", "UNCLAIM", "CANCEL", "COMPLETE", "ASSIGN", "REFRESH" ]
          }
        },
        "xml" : {
          "name" : "TasksBatchActionRequest",
          "namespace" : "http://www.casenet.com/TasksBatchActionRequest"
        }
      },
      "UpdateTeamUsersRequest" : {
        "type" : "object",
        "properties" : {
          "usernames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Team" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "numberOfUsers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "users" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TeamUserSummary"
            }
          }
        },
        "xml" : {
          "name" : "TeamInfoFull",
          "namespace" : "http://www.casenet.com/TeamInfoFull"
        }
      },
      "TeamUserSummary" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "primaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "userLicensure" : {
            "$ref" : "#/components/schemas/UserLicensure"
          },
          "disabled" : {
            "type" : "boolean"
          }
        }
      },
      "UserLicensure" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "licenseNumber" : {
            "type" : "string"
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "state" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "UserLicensure",
          "namespace" : "http://www.casenet.com/UserLicensure"
        }
      },
      "TeamInfoFull" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TeamInfoFull",
          "namespace" : "http://www.casenet.com/TeamInfoFull"
        }
      },
      "TeamSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TeamInfoFull"
            }
          }
        },
        "xml" : {
          "name" : "TeamSearchResults",
          "namespace" : "http://www.casenet.com/TeamSearchResults"
        }
      },
      "BhpNodeId" : {
        "required" : [ "bhpNodeIdType", "value" ],
        "type" : "object",
        "properties" : {
          "bhpNodeIdType" : {
            "type" : "string",
            "xml" : {
              "name" : "BhpNodeIdType",
              "namespace" : "http://www.casenet.com/BhpNodeIdType"
            },
            "enum" : [ "INTERNAL", "FEED_FULL_PATH" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "BhpNodeId",
          "namespace" : "http://www.casenet.com/BhpNodeId"
        }
      },
      "TeamSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "name" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "username" : {
            "type" : "string"
          },
          "bhpNodeIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BhpNodeId"
            }
          },
          "memberIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MemberId"
            }
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TeamSortField"
            }
          }
        },
        "xml" : {
          "name" : "TeamSearchCriteria",
          "namespace" : "http://www.casenet.com/TeamSearchCriteria"
        }
      },
      "TeamSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "TeamSortColumn",
              "namespace" : "http://www.casenet.com/TeamSortColumn"
            },
            "enum" : [ "TEAM_ID", "TEAM_NAME", "TEAM_DESCRIPTION" ]
          }
        },
        "xml" : {
          "name" : "TeamSortField",
          "namespace" : "http://www.casenet.com/TeamSortField"
        }
      },
      "TelephonyCallStatusResponse" : {
        "type" : "object",
        "properties" : {
          "callActive" : {
            "type" : "boolean"
          }
        }
      },
      "MemberPhoneRequest" : {
        "required" : [ "contactPhoneNumberId" ],
        "type" : "object",
        "properties" : {
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "contactPhoneNumberId" : {
            "type" : "string"
          }
        }
      },
      "DialResponse" : {
        "type" : "object",
        "properties" : {
          "sourcePhoneExtension" : {
            "type" : "string"
          },
          "destinationPhoneNumber" : {
            "type" : "string"
          }
        }
      },
      "TimeTrackingBhpSetupTimeLimit" : {
        "type" : "object",
        "properties" : {
          "activityType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TimeTrackingConfiguration" : {
        "type" : "object",
        "properties" : {
          "timeTrackingEnabled" : {
            "type" : "boolean"
          },
          "billingDay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "timeTrackingBhpSetupTimeLimits" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeTrackingBhpSetupTimeLimit"
            }
          }
        }
      },
      "CreateTimeTrackingRequest" : {
        "type" : "object",
        "properties" : {
          "memberId" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "activityTypeOption" : {
            "type" : "string"
          },
          "activityNameOption" : {
            "type" : "string"
          },
          "comments" : {
            "maxLength" : 1500,
            "minLength" : 0,
            "type" : "string"
          },
          "minutes" : {
            "maximum" : 999,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "nonTruCareName" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "timeTrackingId" : {
            "type" : "string"
          },
          "activityDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "caseId" : {
            "$ref" : "#/components/schemas/CaseId"
          }
        }
      },
      "ResourceLink" : {
        "type" : "object",
        "properties" : {
          "menuId" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "CoachCandidateUsersSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "genderOption" : {
            "type" : "string"
          },
          "firstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "lastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "userName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "requireMatchingAvailability" : {
            "type" : "boolean"
          },
          "activeLicenseRequired" : {
            "type" : "boolean"
          },
          "onMemberBhpNodeTeam" : {
            "type" : "boolean"
          },
          "primaryHealthCoach" : {
            "type" : "boolean"
          },
          "primaryLanguageMatchRequired" : {
            "type" : "boolean"
          },
          "anyLanguageMatchRequired" : {
            "type" : "boolean"
          },
          "specializationOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "specializationMatchRequired" : {
            "type" : "boolean"
          },
          "displayInMembersTime" : {
            "type" : "boolean"
          },
          "eventTypeOption" : {
            "type" : "string"
          },
          "fieldVisit" : {
            "type" : "boolean"
          }
        }
      },
      "CompanyGroupSearchResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "hasSubgroups" : {
            "type" : "boolean"
          },
          "nameFullPath" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "CompanyGroupSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CompanyGroupSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "PaginatedSearchResults",
          "namespace" : "http://www.casenet.com/PaginatedSearchResults"
        }
      },
      "CompanyGroupSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "companyGroupNameFullPath" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CompanyGroupSortField"
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteriaWithSorting",
          "namespace" : "http://www.casenet.com/SearchCriteriaWithSorting"
        }
      },
      "CompanyGroupSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "enum" : [ "NAME", "PATH" ]
          }
        },
        "xml" : {
          "name" : "SortField",
          "namespace" : "http://www.casenet.com/SortField"
        }
      },
      "MemberBatchRequest" : {
        "type" : "object",
        "properties" : {
          "maxMedications" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "maxNotes" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "maxAuthorizations" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "maxAssessments" : {
            "maximum" : 3,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AppointmentTypeConfiguration" : {
        "type" : "object",
        "properties" : {
          "eventType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "fieldVisit" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "defaultDurationMinutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxDaysIntoFutureSchedulingAllowed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "coachFilterAttributeConfigurations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CoachFilterAttributeConfiguration"
            }
          }
        },
        "xml" : {
          "name" : "AppointmentTypeConfiguration",
          "namespace" : "http://www.casenet.com/AppointmentTypeConfiguration"
        }
      },
      "CoachFilterAttributeConfiguration" : {
        "type" : "object",
        "properties" : {
          "coachFilterAttribute" : {
            "type" : "string",
            "enum" : [ "PRIMARY_LANGUAGE", "SECONDARY_LANGUAGE", "SPECIALIZATION", "TEAM", "ACTIVE_LICENSE", "COACH_VISIT_TYPE", "PRIMARY_HEALTH_COACH" ]
          },
          "attributeRequired" : {
            "type" : "boolean"
          }
        }
      },
      "UserAppointmentConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "bhpConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppointmentTypeConfiguration"
            }
          }
        },
        "xml" : {
          "name" : "UserAppointmentConfiguration",
          "namespace" : "http://www.casenet.com/UserAppointmentConfiguration"
        }
      },
      "AvailableTime" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startLocalDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endLocalDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "availabilityTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "fieldAvailability" : {
            "type" : "boolean"
          },
          "dayOfWeek" : {
            "type" : "string",
            "enum" : [ "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY" ]
          }
        }
      },
      "AvailableTimeResponse" : {
        "type" : "object",
        "properties" : {
          "availableTimes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AvailableTime"
            }
          }
        }
      },
      "AvailableTimeListRequest" : {
        "type" : "object",
        "properties" : {
          "availableTimeRequests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AvailableTimeRequest"
            }
          }
        }
      },
      "AvailableTimeRequest" : {
        "required" : [ "dayOfWeek", "endTime", "startTime" ],
        "type" : "object",
        "properties" : {
          "availabilityTypeOptions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dayOfWeek" : {
            "type" : "string",
            "enum" : [ "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY" ]
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fieldAvailability" : {
            "type" : "boolean"
          }
        }
      },
      "UserAppointmentRequest" : {
        "required" : [ "endTime", "startTime", "subject" ],
        "type" : "object",
        "properties" : {
          "timeZone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "subject" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string"
          },
          "location" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "eventTypeOption" : {
            "type" : "string"
          },
          "otherEventType" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "durationOverrideReasonOption" : {
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "fieldVisit" : {
            "type" : "boolean"
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "memberPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "allowSchedulingWhenUnavailable" : {
            "type" : "boolean"
          },
          "memberPhoneNumberTypeOption" : {
            "type" : "string"
          },
          "otherUsernames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "UserAppointmentRequest",
          "namespace" : "http://www.casenet.com/UserAppointmentRequest"
        }
      },
      "CancelledAppointmentInfoRequest" : {
        "type" : "object",
        "properties" : {
          "memberCancelled" : {
            "type" : "boolean"
          },
          "reasonOption" : {
            "type" : "string"
          }
        }
      },
      "UpdateUserAppointmentRequest" : {
        "required" : [ "endTime", "startTime", "subject" ],
        "type" : "object",
        "properties" : {
          "timeZone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "subject" : {
            "maxLength" : 150,
            "minLength" : 0,
            "type" : "string"
          },
          "location" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "eventTypeOption" : {
            "type" : "string"
          },
          "otherEventType" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "durationOverrideReasonOption" : {
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "fieldVisit" : {
            "type" : "boolean"
          },
          "memberId" : {
            "$ref" : "#/components/schemas/MemberId"
          },
          "memberPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "allowSchedulingWhenUnavailable" : {
            "type" : "boolean"
          },
          "memberPhoneNumberTypeOption" : {
            "type" : "string"
          },
          "otherUsernames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cancelledAppointmentInfo" : {
            "$ref" : "#/components/schemas/CancelledAppointmentInfoRequest"
          }
        },
        "xml" : {
          "name" : "UserAppointmentRequest",
          "namespace" : "http://www.casenet.com/UserAppointmentRequest"
        }
      },
      "Appointment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ownerUser" : {
            "$ref" : "#/components/schemas/User"
          },
          "subject" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "fieldVisit" : {
            "type" : "boolean"
          },
          "otherEventType" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "notes" : {
            "type" : "string"
          },
          "durationOverrideReason" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "missedCancelledAppointmentInfo" : {
            "$ref" : "#/components/schemas/MissedCancelledAppointmentInfo"
          },
          "memberLite" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "otherContactPhoneNumberType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "eventType" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "otherUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        },
        "xml" : {
          "name" : "Appointment",
          "namespace" : "http://www.casenet.com/Appointment"
        }
      },
      "AppointmentSearchResults" : {
        "type" : "object",
        "properties" : {
          "appointments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Appointment"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "startIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "AppointmentSearchResults",
          "namespace" : "http://www.casenet.com/AppointmentSearchResults"
        }
      },
      "MissedCancelledAppointmentInfo" : {
        "type" : "object",
        "properties" : {
          "memberCancelled" : {
            "type" : "boolean"
          },
          "eventCancelled" : {
            "type" : "boolean"
          },
          "missedOrCancelledReasonOption" : {
            "$ref" : "#/components/schemas/OptionValue"
          }
        },
        "xml" : {
          "name" : "MissedCancelledAppointmentInfo",
          "namespace" : "http://www.casenet.com/MissedCancelledAppointmentInfo"
        }
      },
      "AppointmentSearchCriteria" : {
        "required" : [ "endDate", "startDate" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "AppointmentSearchCriteria",
          "namespace" : "http://www.casenet.com/AppointmentSearchCriteria"
        }
      },
      "UserDashboardConfiguration" : {
        "type" : "object",
        "properties" : {
          "messagesDaysToDisplay" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enabledPods" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CASE_LOAD", "MESSAGES", "MY_TASK", "QUEUE", "TIME_TRACKING" ]
            }
          }
        }
      },
      "UserProfileConfiguration" : {
        "type" : "object",
        "properties" : {
          "optionFieldMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OptionGroupFieldConfig"
            }
          },
          "availableTimeZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "credentialOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "emailTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "emailTypeRequired" : {
            "type" : "boolean"
          },
          "addressTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "phoneNumberTypeRequired" : {
            "type" : "boolean"
          },
          "phoneNumberTypeOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "addressTypeRequired" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "UserProfileConfiguration",
          "namespace" : "http://www.casenet.com/UserProfileConfiguration"
        }
      },
      "AbstractUpdateUserProfileRequest" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "titleOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "credentialOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "credentialsOther" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "genderOption" : {
            "type" : "string"
          },
          "timezone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "primaryLanguageOption" : {
            "type" : "string"
          },
          "secondaryLanguageOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "serviceRegionOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "locationOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "serviceZipCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "skillAreaOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "specializationOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "specialNeedsAreaOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "levelOfCareOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "acuityOptions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "userLicenses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserLicensureRequest"
            }
          },
          "faxNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber"
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          }
        },
        "xml" : {
          "name" : "AbstractUpdateUserProfileRequest",
          "namespace" : "http://www.casenet.com/AbstractUpdateUserProfileRequest"
        }
      },
      "UserLicensureRequest" : {
        "required" : [ "licenseNumber", "state" ],
        "type" : "object",
        "properties" : {
          "licenseNumber" : {
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "licenseTypeOption" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        },
        "xml" : {
          "name" : "UserLicensureRequest",
          "namespace" : "http://www.casenet.com/UserLicensureRequest"
        }
      },
      "EmailNotificationRequest" : {
        "required" : [ "assignee", "assigneeType", "emailId", "emailType", "frequency", "frequencyType" ],
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "integer",
            "format" : "int32"
          },
          "frequencyType" : {
            "type" : "string",
            "xml" : {
              "name" : "FrequencyType",
              "namespace" : "http://www.casenet.com/FrequencyType"
            },
            "enum" : [ "MINUTES", "HOURS" ]
          },
          "assignee" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "EmailNotificationAssigneeType",
              "namespace" : "http://www.casenet.com/EmailNotificationAssigneeType"
            },
            "enum" : [ "USER", "TEAM", "QUEUE" ]
          },
          "emailId" : {
            "maxLength" : 36,
            "minLength" : 1,
            "type" : "string"
          },
          "emailType" : {
            "type" : "string",
            "xml" : {
              "name" : "EmailType",
              "namespace" : "http://www.casenet.com/EmailType"
            },
            "enum" : [ "TO" ]
          }
        },
        "xml" : {
          "name" : "EmailNotificationRequest",
          "namespace" : "http://www.casenet.com/EmailNotificationRequest"
        }
      },
      "EmailInfo" : {
        "required" : [ "address", "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 36,
            "minLength" : 1,
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "EmailType",
              "namespace" : "http://www.casenet.com/EmailType"
            },
            "enum" : [ "TO" ]
          },
          "address" : {
            "maxLength" : 254,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "EmailInfo",
          "namespace" : "http://www.casenet.com/EmailInfo"
        }
      },
      "EmailNotificationResponse" : {
        "required" : [ "assignee", "assigneeType", "frequency", "frequencyType", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "frequencyType" : {
            "type" : "string",
            "xml" : {
              "name" : "FrequencyType",
              "namespace" : "http://www.casenet.com/FrequencyType"
            },
            "enum" : [ "MINUTES", "HOURS" ]
          },
          "frequency" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assigneeType" : {
            "type" : "string",
            "xml" : {
              "name" : "EmailNotificationAssigneeType",
              "namespace" : "http://www.casenet.com/EmailNotificationAssigneeType"
            },
            "enum" : [ "USER", "TEAM", "QUEUE" ]
          },
          "assignee" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "email" : {
            "$ref" : "#/components/schemas/EmailInfo"
          }
        },
        "xml" : {
          "name" : "EmailNotificationResponse",
          "namespace" : "http://www.casenet.com/EmailNotificationResponse"
        }
      },
      "UserProfile" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "titleOther" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "gender" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "timezone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "primaryLanguage" : {
            "$ref" : "#/components/schemas/OptionValue"
          },
          "secondaryLanguages" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "serviceRegions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "locations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "serviceZipCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "skillAreas" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "specializations" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "specialNeedsAreas" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "levelsOfCare" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "acuities" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "faxNumber" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "addresses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactAddress"
            }
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "userLicenses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserLicensure"
            }
          },
          "credentials" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OptionValue"
            }
          },
          "credentialsOther" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "ldapUser" : {
            "type" : "boolean"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedByUser" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "xml" : {
          "name" : "UserProfile",
          "namespace" : "http://www.casenet.com/UserProfile"
        }
      },
      "TimeInterval" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startLocalDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endLocalDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        }
      },
      "UserSchedule" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "userTimeZone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "outputTimeZone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "scheduleItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeInterval"
            }
          }
        }
      },
      "UserScheduleCalendarRequest" : {
        "required" : [ "originalTimeZone", "userIds" ],
        "type" : "object",
        "properties" : {
          "userIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "startDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "originalTimeZone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          },
          "desiredTimeZone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          }
        }
      },
      "UserPaginatedSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchResultsColumnNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hasMoreResults" : {
            "type" : "boolean"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "searchResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserSearchResult"
            }
          }
        },
        "xml" : {
          "name" : "UserPaginatedSearchResults",
          "namespace" : "http://www.casenet.com/UserPaginatedSearchResults"
        }
      },
      "UserSearchResult" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "userType" : {
            "type" : "string",
            "enum" : [ "TRUCARE", "PROVIDER_PORTAL", "API", "MOBILE", "SYSTEM" ]
          }
        },
        "xml" : {
          "name" : "UserSearchResult",
          "namespace" : "http://www.casenet.com/UserSearchResult"
        }
      },
      "UserSearchCriteria" : {
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "firstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "lastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "userName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "sortColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserSortField"
            }
          },
          "bhpNodeFeedIdFullPath" : {
            "type" : "string"
          },
          "excludedUserTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "TRUCARE", "PROVIDER_PORTAL", "API", "MOBILE", "SYSTEM" ]
            }
          },
          "excludeDisabled" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "xml" : {
          "name" : "UserSearchCriteria",
          "namespace" : "http://www.casenet.com/UserSearchCriteria"
        }
      },
      "UserSortField" : {
        "type" : "object",
        "properties" : {
          "sortType" : {
            "type" : "string",
            "xml" : {
              "name" : "SortType",
              "namespace" : "http://www.casenet.com/SortType"
            },
            "enum" : [ "ASC", "DESC" ]
          },
          "columnType" : {
            "type" : "string",
            "xml" : {
              "name" : "UserSortColumn",
              "namespace" : "http://www.casenet.com/UserSortColumn"
            },
            "enum" : [ "FIRST_NAME", "LAST_NAME", "USER_NAME" ]
          }
        },
        "xml" : {
          "name" : "UserSortField",
          "namespace" : "http://www.casenet.com/UserSortField"
        }
      },
      "UserSearchCriteriaV2" : {
        "required" : [ "memberIds" ],
        "type" : "object",
        "properties" : {
          "startIndex" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "gotoLastPage" : {
            "type" : "boolean"
          },
          "memberIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "firstName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "lastName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "userName" : {
            "$ref" : "#/components/schemas/StringCriteria"
          },
          "excludedUserIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "excludedUserTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "TRUCARE", "PROVIDER_PORTAL", "API", "MOBILE", "SYSTEM" ]
            }
          },
          "showDisabledUsers" : {
            "type" : "boolean"
          },
          "viewUMAuthorizationType" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "UMAuthorizationType",
                "namespace" : "http://www.casenet.com/UMAuthorizationType"
              },
              "enum" : [ "INPATIENT", "SP", "RX" ]
            }
          },
          "viewArtifactType" : {
            "type" : "string",
            "enum" : [ "AUTHORIZATION", "CAREPLAN", "CASE", "QUALITYINCIDENT", "TASK" ]
          },
          "viewDiagnosisType" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "UMDiagnosisType",
                "namespace" : "http://www.casenet.com/UMDiagnosisType"
              },
              "enum" : [ "BEHAVIORAL_DSMIV", "MEDICAL", "BEHAVIORAL_DSM5" ]
            }
          }
        },
        "xml" : {
          "name" : "SearchCriteria",
          "namespace" : "http://www.casenet.com/SearchCriteria"
        }
      },
      "SetOfNonScreenActions" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "NonScreenActions",
                "namespace" : "http://www.casenet.com/NonScreenActions"
              },
              "enum" : [ "CREATE", "EDIT", "VIEW", "CLAIM", "ASSIGN" ]
            }
          }
        },
        "xml" : {
          "name" : "SetOfNonScreenActions",
          "namespace" : "http://www.casenet.com/SetOfNonScreenActions"
        }
      },
      "SetOfScreenActions" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "ScreenActions",
                "namespace" : "http://www.casenet.com/ScreenActions"
              },
              "enum" : [ "CREATE", "EDIT", "VIEW" ]
            }
          }
        },
        "xml" : {
          "name" : "SetOfScreenActions",
          "namespace" : "http://www.casenet.com/SetOfScreenActions"
        }
      },
      "UserPermissions" : {
        "type" : "object",
        "properties" : {
          "screenPermissions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SetOfScreenActions"
            }
          },
          "nonScreenPermissions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SetOfNonScreenActions"
            }
          },
          "generalPermissions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "PermissionName",
                "namespace" : "http://www.casenet.com/PermissionName"
              },
              "enum" : [ "BEHAVIORAL_HEALTH_AUTH_EDIT", "BEHAVIORAL_HEALTH_AUTH_VIEW", "MEDICAL_AUTH_EDIT", "MEDICAL_AUTH_VIEW", "AUTHORIZATION_UNLOCK", "UPDATE_LOCKED_AUTHORIZATION", "PROVIDER_PORTAL_USER", "END_TASK_OR_WORKFLOW", "REASSIGN_TASK", "EDIT_TASK_ATTEMPT_DATE", "EDIT_TASK_DETAILS", "CREATE_TASK_ATTEMPT", "REFERRAL_DECIDE_PERMISSION", "CARE_PLAN_OBJECTIVE_EDIT", "OWNERSHIP_VIEW", "OWNERSHIP_REASSIGN", "SERVICE_PROVIDER_EDIT", "TCA_USER", "TCA_RULES_VALIDATOR", "DELETE_INSTANCE_DATA_PERMISSION", "CLIENT_MEMBER_MERGE", "READY_TO_EXPORT", "NOTE_CONFIDENTIALITY", "ENCLOSURES_LOCAL_ADD", "PHONE_DIALER", "RISK_INDICATOR_UPDATE", "SCHEDULER_EDIT_TEAM_USERS_CALENDARS", "SCHEDULER_VIEW_TEAM_USERS_CALENDARS", "SCHEDULER_EDIT_ALL_USERS_CALENDARS", "SCHEDULER_VIEW_ALL_USERS_CALENDARS", "SCHEDULER_SCHED_OUTSIDE_HOURS", "MANAGE_ALL_USERS_WORK_SCHEDULE", "MANAGE_TEAM_USERS_WORK_SCHEDULE", "MEMBER_PRIVACY_OVERRIDE", "EDIT_OWN_USER_PROFILE", "VIEW_TEAM_USER_PROFILE", "EDIT_TEAM_USER_PROFILE", "ADD_USER_TO_MY_TEAM", "REMOVE_USER_FROM_MY_TEAM", "ADD_PROVIDERS_MANUALLY", "DISTRIBUTED_CORRESPONDENCE_RESEND_LETTERS", "DISTRIBUTED_CORRESPONDENCE_MODIFY_RECIPIENTS", "PROVIDER_PORTAL_PLAN_ADMINISTRATOR_ACCESS", "PROVIDER_PORTAL_AUTHORIZATION_SUBMISSION_ACCESS", "PROVIDER_PORTAL_AUTHORIZATION_VIEW_ACCESS", "MOBILE_OFFLINE_ADMIN", "SEND_MEMBER_ONLINE", "MOBILE_OFFLINE", "POST_DETERMINATION_AUTH_EDIT", "EDIT_APPEAL_DUE_DATE", "OVERRIDE_RULE_DEFAULTS", "INSIGHTS_GENERAL_ADMIN_CONFIG_VIEW", "INSIGHTS_GENERAL_ADMIN_CONFIG_WRITE", "INSIGHTS_TASK_VIEW", "INSIGHTS_TASK_WRITE", "INSIGHTS_UM_VIEW", "INSIGHTS_UM_WRITE", "INSIGHTS_UM_ADMIN_CONFIG_VIEW", "INSIGHTS_UM_ADMIN_CONFIG_WRITE", "INSIGHTS_CM_VIEW", "INSIGHTS_CM_WRITE", "INSIGHTS_CM_ADMIN_CONFIG_VIEW", "INSIGHTS_CM_ADMIN_CONFIG_WRITE", "INSIGHTS_TIME_TRACKING_VIEW", "INSIGHTS_TIME_TRACKING_WRITE", "INSIGHTS_TIME_TRACKING_ADMIN_CONFIG_VIEW", "INSIGHTS_TIME_TRACKING_ADMIN_CONFIG_WRITE" ]
            }
          },
          "portalPermissions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "PermissionName",
                "namespace" : "http://www.casenet.com/PermissionName"
              },
              "enum" : [ "BEHAVIORAL_HEALTH_AUTH_EDIT", "BEHAVIORAL_HEALTH_AUTH_VIEW", "MEDICAL_AUTH_EDIT", "MEDICAL_AUTH_VIEW", "AUTHORIZATION_UNLOCK", "UPDATE_LOCKED_AUTHORIZATION", "PROVIDER_PORTAL_USER", "END_TASK_OR_WORKFLOW", "REASSIGN_TASK", "EDIT_TASK_ATTEMPT_DATE", "EDIT_TASK_DETAILS", "CREATE_TASK_ATTEMPT", "REFERRAL_DECIDE_PERMISSION", "CARE_PLAN_OBJECTIVE_EDIT", "OWNERSHIP_VIEW", "OWNERSHIP_REASSIGN", "SERVICE_PROVIDER_EDIT", "TCA_USER", "TCA_RULES_VALIDATOR", "DELETE_INSTANCE_DATA_PERMISSION", "CLIENT_MEMBER_MERGE", "READY_TO_EXPORT", "NOTE_CONFIDENTIALITY", "ENCLOSURES_LOCAL_ADD", "PHONE_DIALER", "RISK_INDICATOR_UPDATE", "SCHEDULER_EDIT_TEAM_USERS_CALENDARS", "SCHEDULER_VIEW_TEAM_USERS_CALENDARS", "SCHEDULER_EDIT_ALL_USERS_CALENDARS", "SCHEDULER_VIEW_ALL_USERS_CALENDARS", "SCHEDULER_SCHED_OUTSIDE_HOURS", "MANAGE_ALL_USERS_WORK_SCHEDULE", "MANAGE_TEAM_USERS_WORK_SCHEDULE", "MEMBER_PRIVACY_OVERRIDE", "EDIT_OWN_USER_PROFILE", "VIEW_TEAM_USER_PROFILE", "EDIT_TEAM_USER_PROFILE", "ADD_USER_TO_MY_TEAM", "REMOVE_USER_FROM_MY_TEAM", "ADD_PROVIDERS_MANUALLY", "DISTRIBUTED_CORRESPONDENCE_RESEND_LETTERS", "DISTRIBUTED_CORRESPONDENCE_MODIFY_RECIPIENTS", "PROVIDER_PORTAL_PLAN_ADMINISTRATOR_ACCESS", "PROVIDER_PORTAL_AUTHORIZATION_SUBMISSION_ACCESS", "PROVIDER_PORTAL_AUTHORIZATION_VIEW_ACCESS", "MOBILE_OFFLINE_ADMIN", "SEND_MEMBER_ONLINE", "MOBILE_OFFLINE", "POST_DETERMINATION_AUTH_EDIT", "EDIT_APPEAL_DUE_DATE", "OVERRIDE_RULE_DEFAULTS", "INSIGHTS_GENERAL_ADMIN_CONFIG_VIEW", "INSIGHTS_GENERAL_ADMIN_CONFIG_WRITE", "INSIGHTS_TASK_VIEW", "INSIGHTS_TASK_WRITE", "INSIGHTS_UM_VIEW", "INSIGHTS_UM_WRITE", "INSIGHTS_UM_ADMIN_CONFIG_VIEW", "INSIGHTS_UM_ADMIN_CONFIG_WRITE", "INSIGHTS_CM_VIEW", "INSIGHTS_CM_WRITE", "INSIGHTS_CM_ADMIN_CONFIG_VIEW", "INSIGHTS_CM_ADMIN_CONFIG_WRITE", "INSIGHTS_TIME_TRACKING_VIEW", "INSIGHTS_TIME_TRACKING_WRITE", "INSIGHTS_TIME_TRACKING_ADMIN_CONFIG_VIEW", "INSIGHTS_TIME_TRACKING_ADMIN_CONFIG_WRITE" ]
            }
          }
        },
        "xml" : {
          "name" : "UserPermissions",
          "namespace" : "http://www.casenet.com/UserPermissions"
        }
      },
      "ReAssignOwnershipRequest" : {
        "required" : [ "artifactIds", "artifactType", "ownerUserName" ],
        "type" : "object",
        "properties" : {
          "artifactIds" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ownerUserName" : {
            "type" : "string"
          },
          "artifactType" : {
            "type" : "string",
            "enum" : [ "AUTHORIZATION", "CAREPLAN", "CASE", "QUALITYINCIDENT", "TASK" ]
          }
        }
      },
      "ChangePasswordRequest" : {
        "type" : "object",
        "properties" : {
          "oldPassword" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          }
        }
      },
      "UserArtifact" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "memberLite" : {
            "$ref" : "#/components/schemas/MemberLite"
          },
          "currentUserHasBhpAccessToMember" : {
            "type" : "boolean"
          }
        }
      },
      "SamlRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "userFirstName" : {
            "type" : "string"
          },
          "userLastName" : {
            "type" : "string"
          },
          "userType" : {
            "type" : "string",
            "enum" : [ "TRUCARE", "PROVIDER_PORTAL", "API", "MOBILE", "SYSTEM" ]
          },
          "userGroupIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UserEditableProgramsResponse" : {
        "type" : "object",
        "properties" : {
          "editableProgramIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompanyGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "nameFullPath" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "xml" : {
          "name" : "CompanyGroup",
          "namespace" : "http://www.casenet.com/CompanyGroup"
        }
      },
      "UserInfo" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "title" : {
            "type" : "string"
          },
          "phoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactPhoneNumber"
            }
          },
          "emails" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactEmail"
            }
          },
          "preferredPhoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "faxNbr" : {
            "$ref" : "#/components/schemas/PhoneNumberObject"
          },
          "credentials" : {
            "type" : "string"
          },
          "companyGroup" : {
            "$ref" : "#/components/schemas/CompanyGroup"
          },
          "userOffline" : {
            "type" : "boolean"
          },
          "lastLoginTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "calculatedTimezone" : {
            "type" : "string",
            "xml" : {
              "name" : "DateTimeZone",
              "namespace" : "http://www.casenet.com/DateTimeZone"
            },
            "enum" : [ "AFRICA_ABIDJAN", "AFRICA_ACCRA", "AFRICA_NAIROBI", "AFRICA_ALGIERS", "AFRICA_LAGOS", "AFRICA_BISSAU", "AFRICA_MAPUTO", "AFRICA_CAIRO", "AFRICA_CASABLANCA", "AFRICA_CEUTA", "AFRICA_EL_AAIUN", "AFRICA_JOHANNESBURG", "AFRICA_KHARTOUM", "AFRICA_MONROVIA", "AFRICA_NDJAMENA", "AFRICA_TRIPOLI", "AFRICA_TUNIS", "AFRICA_WINDHOEK", "AMERICA_ADAK", "AMERICA_ANCHORAGE", "AMERICA_PORT_OF_SPAIN", "AMERICA_ANTIGUA", "AMERICA_ARAGUAINA", "AMERICA_ARGENTINA_BUENOS_AIRES", "AMERICA_ARGENTINA_CATAMARCA", "AMERICA_ARGENTINA_CORDOBA", "AMERICA_ARGENTINA_JUJUY", "AMERICA_ARGENTINA_LA_RIOJA", "AMERICA_ARGENTINA_MENDOZA", "AMERICA_ARGENTINA_RIO_GALLEGOS", "AMERICA_ARGENTINA_SALTA", "AMERICA_ARGENTINA_SAN_JUAN", "AMERICA_ARGENTINA_SAN_LUIS", "AMERICA_ARGENTINA_TUCUMAN", "AMERICA_ARGENTINA_USHUAIA", "AMERICA_CURACAO", "AMERICA_ASUNCION", "AMERICA_ATIKOKAN", "AMERICA_BAHIA", "AMERICA_BAHIA_BANDERAS", "AMERICA_BARBADOS", "AMERICA_BELEM", "AMERICA_BELIZE", "AMERICA_BLANC_SABLON", "AMERICA_BOA_VISTA", "AMERICA_BOGOTA", "AMERICA_BOISE", "AMERICA_CAMBRIDGE_BAY", "AMERICA_CAMPO_GRANDE", "AMERICA_CANCUN", "AMERICA_CARACAS", "AMERICA_CAYENNE", "AMERICA_CAYMAN", "AMERICA_CHICAGO", "AMERICA_CHIHUAHUA", "AMERICA_COSTA_RICA", "AMERICA_CRESTON", "AMERICA_CUIABA", "AMERICA_DANMARKSHAVN", "AMERICA_DAWSON", "AMERICA_DAWSON_CREEK", "AMERICA_DENVER", "AMERICA_DETROIT", "AMERICA_EDMONTON", "AMERICA_EIRUNEPE", "AMERICA_EL_SALVADOR", "AMERICA_TIJUANA", "AMERICA_INDIANA_INDIANAPOLIS", "AMERICA_FORTALEZA", "AMERICA_GLACE_BAY", "AMERICA_GODTHAB", "AMERICA_GOOSE_BAY", "AMERICA_GRAND_TURK", "AMERICA_GUATEMALA", "AMERICA_GUAYAQUIL", "AMERICA_GUYANA", "AMERICA_HALIFAX", "AMERICA_HAVANA", "AMERICA_HERMOSILLO", "AMERICA_INDIANA_KNOX", "AMERICA_INDIANA_MARENGO", "AMERICA_INDIANA_PETERSBURG", "AMERICA_INDIANA_TELL_CITY", "AMERICA_INDIANA_VEVAY", "AMERICA_INDIANA_VINCENNES", "AMERICA_INDIANA_WINAMAC", "AMERICA_INUVIK", "AMERICA_IQALUIT", "AMERICA_JAMAICA", "AMERICA_JUNEAU", "AMERICA_KENTUCKY_LOUISVILLE", "AMERICA_KENTUCKY_MONTICELLO", "AMERICA_LA_PAZ", "AMERICA_LIMA", "AMERICA_LOS_ANGELES", "AMERICA_MACEIO", "AMERICA_MANAGUA", "AMERICA_MANAUS", "AMERICA_MARTINIQUE", "AMERICA_MATAMOROS", "AMERICA_MAZATLAN", "AMERICA_MENOMINEE", "AMERICA_MERIDA", "AMERICA_METLAKATLA", "AMERICA_MEXICO_CITY", "AMERICA_MIQUELON", "AMERICA_MONCTON", "AMERICA_MONTERREY", "AMERICA_MONTEVIDEO", "AMERICA_MONTREAL", "AMERICA_NASSAU", "AMERICA_NEW_YORK", "AMERICA_NIPIGON", "AMERICA_NOME", "AMERICA_NORONHA", "AMERICA_NORTH_DAKOTA_BEULAH", "AMERICA_NORTH_DAKOTA_CENTER", "AMERICA_NORTH_DAKOTA_NEW_SALEM", "AMERICA_OJINAGA", "AMERICA_PANAMA", "AMERICA_PANGNIRTUNG", "AMERICA_PARAMARIBO", "AMERICA_PHOENIX", "AMERICA_PORT_AU_PRINCE", "AMERICA_RIO_BRANCO", "AMERICA_PORTO_VELHO", "AMERICA_PUERTO_RICO", "AMERICA_RAINY_RIVER", "AMERICA_RANKIN_INLET", "AMERICA_RECIFE", "AMERICA_REGINA", "AMERICA_RESOLUTE", "AMERICA_SANTA_ISABEL", "AMERICA_SANTAREM", "AMERICA_SANTIAGO", "AMERICA_SANTO_DOMINGO", "AMERICA_SAO_PAULO", "AMERICA_SCORESBYSUND", "AMERICA_SITKA", "AMERICA_ST_JOHNS", "AMERICA_SWIFT_CURRENT", "AMERICA_TEGUCIGALPA", "AMERICA_THULE", "AMERICA_THUNDER_BAY", "AMERICA_TORONTO", "AMERICA_VANCOUVER", "AMERICA_WHITEHORSE", "AMERICA_WINNIPEG", "AMERICA_YAKUTAT", "AMERICA_YELLOWKNIFE", "ANTARCTICA_CASEY", "ANTARCTICA_DAVIS", "ANTARCTICA_DUMONTDURVILLE", "ANTARCTICA_MACQUARIE", "ANTARCTICA_MAWSON", "PACIFIC_AUCKLAND", "ANTARCTICA_PALMER", "ANTARCTICA_ROTHERA", "ANTARCTICA_SYOWA", "ANTARCTICA_TROLL", "ANTARCTICA_VOSTOK", "EUROPE_OSLO", "ASIA_ADEN", "ASIA_ALMATY", "ASIA_AMMAN", "ASIA_ANADYR", "ASIA_AQTAU", "ASIA_AQTOBE", "ASIA_ASHGABAT", "ASIA_BAGHDAD", "ASIA_BAHRAIN", "ASIA_BAKU", "ASIA_BANGKOK", "ASIA_BEIRUT", "ASIA_BISHKEK", "ASIA_BRUNEI", "ASIA_KOLKATA", "ASIA_CHITA", "ASIA_CHOIBALSAN", "ASIA_SHANGHAI", "ASIA_COLOMBO", "ASIA_DHAKA", "ASIA_DAMASCUS", "ASIA_DILI", "ASIA_DUBAI", "ASIA_DUSHANBE", "ASIA_GAZA", "ASIA_HEBRON", "ASIA_HO_CHI_MINH", "ASIA_HONG_KONG", "ASIA_HOVD", "ASIA_IRKUTSK", "EUROPE_ISTANBUL", "ASIA_JAKARTA", "ASIA_JAYAPURA", "ASIA_JERUSALEM", "ASIA_KABUL", "ASIA_KAMCHATKA", "ASIA_KARACHI", "ASIA_URUMQI", "ASIA_KATHMANDU", "ASIA_KHANDYGA", "ASIA_KRASNOYARSK", "ASIA_KUALA_LUMPUR", "ASIA_KUCHING", "ASIA_KUWAIT", "ASIA_MACAU", "ASIA_MAGADAN", "ASIA_MAKASSAR", "ASIA_MANILA", "ASIA_MUSCAT", "ASIA_NICOSIA", "ASIA_NOVOKUZNETSK", "ASIA_NOVOSIBIRSK", "ASIA_OMSK", "ASIA_ORAL", "ASIA_PONTIANAK", "ASIA_PYONGYANG", "ASIA_QATAR", "ASIA_QYZYLORDA", "ASIA_RANGOON", "ASIA_RIYADH", "ASIA_SAKHALIN", "ASIA_SAMARKAND", "ASIA_SEOUL", "ASIA_SINGAPORE", "ASIA_SREDNEKOLYMSK", "ASIA_TAIPEI", "ASIA_TASHKENT", "ASIA_TBILISI", "ASIA_TEHRAN", "ASIA_THIMPHU", "ASIA_TOKYO", "ASIA_ULAANBAATAR", "ASIA_UST_NERA", "ASIA_VLADIVOSTOK", "ASIA_YAKUTSK", "ASIA_YEKATERINBURG", "ASIA_YEREVAN", "ATLANTIC_AZORES", "ATLANTIC_BERMUDA", "ATLANTIC_CANARY", "ATLANTIC_CAPE_VERDE", "ATLANTIC_FAROE", "ATLANTIC_MADEIRA", "ATLANTIC_REYKJAVIK", "ATLANTIC_SOUTH_GEORGIA", "ATLANTIC_STANLEY", "AUSTRALIA_SYDNEY", "AUSTRALIA_ADELAIDE", "AUSTRALIA_BRISBANE", "AUSTRALIA_BROKEN_HILL", "AUSTRALIA_CURRIE", "AUSTRALIA_DARWIN", "AUSTRALIA_EUCLA", "AUSTRALIA_HOBART", "AUSTRALIA_LORD_HOWE", "AUSTRALIA_LINDEMAN", "AUSTRALIA_MELBOURNE", "AUSTRALIA_PERTH", "CET", "CST6CDT", "PACIFIC_EASTER", "EET", "EST", "EST5EDT", "EUROPE_DUBLIN", "ETC_GMT", "ETC_GMT_PLUS_1", "ETC_GMT_PLUS_10", "ETC_GMT_PLUS_11", "ETC_GMT_PLUS_12", "ETC_GMT_PLUS_2", "ETC_GMT_PLUS_3", "ETC_GMT_PLUS_4", "ETC_GMT_PLUS_5", "ETC_GMT_PLUS_6", "ETC_GMT_PLUS_7", "ETC_GMT_PLUS_8", "ETC_GMT_PLUS_9", "ETC_GMT_MINUS_1", "ETC_GMT_MINUS_10", "ETC_GMT_MINUS_11", "ETC_GMT_MINUS_12", "ETC_GMT_MINUS_13", "ETC_GMT_MINUS_14", "ETC_GMT_MINUS_2", "ETC_GMT_MINUS_3", "ETC_GMT_MINUS_4", "ETC_GMT_MINUS_5", "ETC_GMT_MINUS_6", "ETC_GMT_MINUS_7", "ETC_GMT_MINUS_8", "ETC_GMT_MINUS_9", "ETC_UCT", "ETC_UTC", "EUROPE_AMSTERDAM", "EUROPE_ANDORRA", "EUROPE_ATHENS", "EUROPE_LONDON", "EUROPE_BELGRADE", "EUROPE_BERLIN", "EUROPE_PRAGUE", "EUROPE_BRUSSELS", "EUROPE_BUCHAREST", "EUROPE_BUDAPEST", "EUROPE_ZURICH", "EUROPE_CHISINAU", "EUROPE_COPENHAGEN", "EUROPE_GIBRALTAR", "EUROPE_HELSINKI", "EUROPE_KALININGRAD", "EUROPE_KIEV", "EUROPE_LISBON", "EUROPE_LUXEMBOURG", "EUROPE_MADRID", "EUROPE_MALTA", "EUROPE_MINSK", "EUROPE_MONACO", "EUROPE_MOSCOW", "EUROPE_PARIS", "EUROPE_RIGA", "EUROPE_ROME", "EUROPE_SAMARA", "EUROPE_SIMFEROPOL", "EUROPE_SOFIA", "EUROPE_STOCKHOLM", "EUROPE_TALLINN", "EUROPE_TIRANE", "EUROPE_UZHGOROD", "EUROPE_VIENNA", "EUROPE_VILNIUS", "EUROPE_VOLGOGRAD", "EUROPE_WARSAW", "EUROPE_ZAPOROZHYE", "HST", "INDIAN_CHAGOS", "INDIAN_CHRISTMAS", "INDIAN_COCOS", "INDIAN_KERGUELEN", "INDIAN_MAHE", "INDIAN_MALDIVES", "INDIAN_MAURITIUS", "INDIAN_REUNION", "PACIFIC_KWAJALEIN", "MET", "MST", "MST7MDT", "PACIFIC_CHATHAM", "PST8PDT", "PACIFIC_APIA", "PACIFIC_BOUGAINVILLE", "PACIFIC_CHUUK", "PACIFIC_EFATE", "PACIFIC_ENDERBURY", "PACIFIC_FAKAOFO", "PACIFIC_FIJI", "PACIFIC_FUNAFUTI", "PACIFIC_GALAPAGOS", "PACIFIC_GAMBIER", "PACIFIC_GUADALCANAL", "PACIFIC_GUAM", "PACIFIC_HONOLULU", "PACIFIC_KIRITIMATI", "PACIFIC_KOSRAE", "PACIFIC_MAJURO", "PACIFIC_MARQUESAS", "PACIFIC_MIDWAY", "PACIFIC_NAURU", "PACIFIC_NIUE", "PACIFIC_NORFOLK", "PACIFIC_NOUMEA", "PACIFIC_PAGO_PAGO", "PACIFIC_PALAU", "PACIFIC_PITCAIRN", "PACIFIC_POHNPEI", "PACIFIC_PORT_MORESBY", "PACIFIC_RAROTONGA", "PACIFIC_SAIPAN", "PACIFIC_TAHITI", "PACIFIC_TARAWA", "PACIFIC_TONGATAPU", "PACIFIC_WAKE", "PACIFIC_WALLIS", "UTC", "WET" ]
          }
        },
        "xml" : {
          "name" : "UserInfo",
          "namespace" : "http://www.casenet.com/UserInfo"
        }
      },
      "TeamSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "numberOfUsers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "TeamInfoFull",
          "namespace" : "http://www.casenet.com/TeamInfoFull"
        }
      }
    }
  }
}